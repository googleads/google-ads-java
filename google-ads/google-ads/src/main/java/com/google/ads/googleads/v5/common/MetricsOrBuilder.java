// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v5/common/metrics.proto

package com.google.ads.googleads.v5.common;

public interface MetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.ads.googleads.v5.common.Metrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>double absolute_top_impression_percentage = 183;</code>
   * @return Whether the absoluteTopImpressionPercentage field is set.
   */
  boolean hasAbsoluteTopImpressionPercentage();
  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>double absolute_top_impression_percentage = 183;</code>
   * @return The absoluteTopImpressionPercentage.
   */
  double getAbsoluteTopImpressionPercentage();

  /**
   * <pre>
   * Average cost of viewable impressions (`active_view_impressions`).
   * </pre>
   *
   * <code>double active_view_cpm = 184;</code>
   * @return Whether the activeViewCpm field is set.
   */
  boolean hasActiveViewCpm();
  /**
   * <pre>
   * Average cost of viewable impressions (`active_view_impressions`).
   * </pre>
   *
   * <code>double active_view_cpm = 184;</code>
   * @return The activeViewCpm.
   */
  double getActiveViewCpm();

  /**
   * <pre>
   * Active view measurable clicks divided by active view viewable impressions.
   * This metric is reported only for display network.
   * </pre>
   *
   * <code>double active_view_ctr = 185;</code>
   * @return Whether the activeViewCtr field is set.
   */
  boolean hasActiveViewCtr();
  /**
   * <pre>
   * Active view measurable clicks divided by active view viewable impressions.
   * This metric is reported only for display network.
   * </pre>
   *
   * <code>double active_view_ctr = 185;</code>
   * @return The activeViewCtr.
   */
  double getActiveViewCtr();

  /**
   * <pre>
   * A measurement of how often your ad has become viewable on a Display
   * Network site.
   * </pre>
   *
   * <code>int64 active_view_impressions = 186;</code>
   * @return Whether the activeViewImpressions field is set.
   */
  boolean hasActiveViewImpressions();
  /**
   * <pre>
   * A measurement of how often your ad has become viewable on a Display
   * Network site.
   * </pre>
   *
   * <code>int64 active_view_impressions = 186;</code>
   * @return The activeViewImpressions.
   */
  long getActiveViewImpressions();

  /**
   * <pre>
   * The ratio of impressions that could be measured by Active View over the
   * number of served impressions.
   * </pre>
   *
   * <code>double active_view_measurability = 187;</code>
   * @return Whether the activeViewMeasurability field is set.
   */
  boolean hasActiveViewMeasurability();
  /**
   * <pre>
   * The ratio of impressions that could be measured by Active View over the
   * number of served impressions.
   * </pre>
   *
   * <code>double active_view_measurability = 187;</code>
   * @return The activeViewMeasurability.
   */
  double getActiveViewMeasurability();

  /**
   * <pre>
   * The cost of the impressions you received that were measurable by Active
   * View.
   * </pre>
   *
   * <code>int64 active_view_measurable_cost_micros = 188;</code>
   * @return Whether the activeViewMeasurableCostMicros field is set.
   */
  boolean hasActiveViewMeasurableCostMicros();
  /**
   * <pre>
   * The cost of the impressions you received that were measurable by Active
   * View.
   * </pre>
   *
   * <code>int64 active_view_measurable_cost_micros = 188;</code>
   * @return The activeViewMeasurableCostMicros.
   */
  long getActiveViewMeasurableCostMicros();

  /**
   * <pre>
   * The number of times your ads are appearing on placements in positions
   * where they can be seen.
   * </pre>
   *
   * <code>int64 active_view_measurable_impressions = 189;</code>
   * @return Whether the activeViewMeasurableImpressions field is set.
   */
  boolean hasActiveViewMeasurableImpressions();
  /**
   * <pre>
   * The number of times your ads are appearing on placements in positions
   * where they can be seen.
   * </pre>
   *
   * <code>int64 active_view_measurable_impressions = 189;</code>
   * @return The activeViewMeasurableImpressions.
   */
  long getActiveViewMeasurableImpressions();

  /**
   * <pre>
   * The percentage of time when your ad appeared on an Active View enabled site
   * (measurable impressions) and was viewable (viewable impressions).
   * </pre>
   *
   * <code>double active_view_viewability = 190;</code>
   * @return Whether the activeViewViewability field is set.
   */
  boolean hasActiveViewViewability();
  /**
   * <pre>
   * The percentage of time when your ad appeared on an Active View enabled site
   * (measurable impressions) and was viewable (viewable impressions).
   * </pre>
   *
   * <code>double active_view_viewability = 190;</code>
   * @return The activeViewViewability.
   */
  double getActiveViewViewability();

  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>double all_conversions_from_interactions_rate = 191;</code>
   * @return Whether the allConversionsFromInteractionsRate field is set.
   */
  boolean hasAllConversionsFromInteractionsRate();
  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>double all_conversions_from_interactions_rate = 191;</code>
   * @return The allConversionsFromInteractionsRate.
   */
  double getAllConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>double all_conversions_value = 192;</code>
   * @return Whether the allConversionsValue field is set.
   */
  boolean hasAllConversionsValue();
  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>double all_conversions_value = 192;</code>
   * @return The allConversionsValue.
   */
  double getAllConversionsValue();

  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>double all_conversions = 193;</code>
   * @return Whether the allConversions field is set.
   */
  boolean hasAllConversions();
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>double all_conversions = 193;</code>
   * @return The allConversions.
   */
  double getAllConversions();

  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>double all_conversions_value_per_cost = 194;</code>
   * @return Whether the allConversionsValuePerCost field is set.
   */
  boolean hasAllConversionsValuePerCost();
  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>double all_conversions_value_per_cost = 194;</code>
   * @return The allConversionsValuePerCost.
   */
  double getAllConversionsValuePerCost();

  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_click_to_call = 195;</code>
   * @return Whether the allConversionsFromClickToCall field is set.
   */
  boolean hasAllConversionsFromClickToCall();
  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_click_to_call = 195;</code>
   * @return The allConversionsFromClickToCall.
   */
  double getAllConversionsFromClickToCall();

  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_directions = 196;</code>
   * @return Whether the allConversionsFromDirections field is set.
   */
  boolean hasAllConversionsFromDirections();
  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_directions = 196;</code>
   * @return The allConversionsFromDirections.
   */
  double getAllConversionsFromDirections();

  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return Whether the allConversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasAllConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return The allConversionsFromInteractionsValuePerInteraction.
   */
  double getAllConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_menu = 198;</code>
   * @return Whether the allConversionsFromMenu field is set.
   */
  boolean hasAllConversionsFromMenu();
  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_menu = 198;</code>
   * @return The allConversionsFromMenu.
   */
  double getAllConversionsFromMenu();

  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_order = 199;</code>
   * @return Whether the allConversionsFromOrder field is set.
   */
  boolean hasAllConversionsFromOrder();
  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_order = 199;</code>
   * @return The allConversionsFromOrder.
   */
  double getAllConversionsFromOrder();

  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_other_engagement = 200;</code>
   * @return Whether the allConversionsFromOtherEngagement field is set.
   */
  boolean hasAllConversionsFromOtherEngagement();
  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_other_engagement = 200;</code>
   * @return The allConversionsFromOtherEngagement.
   */
  double getAllConversionsFromOtherEngagement();

  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_store_visit = 201;</code>
   * @return Whether the allConversionsFromStoreVisit field is set.
   */
  boolean hasAllConversionsFromStoreVisit();
  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_store_visit = 201;</code>
   * @return The allConversionsFromStoreVisit.
   */
  double getAllConversionsFromStoreVisit();

  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_store_website = 202;</code>
   * @return Whether the allConversionsFromStoreWebsite field is set.
   */
  boolean hasAllConversionsFromStoreWebsite();
  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>double all_conversions_from_store_website = 202;</code>
   * @return The allConversionsFromStoreWebsite.
   */
  double getAllConversionsFromStoreWebsite();

  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>double average_cost = 203;</code>
   * @return Whether the averageCost field is set.
   */
  boolean hasAverageCost();
  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>double average_cost = 203;</code>
   * @return The averageCost.
   */
  double getAverageCost();

  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>double average_cpc = 204;</code>
   * @return Whether the averageCpc field is set.
   */
  boolean hasAverageCpc();
  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>double average_cpc = 204;</code>
   * @return The averageCpc.
   */
  double getAverageCpc();

  /**
   * <pre>
   * The average amount that you've been charged for an ad engagement. This
   * amount is the total cost of all ad engagements divided by the total number
   * of ad engagements.
   * </pre>
   *
   * <code>double average_cpe = 205;</code>
   * @return Whether the averageCpe field is set.
   */
  boolean hasAverageCpe();
  /**
   * <pre>
   * The average amount that you've been charged for an ad engagement. This
   * amount is the total cost of all ad engagements divided by the total number
   * of ad engagements.
   * </pre>
   *
   * <code>double average_cpe = 205;</code>
   * @return The averageCpe.
   */
  double getAverageCpe();

  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>double average_cpm = 206;</code>
   * @return Whether the averageCpm field is set.
   */
  boolean hasAverageCpm();
  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>double average_cpm = 206;</code>
   * @return The averageCpm.
   */
  double getAverageCpm();

  /**
   * <pre>
   * The average amount you pay each time someone views your ad.
   * The average CPV is defined by the total cost of all ad views divided by
   * the number of views.
   * </pre>
   *
   * <code>double average_cpv = 207;</code>
   * @return Whether the averageCpv field is set.
   */
  boolean hasAverageCpv();
  /**
   * <pre>
   * The average amount you pay each time someone views your ad.
   * The average CPV is defined by the total cost of all ad views divided by
   * the number of views.
   * </pre>
   *
   * <code>double average_cpv = 207;</code>
   * @return The averageCpv.
   */
  double getAverageCpv();

  /**
   * <pre>
   * Average number of pages viewed per session.
   * </pre>
   *
   * <code>double average_page_views = 208;</code>
   * @return Whether the averagePageViews field is set.
   */
  boolean hasAveragePageViews();
  /**
   * <pre>
   * Average number of pages viewed per session.
   * </pre>
   *
   * <code>double average_page_views = 208;</code>
   * @return The averagePageViews.
   */
  double getAveragePageViews();

  /**
   * <pre>
   * Total duration of all sessions (in seconds) / number of sessions. Imported
   * from Google Analytics.
   * </pre>
   *
   * <code>double average_time_on_site = 209;</code>
   * @return Whether the averageTimeOnSite field is set.
   */
  boolean hasAverageTimeOnSite();
  /**
   * <pre>
   * Total duration of all sessions (in seconds) / number of sessions. Imported
   * from Google Analytics.
   * </pre>
   *
   * <code>double average_time_on_site = 209;</code>
   * @return The averageTimeOnSite.
   */
  double getAverageTimeOnSite();

  /**
   * <pre>
   * An indication of how other advertisers are bidding on similar products.
   * </pre>
   *
   * <code>double benchmark_average_max_cpc = 210;</code>
   * @return Whether the benchmarkAverageMaxCpc field is set.
   */
  boolean hasBenchmarkAverageMaxCpc();
  /**
   * <pre>
   * An indication of how other advertisers are bidding on similar products.
   * </pre>
   *
   * <code>double benchmark_average_max_cpc = 210;</code>
   * @return The benchmarkAverageMaxCpc.
   */
  double getBenchmarkAverageMaxCpc();

  /**
   * <pre>
   * An indication on how other advertisers' Shopping ads for similar products
   * are performing based on how often people who see their ad click on it.
   * </pre>
   *
   * <code>double benchmark_ctr = 211;</code>
   * @return Whether the benchmarkCtr field is set.
   */
  boolean hasBenchmarkCtr();
  /**
   * <pre>
   * An indication on how other advertisers' Shopping ads for similar products
   * are performing based on how often people who see their ad click on it.
   * </pre>
   *
   * <code>double benchmark_ctr = 211;</code>
   * @return The benchmarkCtr.
   */
  double getBenchmarkCtr();

  /**
   * <pre>
   * Percentage of clicks where the user only visited a single page on your
   * site. Imported from Google Analytics.
   * </pre>
   *
   * <code>double bounce_rate = 212;</code>
   * @return Whether the bounceRate field is set.
   */
  boolean hasBounceRate();
  /**
   * <pre>
   * Percentage of clicks where the user only visited a single page on your
   * site. Imported from Google Analytics.
   * </pre>
   *
   * <code>double bounce_rate = 212;</code>
   * @return The bounceRate.
   */
  double getBounceRate();

  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>int64 clicks = 131;</code>
   * @return Whether the clicks field is set.
   */
  boolean hasClicks();
  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>int64 clicks = 131;</code>
   * @return The clicks.
   */
  long getClicks();

  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 combined_clicks = 156;</code>
   * @return Whether the combinedClicks field is set.
   */
  boolean hasCombinedClicks();
  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 combined_clicks = 156;</code>
   * @return The combinedClicks.
   */
  long getCombinedClicks();

  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked (combined_clicks) divided by combined_queries. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>double combined_clicks_per_query = 157;</code>
   * @return Whether the combinedClicksPerQuery field is set.
   */
  boolean hasCombinedClicksPerQuery();
  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked (combined_clicks) divided by combined_queries. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>double combined_clicks_per_query = 157;</code>
   * @return The combinedClicksPerQuery.
   */
  double getCombinedClicksPerQuery();

  /**
   * <pre>
   * The number of searches that returned pages from your site in the unpaid
   * results or showed one of your text ads. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 combined_queries = 158;</code>
   * @return Whether the combinedQueries field is set.
   */
  boolean hasCombinedQueries();
  /**
   * <pre>
   * The number of searches that returned pages from your site in the unpaid
   * results or showed one of your text ads. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 combined_queries = 158;</code>
   * @return The combinedQueries.
   */
  long getCombinedQueries();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double content_budget_lost_impression_share = 159;</code>
   * @return Whether the contentBudgetLostImpressionShare field is set.
   */
  boolean hasContentBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double content_budget_lost_impression_share = 159;</code>
   * @return The contentBudgetLostImpressionShare.
   */
  double getContentBudgetLostImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double content_impression_share = 160;</code>
   * @return Whether the contentImpressionShare field is set.
   */
  boolean hasContentImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double content_impression_share = 160;</code>
   * @return The contentImpressionShare.
   */
  double getContentImpressionShare();

  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (e.g. because the tag was fired from a
   * browser that did not previously click an ad from an appropriate
   * advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_received_request_date_time = 161;</code>
   * @return Whether the conversionLastReceivedRequestDateTime field is set.
   */
  boolean hasConversionLastReceivedRequestDateTime();
  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (e.g. because the tag was fired from a
   * browser that did not previously click an ad from an appropriate
   * advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_received_request_date_time = 161;</code>
   * @return The conversionLastReceivedRequestDateTime.
   */
  java.lang.String getConversionLastReceivedRequestDateTime();
  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (e.g. because the tag was fired from a
   * browser that did not previously click an ad from an appropriate
   * advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_received_request_date_time = 161;</code>
   * @return The bytes for conversionLastReceivedRequestDateTime.
   */
  com.google.protobuf.ByteString
      getConversionLastReceivedRequestDateTimeBytes();

  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_conversion_date = 162;</code>
   * @return Whether the conversionLastConversionDate field is set.
   */
  boolean hasConversionLastConversionDate();
  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_conversion_date = 162;</code>
   * @return The conversionLastConversionDate.
   */
  java.lang.String getConversionLastConversionDate();
  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>string conversion_last_conversion_date = 162;</code>
   * @return The bytes for conversionLastConversionDate.
   */
  com.google.protobuf.ByteString
      getConversionLastConversionDateBytes();

  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double content_rank_lost_impression_share = 163;</code>
   * @return Whether the contentRankLostImpressionShare field is set.
   */
  boolean hasContentRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double content_rank_lost_impression_share = 163;</code>
   * @return The contentRankLostImpressionShare.
   */
  double getContentRankLostImpressionShare();

  /**
   * <pre>
   * Conversions from interactions divided by the number of ad interactions
   * (such as clicks for text ads or views for video ads). This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double conversions_from_interactions_rate = 164;</code>
   * @return Whether the conversionsFromInteractionsRate field is set.
   */
  boolean hasConversionsFromInteractionsRate();
  /**
   * <pre>
   * Conversions from interactions divided by the number of ad interactions
   * (such as clicks for text ads or views for video ads). This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double conversions_from_interactions_rate = 164;</code>
   * @return The conversionsFromInteractionsRate.
   */
  double getConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions_value = 165;</code>
   * @return Whether the conversionsValue field is set.
   */
  boolean hasConversionsValue();
  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions_value = 165;</code>
   * @return The conversionsValue.
   */
  double getConversionsValue();

  /**
   * <pre>
   * The value of conversions divided by the cost of ad interactions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>double conversions_value_per_cost = 166;</code>
   * @return Whether the conversionsValuePerCost field is set.
   */
  boolean hasConversionsValuePerCost();
  /**
   * <pre>
   * The value of conversions divided by the cost of ad interactions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>double conversions_value_per_cost = 166;</code>
   * @return The conversionsValuePerCost.
   */
  double getConversionsValuePerCost();

  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return Whether the conversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return The conversionsFromInteractionsValuePerInteraction.
   */
  double getConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions = 168;</code>
   * @return Whether the conversions field is set.
   */
  boolean hasConversions();
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double conversions = 168;</code>
   * @return The conversions.
   */
  double getConversions();

  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>int64 cost_micros = 169;</code>
   * @return Whether the costMicros field is set.
   */
  boolean hasCostMicros();
  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>int64 cost_micros = 169;</code>
   * @return The costMicros.
   */
  long getCostMicros();

  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>double cost_per_all_conversions = 170;</code>
   * @return Whether the costPerAllConversions field is set.
   */
  boolean hasCostPerAllConversions();
  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>double cost_per_all_conversions = 170;</code>
   * @return The costPerAllConversions.
   */
  double getCostPerAllConversions();

  /**
   * <pre>
   * The cost of ad interactions divided by conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double cost_per_conversion = 171;</code>
   * @return Whether the costPerConversion field is set.
   */
  boolean hasCostPerConversion();
  /**
   * <pre>
   * The cost of ad interactions divided by conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double cost_per_conversion = 171;</code>
   * @return The costPerConversion.
   */
  double getCostPerConversion();

  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double cost_per_current_model_attributed_conversion = 172;</code>
   * @return Whether the costPerCurrentModelAttributedConversion field is set.
   */
  boolean hasCostPerCurrentModelAttributedConversion();
  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double cost_per_current_model_attributed_conversion = 172;</code>
   * @return The costPerCurrentModelAttributedConversion.
   */
  double getCostPerCurrentModelAttributedConversion();

  /**
   * <pre>
   * Conversions from when a customer clicks on a Google Ads ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>double cross_device_conversions = 173;</code>
   * @return Whether the crossDeviceConversions field is set.
   */
  boolean hasCrossDeviceConversions();
  /**
   * <pre>
   * Conversions from when a customer clicks on a Google Ads ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>double cross_device_conversions = 173;</code>
   * @return The crossDeviceConversions.
   */
  double getCrossDeviceConversions();

  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>double ctr = 174;</code>
   * @return Whether the ctr field is set.
   */
  boolean hasCtr();
  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>double ctr = 174;</code>
   * @return The ctr.
   */
  double getCtr();

  /**
   * <pre>
   * Shows how your historic conversions data would look under the attribution
   * model you've currently selected. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions = 175;</code>
   * @return Whether the currentModelAttributedConversions field is set.
   */
  boolean hasCurrentModelAttributedConversions();
  /**
   * <pre>
   * Shows how your historic conversions data would look under the attribution
   * model you've currently selected. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions = 175;</code>
   * @return The currentModelAttributedConversions.
   */
  double getCurrentModelAttributedConversions();

  /**
   * <pre>
   * Current model attributed conversions from interactions divided by the
   * number of ad interactions (such as clicks for text ads or views for video
   * ads). This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_from_interactions_rate = 176;</code>
   * @return Whether the currentModelAttributedConversionsFromInteractionsRate field is set.
   */
  boolean hasCurrentModelAttributedConversionsFromInteractionsRate();
  /**
   * <pre>
   * Current model attributed conversions from interactions divided by the
   * number of ad interactions (such as clicks for text ads or views for video
   * ads). This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_from_interactions_rate = 176;</code>
   * @return The currentModelAttributedConversionsFromInteractionsRate.
   */
  double getCurrentModelAttributedConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of current model attributed conversions from interactions divided
   * by the number of ad interactions. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_from_interactions_value_per_interaction = 177;</code>
   * @return Whether the currentModelAttributedConversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasCurrentModelAttributedConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of current model attributed conversions from interactions divided
   * by the number of ad interactions. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_from_interactions_value_per_interaction = 177;</code>
   * @return The currentModelAttributedConversionsFromInteractionsValuePerInteraction.
   */
  double getCurrentModelAttributedConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The value of current model attributed conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_value = 178;</code>
   * @return Whether the currentModelAttributedConversionsValue field is set.
   */
  boolean hasCurrentModelAttributedConversionsValue();
  /**
   * <pre>
   * The value of current model attributed conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_value = 178;</code>
   * @return The currentModelAttributedConversionsValue.
   */
  double getCurrentModelAttributedConversionsValue();

  /**
   * <pre>
   * The value of current model attributed conversions divided by the cost of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_value_per_cost = 179;</code>
   * @return Whether the currentModelAttributedConversionsValuePerCost field is set.
   */
  boolean hasCurrentModelAttributedConversionsValuePerCost();
  /**
   * <pre>
   * The value of current model attributed conversions divided by the cost of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double current_model_attributed_conversions_value_per_cost = 179;</code>
   * @return The currentModelAttributedConversionsValuePerCost.
   */
  double getCurrentModelAttributedConversionsValuePerCost();

  /**
   * <pre>
   * How often people engage with your ad after it's shown to them. This is the
   * number of ad expansions divided by the number of times your ad is shown.
   * </pre>
   *
   * <code>double engagement_rate = 180;</code>
   * @return Whether the engagementRate field is set.
   */
  boolean hasEngagementRate();
  /**
   * <pre>
   * How often people engage with your ad after it's shown to them. This is the
   * number of ad expansions divided by the number of times your ad is shown.
   * </pre>
   *
   * <code>double engagement_rate = 180;</code>
   * @return The engagementRate.
   */
  double getEngagementRate();

  /**
   * <pre>
   * The number of engagements.
   * An engagement occurs when a viewer expands your Lightbox ad. Also, in the
   * future, other ad types may support engagement metrics.
   * </pre>
   *
   * <code>int64 engagements = 181;</code>
   * @return Whether the engagements field is set.
   */
  boolean hasEngagements();
  /**
   * <pre>
   * The number of engagements.
   * An engagement occurs when a viewer expands your Lightbox ad. Also, in the
   * future, other ad types may support engagement metrics.
   * </pre>
   *
   * <code>int64 engagements = 181;</code>
   * @return The engagements.
   */
  long getEngagements();

  /**
   * <pre>
   * Average lead value based on clicks.
   * </pre>
   *
   * <code>double hotel_average_lead_value_micros = 213;</code>
   * @return Whether the hotelAverageLeadValueMicros field is set.
   */
  boolean hasHotelAverageLeadValueMicros();
  /**
   * <pre>
   * Average lead value based on clicks.
   * </pre>
   *
   * <code>double hotel_average_lead_value_micros = 213;</code>
   * @return The hotelAverageLeadValueMicros.
   */
  double getHotelAverageLeadValueMicros();

  /**
   * <pre>
   * The average price difference between the price offered by reporting hotel
   * advertiser and the cheapest price offered by the competing advertiser.
   * </pre>
   *
   * <code>double hotel_price_difference_percentage = 214;</code>
   * @return Whether the hotelPriceDifferencePercentage field is set.
   */
  boolean hasHotelPriceDifferencePercentage();
  /**
   * <pre>
   * The average price difference between the price offered by reporting hotel
   * advertiser and the cheapest price offered by the competing advertiser.
   * </pre>
   *
   * <code>double hotel_price_difference_percentage = 214;</code>
   * @return The hotelPriceDifferencePercentage.
   */
  double getHotelPriceDifferencePercentage();

  /**
   * <pre>
   * The number of impressions that hotel partners could have had given their
   * feed performance.
   * </pre>
   *
   * <code>int64 hotel_eligible_impressions = 215;</code>
   * @return Whether the hotelEligibleImpressions field is set.
   */
  boolean hasHotelEligibleImpressions();
  /**
   * <pre>
   * The number of impressions that hotel partners could have had given their
   * feed performance.
   * </pre>
   *
   * <code>int64 hotel_eligible_impressions = 215;</code>
   * @return The hotelEligibleImpressions.
   */
  long getHotelEligibleImpressions();

  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The enum numeric value on the wire for historicalCreativeQualityScore.
   */
  int getHistoricalCreativeQualityScoreValue();
  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The historicalCreativeQualityScore.
   */
  com.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalCreativeQualityScore();

  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The enum numeric value on the wire for historicalLandingPageQualityScore.
   */
  int getHistoricalLandingPageQualityScoreValue();
  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The historicalLandingPageQualityScore.
   */
  com.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalLandingPageQualityScore();

  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>int64 historical_quality_score = 216;</code>
   * @return Whether the historicalQualityScore field is set.
   */
  boolean hasHistoricalQualityScore();
  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>int64 historical_quality_score = 216;</code>
   * @return The historicalQualityScore.
   */
  long getHistoricalQualityScore();

  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The enum numeric value on the wire for historicalSearchPredictedCtr.
   */
  int getHistoricalSearchPredictedCtrValue();
  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The historicalSearchPredictedCtr.
   */
  com.google.ads.googleads.v5.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalSearchPredictedCtr();

  /**
   * <pre>
   * The number of times the ad was forwarded to someone else as a message.
   * </pre>
   *
   * <code>int64 gmail_forwards = 217;</code>
   * @return Whether the gmailForwards field is set.
   */
  boolean hasGmailForwards();
  /**
   * <pre>
   * The number of times the ad was forwarded to someone else as a message.
   * </pre>
   *
   * <code>int64 gmail_forwards = 217;</code>
   * @return The gmailForwards.
   */
  long getGmailForwards();

  /**
   * <pre>
   * The number of times someone has saved your Gmail ad to their inbox as a
   * message.
   * </pre>
   *
   * <code>int64 gmail_saves = 218;</code>
   * @return Whether the gmailSaves field is set.
   */
  boolean hasGmailSaves();
  /**
   * <pre>
   * The number of times someone has saved your Gmail ad to their inbox as a
   * message.
   * </pre>
   *
   * <code>int64 gmail_saves = 218;</code>
   * @return The gmailSaves.
   */
  long getGmailSaves();

  /**
   * <pre>
   * The number of clicks to the landing page on the expanded state of Gmail
   * ads.
   * </pre>
   *
   * <code>int64 gmail_secondary_clicks = 219;</code>
   * @return Whether the gmailSecondaryClicks field is set.
   */
  boolean hasGmailSecondaryClicks();
  /**
   * <pre>
   * The number of clicks to the landing page on the expanded state of Gmail
   * ads.
   * </pre>
   *
   * <code>int64 gmail_secondary_clicks = 219;</code>
   * @return The gmailSecondaryClicks.
   */
  long getGmailSecondaryClicks();

  /**
   * <pre>
   * The number of times a store's location-based ad was shown.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>int64 impressions_from_store_reach = 220;</code>
   * @return Whether the impressionsFromStoreReach field is set.
   */
  boolean hasImpressionsFromStoreReach();
  /**
   * <pre>
   * The number of times a store's location-based ad was shown.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>int64 impressions_from_store_reach = 220;</code>
   * @return The impressionsFromStoreReach.
   */
  long getImpressionsFromStoreReach();

  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>int64 impressions = 221;</code>
   * @return Whether the impressions field is set.
   */
  boolean hasImpressions();
  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>int64 impressions = 221;</code>
   * @return The impressions.
   */
  long getImpressions();

  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>double interaction_rate = 222;</code>
   * @return Whether the interactionRate field is set.
   */
  boolean hasInteractionRate();
  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>double interaction_rate = 222;</code>
   * @return The interactionRate.
   */
  double getInteractionRate();

  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>int64 interactions = 223;</code>
   * @return Whether the interactions field is set.
   */
  boolean hasInteractions();
  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>int64 interactions = 223;</code>
   * @return The interactions.
   */
  long getInteractions();

  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the interactionEventTypes.
   */
  java.util.List<com.google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType> getInteractionEventTypesList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return The count of interactionEventTypes.
   */
  int getInteractionEventTypesCount();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the element to return.
   * @return The interactionEventTypes at the given index.
   */
  com.google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType getInteractionEventTypes(int index);
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the enum numeric values on the wire for interactionEventTypes.
   */
  java.util.List<java.lang.Integer>
  getInteractionEventTypesValueList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interactionEventTypes at the given index.
   */
  int getInteractionEventTypesValue(int index);

  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>double invalid_click_rate = 224;</code>
   * @return Whether the invalidClickRate field is set.
   */
  boolean hasInvalidClickRate();
  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>double invalid_click_rate = 224;</code>
   * @return The invalidClickRate.
   */
  double getInvalidClickRate();

  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>int64 invalid_clicks = 225;</code>
   * @return Whether the invalidClicks field is set.
   */
  boolean hasInvalidClicks();
  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>int64 invalid_clicks = 225;</code>
   * @return The invalidClicks.
   */
  long getInvalidClicks();

  /**
   * <pre>
   * Number of message chats initiated for Click To Message impressions that
   * were message tracking eligible.
   * </pre>
   *
   * <code>int64 message_chats = 226;</code>
   * @return Whether the messageChats field is set.
   */
  boolean hasMessageChats();
  /**
   * <pre>
   * Number of message chats initiated for Click To Message impressions that
   * were message tracking eligible.
   * </pre>
   *
   * <code>int64 message_chats = 226;</code>
   * @return The messageChats.
   */
  long getMessageChats();

  /**
   * <pre>
   * Number of Click To Message impressions that were message tracking eligible.
   * </pre>
   *
   * <code>int64 message_impressions = 227;</code>
   * @return Whether the messageImpressions field is set.
   */
  boolean hasMessageImpressions();
  /**
   * <pre>
   * Number of Click To Message impressions that were message tracking eligible.
   * </pre>
   *
   * <code>int64 message_impressions = 227;</code>
   * @return The messageImpressions.
   */
  long getMessageImpressions();

  /**
   * <pre>
   * Number of message chats initiated (message_chats) divided by the number
   * of message impressions (message_impressions).
   * Rate at which a user initiates a message chat from an ad impression with
   * a messaging option and message tracking enabled.
   * Note that this rate can be more than 1.0 for a given message impression.
   * </pre>
   *
   * <code>double message_chat_rate = 228;</code>
   * @return Whether the messageChatRate field is set.
   */
  boolean hasMessageChatRate();
  /**
   * <pre>
   * Number of message chats initiated (message_chats) divided by the number
   * of message impressions (message_impressions).
   * Rate at which a user initiates a message chat from an ad impression with
   * a messaging option and message tracking enabled.
   * Note that this rate can be more than 1.0 for a given message impression.
   * </pre>
   *
   * <code>double message_chat_rate = 228;</code>
   * @return The messageChatRate.
   */
  double getMessageChatRate();

  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>double mobile_friendly_clicks_percentage = 229;</code>
   * @return Whether the mobileFriendlyClicksPercentage field is set.
   */
  boolean hasMobileFriendlyClicksPercentage();
  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>double mobile_friendly_clicks_percentage = 229;</code>
   * @return The mobileFriendlyClicksPercentage.
   */
  double getMobileFriendlyClicksPercentage();

  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results for a particular query. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 organic_clicks = 230;</code>
   * @return Whether the organicClicks field is set.
   */
  boolean hasOrganicClicks();
  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results for a particular query. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 organic_clicks = 230;</code>
   * @return The organicClicks.
   */
  long getOrganicClicks();

  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results (organic_clicks) divided by the total number of searches that
   * returned pages from your site (organic_queries). See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>double organic_clicks_per_query = 231;</code>
   * @return Whether the organicClicksPerQuery field is set.
   */
  boolean hasOrganicClicksPerQuery();
  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results (organic_clicks) divided by the total number of searches that
   * returned pages from your site (organic_queries). See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>double organic_clicks_per_query = 231;</code>
   * @return The organicClicksPerQuery.
   */
  double getOrganicClicksPerQuery();

  /**
   * <pre>
   * The number of listings for your site in the unpaid search results. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>int64 organic_impressions = 232;</code>
   * @return Whether the organicImpressions field is set.
   */
  boolean hasOrganicImpressions();
  /**
   * <pre>
   * The number of listings for your site in the unpaid search results. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>int64 organic_impressions = 232;</code>
   * @return The organicImpressions.
   */
  long getOrganicImpressions();

  /**
   * <pre>
   * The number of times a page from your site was listed in the unpaid search
   * results (organic_impressions) divided by the number of searches returning
   * your site's listing in the unpaid results (organic_queries). See the help
   * page at https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>double organic_impressions_per_query = 233;</code>
   * @return Whether the organicImpressionsPerQuery field is set.
   */
  boolean hasOrganicImpressionsPerQuery();
  /**
   * <pre>
   * The number of times a page from your site was listed in the unpaid search
   * results (organic_impressions) divided by the number of searches returning
   * your site's listing in the unpaid results (organic_queries). See the help
   * page at https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>double organic_impressions_per_query = 233;</code>
   * @return The organicImpressionsPerQuery.
   */
  double getOrganicImpressionsPerQuery();

  /**
   * <pre>
   * The total number of searches that returned your site's listing in the
   * unpaid results. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 organic_queries = 234;</code>
   * @return Whether the organicQueries field is set.
   */
  boolean hasOrganicQueries();
  /**
   * <pre>
   * The total number of searches that returned your site's listing in the
   * unpaid results. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>int64 organic_queries = 234;</code>
   * @return The organicQueries.
   */
  long getOrganicQueries();

  /**
   * <pre>
   * Percentage of first-time sessions (from people who had never visited your
   * site before). Imported from Google Analytics.
   * </pre>
   *
   * <code>double percent_new_visitors = 235;</code>
   * @return Whether the percentNewVisitors field is set.
   */
  boolean hasPercentNewVisitors();
  /**
   * <pre>
   * Percentage of first-time sessions (from people who had never visited your
   * site before). Imported from Google Analytics.
   * </pre>
   *
   * <code>double percent_new_visitors = 235;</code>
   * @return The percentNewVisitors.
   */
  double getPercentNewVisitors();

  /**
   * <pre>
   * Number of offline phone calls.
   * </pre>
   *
   * <code>int64 phone_calls = 236;</code>
   * @return Whether the phoneCalls field is set.
   */
  boolean hasPhoneCalls();
  /**
   * <pre>
   * Number of offline phone calls.
   * </pre>
   *
   * <code>int64 phone_calls = 236;</code>
   * @return The phoneCalls.
   */
  long getPhoneCalls();

  /**
   * <pre>
   * Number of offline phone impressions.
   * </pre>
   *
   * <code>int64 phone_impressions = 237;</code>
   * @return Whether the phoneImpressions field is set.
   */
  boolean hasPhoneImpressions();
  /**
   * <pre>
   * Number of offline phone impressions.
   * </pre>
   *
   * <code>int64 phone_impressions = 237;</code>
   * @return The phoneImpressions.
   */
  long getPhoneImpressions();

  /**
   * <pre>
   * Number of phone calls received (phone_calls) divided by the number of
   * times your phone number is shown (phone_impressions).
   * </pre>
   *
   * <code>double phone_through_rate = 238;</code>
   * @return Whether the phoneThroughRate field is set.
   */
  boolean hasPhoneThroughRate();
  /**
   * <pre>
   * Number of phone calls received (phone_calls) divided by the number of
   * times your phone number is shown (phone_impressions).
   * </pre>
   *
   * <code>double phone_through_rate = 238;</code>
   * @return The phoneThroughRate.
   */
  double getPhoneThroughRate();

  /**
   * <pre>
   * Your clickthrough rate (Ctr) divided by the average clickthrough rate of
   * all advertisers on the websites that show your ads. Measures how your ads
   * perform on Display Network sites compared to other ads on the same sites.
   * </pre>
   *
   * <code>double relative_ctr = 239;</code>
   * @return Whether the relativeCtr field is set.
   */
  boolean hasRelativeCtr();
  /**
   * <pre>
   * Your clickthrough rate (Ctr) divided by the average clickthrough rate of
   * all advertisers on the websites that show your ads. Measures how your ads
   * perform on Display Network sites compared to other ads on the same sites.
   * </pre>
   *
   * <code>double relative_ctr = 239;</code>
   * @return The relativeCtr.
   */
  double getRelativeCtr();

  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/google-ads/answer/7501826
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_absolute_top_impression_share = 136;</code>
   * @return Whether the searchAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/google-ads/answer/7501826
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_absolute_top_impression_share = 136;</code>
   * @return The searchAbsoluteTopImpressionShare.
   */
  double getSearchAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return Whether the searchBudgetLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return The searchBudgetLostAbsoluteTopImpressionShare.
   */
  double getSearchBudgetLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_impression_share = 138;</code>
   * @return Whether the searchBudgetLostImpressionShare field is set.
   */
  boolean hasSearchBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_impression_share = 138;</code>
   * @return The searchBudgetLostImpressionShare.
   */
  double getSearchBudgetLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_top_impression_share = 139;</code>
   * @return Whether the searchBudgetLostTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_budget_lost_top_impression_share = 139;</code>
   * @return The searchBudgetLostTopImpressionShare.
   */
  double getSearchBudgetLostTopImpressionShare();

  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_click_share = 140;</code>
   * @return Whether the searchClickShare field is set.
   */
  boolean hasSearchClickShare();
  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_click_share = 140;</code>
   * @return The searchClickShare.
   */
  double getSearchClickShare();

  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>double search_exact_match_impression_share = 141;</code>
   * @return Whether the searchExactMatchImpressionShare field is set.
   */
  boolean hasSearchExactMatchImpressionShare();
  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>double search_exact_match_impression_share = 141;</code>
   * @return The searchExactMatchImpressionShare.
   */
  double getSearchExactMatchImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_impression_share = 142;</code>
   * @return Whether the searchImpressionShare field is set.
   */
  boolean hasSearchImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_impression_share = 142;</code>
   * @return The searchImpressionShare.
   */
  double getSearchImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return Whether the searchRankLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchRankLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return The searchRankLostAbsoluteTopImpressionShare.
   */
  double getSearchRankLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_impression_share = 144;</code>
   * @return Whether the searchRankLostImpressionShare field is set.
   */
  boolean hasSearchRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_impression_share = 144;</code>
   * @return The searchRankLostImpressionShare.
   */
  double getSearchRankLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_top_impression_share = 145;</code>
   * @return Whether the searchRankLostTopImpressionShare field is set.
   */
  boolean hasSearchRankLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>double search_rank_lost_top_impression_share = 145;</code>
   * @return The searchRankLostTopImpressionShare.
   */
  double getSearchRankLostTopImpressionShare();

  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_top_impression_share = 146;</code>
   * @return Whether the searchTopImpressionShare field is set.
   */
  boolean hasSearchTopImpressionShare();
  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>double search_top_impression_share = 146;</code>
   * @return The searchTopImpressionShare.
   */
  double getSearchTopImpressionShare();

  /**
   * <pre>
   * A measure of how quickly your page loads after clicks on your mobile ads.
   * The score is a range from 1 to 10, 10 being the fastest.
   * </pre>
   *
   * <code>int64 speed_score = 147;</code>
   * @return Whether the speedScore field is set.
   */
  boolean hasSpeedScore();
  /**
   * <pre>
   * A measure of how quickly your page loads after clicks on your mobile ads.
   * The score is a range from 1 to 10, 10 being the fastest.
   * </pre>
   *
   * <code>int64 speed_score = 147;</code>
   * @return The speedScore.
   */
  long getSpeedScore();

  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>double top_impression_percentage = 148;</code>
   * @return Whether the topImpressionPercentage field is set.
   */
  boolean hasTopImpressionPercentage();
  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>double top_impression_percentage = 148;</code>
   * @return The topImpressionPercentage.
   */
  double getTopImpressionPercentage();

  /**
   * <pre>
   * The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
   * that reach a valid AMP page.
   * </pre>
   *
   * <code>double valid_accelerated_mobile_pages_clicks_percentage = 149;</code>
   * @return Whether the validAcceleratedMobilePagesClicksPercentage field is set.
   */
  boolean hasValidAcceleratedMobilePagesClicksPercentage();
  /**
   * <pre>
   * The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
   * that reach a valid AMP page.
   * </pre>
   *
   * <code>double valid_accelerated_mobile_pages_clicks_percentage = 149;</code>
   * @return The validAcceleratedMobilePagesClicksPercentage.
   */
  double getValidAcceleratedMobilePagesClicksPercentage();

  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>double value_per_all_conversions = 150;</code>
   * @return Whether the valuePerAllConversions field is set.
   */
  boolean hasValuePerAllConversions();
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>double value_per_all_conversions = 150;</code>
   * @return The valuePerAllConversions.
   */
  double getValuePerAllConversions();

  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>double value_per_conversion = 151;</code>
   * @return Whether the valuePerConversion field is set.
   */
  boolean hasValuePerConversion();
  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>double value_per_conversion = 151;</code>
   * @return The valuePerConversion.
   */
  double getValuePerConversion();

  /**
   * <pre>
   * The value of current model attributed conversions divided by the number of
   * the conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double value_per_current_model_attributed_conversion = 152;</code>
   * @return Whether the valuePerCurrentModelAttributedConversion field is set.
   */
  boolean hasValuePerCurrentModelAttributedConversion();
  /**
   * <pre>
   * The value of current model attributed conversions divided by the number of
   * the conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>double value_per_current_model_attributed_conversion = 152;</code>
   * @return The valuePerCurrentModelAttributedConversion.
   */
  double getValuePerCurrentModelAttributedConversion();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched all of your video.
   * </pre>
   *
   * <code>double video_quartile_p100_rate = 132;</code>
   * @return Whether the videoQuartileP100Rate field is set.
   */
  boolean hasVideoQuartileP100Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched all of your video.
   * </pre>
   *
   * <code>double video_quartile_p100_rate = 132;</code>
   * @return The videoQuartileP100Rate.
   */
  double getVideoQuartileP100Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 25% of your video.
   * </pre>
   *
   * <code>double video_quartile_p25_rate = 133;</code>
   * @return Whether the videoQuartileP25Rate field is set.
   */
  boolean hasVideoQuartileP25Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 25% of your video.
   * </pre>
   *
   * <code>double video_quartile_p25_rate = 133;</code>
   * @return The videoQuartileP25Rate.
   */
  double getVideoQuartileP25Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 50% of your video.
   * </pre>
   *
   * <code>double video_quartile_p50_rate = 134;</code>
   * @return Whether the videoQuartileP50Rate field is set.
   */
  boolean hasVideoQuartileP50Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 50% of your video.
   * </pre>
   *
   * <code>double video_quartile_p50_rate = 134;</code>
   * @return The videoQuartileP50Rate.
   */
  double getVideoQuartileP50Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 75% of your video.
   * </pre>
   *
   * <code>double video_quartile_p75_rate = 135;</code>
   * @return Whether the videoQuartileP75Rate field is set.
   */
  boolean hasVideoQuartileP75Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 75% of your video.
   * </pre>
   *
   * <code>double video_quartile_p75_rate = 135;</code>
   * @return The videoQuartileP75Rate.
   */
  double getVideoQuartileP75Rate();

  /**
   * <pre>
   * The number of views your TrueView video ad receives divided by its number
   * of impressions, including thumbnail impressions for TrueView in-display
   * ads.
   * </pre>
   *
   * <code>double video_view_rate = 153;</code>
   * @return Whether the videoViewRate field is set.
   */
  boolean hasVideoViewRate();
  /**
   * <pre>
   * The number of views your TrueView video ad receives divided by its number
   * of impressions, including thumbnail impressions for TrueView in-display
   * ads.
   * </pre>
   *
   * <code>double video_view_rate = 153;</code>
   * @return The videoViewRate.
   */
  double getVideoViewRate();

  /**
   * <pre>
   * The number of times your video ads were viewed.
   * </pre>
   *
   * <code>int64 video_views = 154;</code>
   * @return Whether the videoViews field is set.
   */
  boolean hasVideoViews();
  /**
   * <pre>
   * The number of times your video ads were viewed.
   * </pre>
   *
   * <code>int64 video_views = 154;</code>
   * @return The videoViews.
   */
  long getVideoViews();

  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (e.g.,
   * clicking on) another ad.
   * </pre>
   *
   * <code>int64 view_through_conversions = 155;</code>
   * @return Whether the viewThroughConversions field is set.
   */
  boolean hasViewThroughConversions();
  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (e.g.,
   * clicking on) another ad.
   * </pre>
   *
   * <code>int64 view_through_conversions = 155;</code>
   * @return The viewThroughConversions.
   */
  long getViewThroughConversions();
}
