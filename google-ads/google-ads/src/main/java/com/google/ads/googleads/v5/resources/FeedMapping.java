// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v5/resources/feed_mapping.proto

package com.google.ads.googleads.v5.resources;

/**
 * <pre>
 * A feed mapping.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v5.resources.FeedMapping}
 */
public final class FeedMapping extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v5.resources.FeedMapping)
    FeedMappingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FeedMapping.newBuilder() to construct.
  private FeedMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FeedMapping() {
    resourceName_ = "";
    attributeFieldMappings_ = java.util.Collections.emptyList();
    status_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FeedMapping();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FeedMapping(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            resourceName_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (feed_ != null) {
              subBuilder = feed_.toBuilder();
            }
            feed_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(feed_);
              feed_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            targetCase_ = 3;
            target_ = rawValue;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            targetCase_ = 4;
            target_ = rawValue;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              attributeFieldMappings_ = new java.util.ArrayList<com.google.ads.googleads.v5.resources.AttributeFieldMapping>();
              mutable_bitField0_ |= 0x00000001;
            }
            attributeFieldMappings_.add(
                input.readMessage(com.google.ads.googleads.v5.resources.AttributeFieldMapping.parser(), extensionRegistry));
            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        attributeFieldMappings_ = java.util.Collections.unmodifiableList(attributeFieldMappings_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v5.resources.FeedMappingProto.internal_static_google_ads_googleads_v5_resources_FeedMapping_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v5.resources.FeedMappingProto.internal_static_google_ads_googleads_v5_resources_FeedMapping_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v5.resources.FeedMapping.class, com.google.ads.googleads.v5.resources.FeedMapping.Builder.class);
  }

  private int targetCase_ = 0;
  private java.lang.Object target_;
  public enum TargetCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PLACEHOLDER_TYPE(3),
    CRITERION_TYPE(4),
    TARGET_NOT_SET(0);
    private final int value;
    private TargetCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TargetCase valueOf(int value) {
      return forNumber(value);
    }

    public static TargetCase forNumber(int value) {
      switch (value) {
        case 3: return PLACEHOLDER_TYPE;
        case 4: return CRITERION_TYPE;
        case 0: return TARGET_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TargetCase
  getTargetCase() {
    return TargetCase.forNumber(
        targetCase_);
  }

  public static final int RESOURCE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object resourceName_;
  /**
   * <pre>
   * Immutable. The resource name of the feed mapping.
   * Feed mapping resource names have the form:
   * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
   * </pre>
   *
   * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
   * @return The resourceName.
   */
  @java.lang.Override
  public java.lang.String getResourceName() {
    java.lang.Object ref = resourceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      resourceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Immutable. The resource name of the feed mapping.
   * Feed mapping resource names have the form:
   * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
   * </pre>
   *
   * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for resourceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResourceNameBytes() {
    java.lang.Object ref = resourceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      resourceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FEED_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue feed_;
  /**
   * <pre>
   * Immutable. The feed of this feed mapping.
   * </pre>
   *
   * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
   * @return Whether the feed field is set.
   */
  @java.lang.Override
  public boolean hasFeed() {
    return feed_ != null;
  }
  /**
   * <pre>
   * Immutable. The feed of this feed mapping.
   * </pre>
   *
   * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
   * @return The feed.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getFeed() {
    return feed_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : feed_;
  }
  /**
   * <pre>
   * Immutable. The feed of this feed mapping.
   * </pre>
   *
   * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getFeedOrBuilder() {
    return getFeed();
  }

  public static final int ATTRIBUTE_FIELD_MAPPINGS_FIELD_NUMBER = 5;
  private java.util.List<com.google.ads.googleads.v5.resources.AttributeFieldMapping> attributeFieldMappings_;
  /**
   * <pre>
   * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
   * relationship meaning that 1 feed attribute can be used to populate
   * multiple placeholder fields, but 1 placeholder field can only draw
   * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
   * field can be mapped to multiple feed attributes. Required.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v5.resources.AttributeFieldMapping> getAttributeFieldMappingsList() {
    return attributeFieldMappings_;
  }
  /**
   * <pre>
   * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
   * relationship meaning that 1 feed attribute can be used to populate
   * multiple placeholder fields, but 1 placeholder field can only draw
   * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
   * field can be mapped to multiple feed attributes. Required.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder> 
      getAttributeFieldMappingsOrBuilderList() {
    return attributeFieldMappings_;
  }
  /**
   * <pre>
   * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
   * relationship meaning that 1 feed attribute can be used to populate
   * multiple placeholder fields, but 1 placeholder field can only draw
   * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
   * field can be mapped to multiple feed attributes. Required.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public int getAttributeFieldMappingsCount() {
    return attributeFieldMappings_.size();
  }
  /**
   * <pre>
   * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
   * relationship meaning that 1 feed attribute can be used to populate
   * multiple placeholder fields, but 1 placeholder field can only draw
   * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
   * field can be mapped to multiple feed attributes. Required.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v5.resources.AttributeFieldMapping getAttributeFieldMappings(int index) {
    return attributeFieldMappings_.get(index);
  }
  /**
   * <pre>
   * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
   * relationship meaning that 1 feed attribute can be used to populate
   * multiple placeholder fields, but 1 placeholder field can only draw
   * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
   * field can be mapped to multiple feed attributes. Required.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder getAttributeFieldMappingsOrBuilder(
      int index) {
    return attributeFieldMappings_.get(index);
  }

  public static final int STATUS_FIELD_NUMBER = 6;
  private int status_;
  /**
   * <pre>
   * Output only. Status of the feed mapping.
   * This field is read-only.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * Output only. Status of the feed mapping.
   * This field is read-only.
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The status.
   */
  @java.lang.Override public com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus getStatus() {
    @SuppressWarnings("deprecation")
    com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus result = com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.valueOf(status_);
    return result == null ? com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.UNRECOGNIZED : result;
  }

  public static final int PLACEHOLDER_TYPE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
   * attributes to placeholder fields).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The enum numeric value on the wire for placeholderType.
   */
  public int getPlaceholderTypeValue() {
    if (targetCase_ == 3) {
      return (java.lang.Integer) target_;
    }
    return 0;
  }
  /**
   * <pre>
   * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
   * attributes to placeholder fields).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The placeholderType.
   */
  public com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType getPlaceholderType() {
    if (targetCase_ == 3) {
      @SuppressWarnings("deprecation")
      com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType result = com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.valueOf(
          (java.lang.Integer) target_);
      return result == null ? com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.UNRECOGNIZED : result;
    }
    return com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.UNSPECIFIED;
  }

  public static final int CRITERION_TYPE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
   * attributes to criterion fields).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The enum numeric value on the wire for criterionType.
   */
  public int getCriterionTypeValue() {
    if (targetCase_ == 4) {
      return (java.lang.Integer) target_;
    }
    return 0;
  }
  /**
   * <pre>
   * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
   * attributes to criterion fields).
   * </pre>
   *
   * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The criterionType.
   */
  public com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType getCriterionType() {
    if (targetCase_ == 4) {
      @SuppressWarnings("deprecation")
      com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType result = com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.valueOf(
          (java.lang.Integer) target_);
      return result == null ? com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.UNRECOGNIZED : result;
    }
    return com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.UNSPECIFIED;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getResourceNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourceName_);
    }
    if (feed_ != null) {
      output.writeMessage(2, getFeed());
    }
    if (targetCase_ == 3) {
      output.writeEnum(3, ((java.lang.Integer) target_));
    }
    if (targetCase_ == 4) {
      output.writeEnum(4, ((java.lang.Integer) target_));
    }
    for (int i = 0; i < attributeFieldMappings_.size(); i++) {
      output.writeMessage(5, attributeFieldMappings_.get(i));
    }
    if (status_ != com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.UNSPECIFIED.getNumber()) {
      output.writeEnum(6, status_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getResourceNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourceName_);
    }
    if (feed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFeed());
    }
    if (targetCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, ((java.lang.Integer) target_));
    }
    if (targetCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, ((java.lang.Integer) target_));
    }
    for (int i = 0; i < attributeFieldMappings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, attributeFieldMappings_.get(i));
    }
    if (status_ != com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, status_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v5.resources.FeedMapping)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v5.resources.FeedMapping other = (com.google.ads.googleads.v5.resources.FeedMapping) obj;

    if (!getResourceName()
        .equals(other.getResourceName())) return false;
    if (hasFeed() != other.hasFeed()) return false;
    if (hasFeed()) {
      if (!getFeed()
          .equals(other.getFeed())) return false;
    }
    if (!getAttributeFieldMappingsList()
        .equals(other.getAttributeFieldMappingsList())) return false;
    if (status_ != other.status_) return false;
    if (!getTargetCase().equals(other.getTargetCase())) return false;
    switch (targetCase_) {
      case 3:
        if (getPlaceholderTypeValue()
            != other.getPlaceholderTypeValue()) return false;
        break;
      case 4:
        if (getCriterionTypeValue()
            != other.getCriterionTypeValue()) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RESOURCE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getResourceName().hashCode();
    if (hasFeed()) {
      hash = (37 * hash) + FEED_FIELD_NUMBER;
      hash = (53 * hash) + getFeed().hashCode();
    }
    if (getAttributeFieldMappingsCount() > 0) {
      hash = (37 * hash) + ATTRIBUTE_FIELD_MAPPINGS_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeFieldMappingsList().hashCode();
    }
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    switch (targetCase_) {
      case 3:
        hash = (37 * hash) + PLACEHOLDER_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPlaceholderTypeValue();
        break;
      case 4:
        hash = (37 * hash) + CRITERION_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCriterionTypeValue();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.resources.FeedMapping parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v5.resources.FeedMapping prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A feed mapping.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v5.resources.FeedMapping}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v5.resources.FeedMapping)
      com.google.ads.googleads.v5.resources.FeedMappingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v5.resources.FeedMappingProto.internal_static_google_ads_googleads_v5_resources_FeedMapping_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v5.resources.FeedMappingProto.internal_static_google_ads_googleads_v5_resources_FeedMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v5.resources.FeedMapping.class, com.google.ads.googleads.v5.resources.FeedMapping.Builder.class);
    }

    // Construct using com.google.ads.googleads.v5.resources.FeedMapping.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAttributeFieldMappingsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      resourceName_ = "";

      if (feedBuilder_ == null) {
        feed_ = null;
      } else {
        feed_ = null;
        feedBuilder_ = null;
      }
      if (attributeFieldMappingsBuilder_ == null) {
        attributeFieldMappings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        attributeFieldMappingsBuilder_.clear();
      }
      status_ = 0;

      targetCase_ = 0;
      target_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v5.resources.FeedMappingProto.internal_static_google_ads_googleads_v5_resources_FeedMapping_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.resources.FeedMapping getDefaultInstanceForType() {
      return com.google.ads.googleads.v5.resources.FeedMapping.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.resources.FeedMapping build() {
      com.google.ads.googleads.v5.resources.FeedMapping result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.resources.FeedMapping buildPartial() {
      com.google.ads.googleads.v5.resources.FeedMapping result = new com.google.ads.googleads.v5.resources.FeedMapping(this);
      int from_bitField0_ = bitField0_;
      result.resourceName_ = resourceName_;
      if (feedBuilder_ == null) {
        result.feed_ = feed_;
      } else {
        result.feed_ = feedBuilder_.build();
      }
      if (attributeFieldMappingsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          attributeFieldMappings_ = java.util.Collections.unmodifiableList(attributeFieldMappings_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.attributeFieldMappings_ = attributeFieldMappings_;
      } else {
        result.attributeFieldMappings_ = attributeFieldMappingsBuilder_.build();
      }
      result.status_ = status_;
      if (targetCase_ == 3) {
        result.target_ = target_;
      }
      if (targetCase_ == 4) {
        result.target_ = target_;
      }
      result.targetCase_ = targetCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v5.resources.FeedMapping) {
        return mergeFrom((com.google.ads.googleads.v5.resources.FeedMapping)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v5.resources.FeedMapping other) {
      if (other == com.google.ads.googleads.v5.resources.FeedMapping.getDefaultInstance()) return this;
      if (!other.getResourceName().isEmpty()) {
        resourceName_ = other.resourceName_;
        onChanged();
      }
      if (other.hasFeed()) {
        mergeFeed(other.getFeed());
      }
      if (attributeFieldMappingsBuilder_ == null) {
        if (!other.attributeFieldMappings_.isEmpty()) {
          if (attributeFieldMappings_.isEmpty()) {
            attributeFieldMappings_ = other.attributeFieldMappings_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAttributeFieldMappingsIsMutable();
            attributeFieldMappings_.addAll(other.attributeFieldMappings_);
          }
          onChanged();
        }
      } else {
        if (!other.attributeFieldMappings_.isEmpty()) {
          if (attributeFieldMappingsBuilder_.isEmpty()) {
            attributeFieldMappingsBuilder_.dispose();
            attributeFieldMappingsBuilder_ = null;
            attributeFieldMappings_ = other.attributeFieldMappings_;
            bitField0_ = (bitField0_ & ~0x00000001);
            attributeFieldMappingsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAttributeFieldMappingsFieldBuilder() : null;
          } else {
            attributeFieldMappingsBuilder_.addAllMessages(other.attributeFieldMappings_);
          }
        }
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      switch (other.getTargetCase()) {
        case PLACEHOLDER_TYPE: {
          setPlaceholderTypeValue(other.getPlaceholderTypeValue());
          break;
        }
        case CRITERION_TYPE: {
          setCriterionTypeValue(other.getCriterionTypeValue());
          break;
        }
        case TARGET_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v5.resources.FeedMapping parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v5.resources.FeedMapping) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int targetCase_ = 0;
    private java.lang.Object target_;
    public TargetCase
        getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public Builder clearTarget() {
      targetCase_ = 0;
      target_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object resourceName_ = "";
    /**
     * <pre>
     * Immutable. The resource name of the feed mapping.
     * Feed mapping resource names have the form:
     * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
     * </pre>
     *
     * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @return The resourceName.
     */
    public java.lang.String getResourceName() {
      java.lang.Object ref = resourceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resourceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Immutable. The resource name of the feed mapping.
     * Feed mapping resource names have the form:
     * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
     * </pre>
     *
     * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @return The bytes for resourceName.
     */
    public com.google.protobuf.ByteString
        getResourceNameBytes() {
      java.lang.Object ref = resourceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Immutable. The resource name of the feed mapping.
     * Feed mapping resource names have the form:
     * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
     * </pre>
     *
     * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @param value The resourceName to set.
     * @return This builder for chaining.
     */
    public Builder setResourceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      resourceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The resource name of the feed mapping.
     * Feed mapping resource names have the form:
     * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
     * </pre>
     *
     * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearResourceName() {
      
      resourceName_ = getDefaultInstance().getResourceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The resource name of the feed mapping.
     * Feed mapping resource names have the form:
     * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
     * </pre>
     *
     * <code>string resource_name = 1 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @param value The bytes for resourceName to set.
     * @return This builder for chaining.
     */
    public Builder setResourceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      resourceName_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue feed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> feedBuilder_;
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @return Whether the feed field is set.
     */
    public boolean hasFeed() {
      return feedBuilder_ != null || feed_ != null;
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     * @return The feed.
     */
    public com.google.protobuf.StringValue getFeed() {
      if (feedBuilder_ == null) {
        return feed_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : feed_;
      } else {
        return feedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public Builder setFeed(com.google.protobuf.StringValue value) {
      if (feedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        feed_ = value;
        onChanged();
      } else {
        feedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public Builder setFeed(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (feedBuilder_ == null) {
        feed_ = builderForValue.build();
        onChanged();
      } else {
        feedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public Builder mergeFeed(com.google.protobuf.StringValue value) {
      if (feedBuilder_ == null) {
        if (feed_ != null) {
          feed_ =
            com.google.protobuf.StringValue.newBuilder(feed_).mergeFrom(value).buildPartial();
        } else {
          feed_ = value;
        }
        onChanged();
      } else {
        feedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public Builder clearFeed() {
      if (feedBuilder_ == null) {
        feed_ = null;
        onChanged();
      } else {
        feed_ = null;
        feedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public com.google.protobuf.StringValue.Builder getFeedBuilder() {
      
      onChanged();
      return getFeedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    public com.google.protobuf.StringValueOrBuilder getFeedOrBuilder() {
      if (feedBuilder_ != null) {
        return feedBuilder_.getMessageOrBuilder();
      } else {
        return feed_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : feed_;
      }
    }
    /**
     * <pre>
     * Immutable. The feed of this feed mapping.
     * </pre>
     *
     * <code>.google.protobuf.StringValue feed = 2 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getFeedFieldBuilder() {
      if (feedBuilder_ == null) {
        feedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getFeed(),
                getParentForChildren(),
                isClean());
        feed_ = null;
      }
      return feedBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v5.resources.AttributeFieldMapping> attributeFieldMappings_ =
      java.util.Collections.emptyList();
    private void ensureAttributeFieldMappingsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        attributeFieldMappings_ = new java.util.ArrayList<com.google.ads.googleads.v5.resources.AttributeFieldMapping>(attributeFieldMappings_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v5.resources.AttributeFieldMapping, com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder, com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder> attributeFieldMappingsBuilder_;

    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public java.util.List<com.google.ads.googleads.v5.resources.AttributeFieldMapping> getAttributeFieldMappingsList() {
      if (attributeFieldMappingsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(attributeFieldMappings_);
      } else {
        return attributeFieldMappingsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public int getAttributeFieldMappingsCount() {
      if (attributeFieldMappingsBuilder_ == null) {
        return attributeFieldMappings_.size();
      } else {
        return attributeFieldMappingsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.ads.googleads.v5.resources.AttributeFieldMapping getAttributeFieldMappings(int index) {
      if (attributeFieldMappingsBuilder_ == null) {
        return attributeFieldMappings_.get(index);
      } else {
        return attributeFieldMappingsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setAttributeFieldMappings(
        int index, com.google.ads.googleads.v5.resources.AttributeFieldMapping value) {
      if (attributeFieldMappingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.set(index, value);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setAttributeFieldMappings(
        int index, com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder builderForValue) {
      if (attributeFieldMappingsBuilder_ == null) {
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.set(index, builderForValue.build());
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder addAttributeFieldMappings(com.google.ads.googleads.v5.resources.AttributeFieldMapping value) {
      if (attributeFieldMappingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.add(value);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder addAttributeFieldMappings(
        int index, com.google.ads.googleads.v5.resources.AttributeFieldMapping value) {
      if (attributeFieldMappingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.add(index, value);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder addAttributeFieldMappings(
        com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder builderForValue) {
      if (attributeFieldMappingsBuilder_ == null) {
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.add(builderForValue.build());
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder addAttributeFieldMappings(
        int index, com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder builderForValue) {
      if (attributeFieldMappingsBuilder_ == null) {
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.add(index, builderForValue.build());
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder addAllAttributeFieldMappings(
        java.lang.Iterable<? extends com.google.ads.googleads.v5.resources.AttributeFieldMapping> values) {
      if (attributeFieldMappingsBuilder_ == null) {
        ensureAttributeFieldMappingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, attributeFieldMappings_);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder clearAttributeFieldMappings() {
      if (attributeFieldMappingsBuilder_ == null) {
        attributeFieldMappings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder removeAttributeFieldMappings(int index) {
      if (attributeFieldMappingsBuilder_ == null) {
        ensureAttributeFieldMappingsIsMutable();
        attributeFieldMappings_.remove(index);
        onChanged();
      } else {
        attributeFieldMappingsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder getAttributeFieldMappingsBuilder(
        int index) {
      return getAttributeFieldMappingsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder getAttributeFieldMappingsOrBuilder(
        int index) {
      if (attributeFieldMappingsBuilder_ == null) {
        return attributeFieldMappings_.get(index);  } else {
        return attributeFieldMappingsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder> 
         getAttributeFieldMappingsOrBuilderList() {
      if (attributeFieldMappingsBuilder_ != null) {
        return attributeFieldMappingsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(attributeFieldMappings_);
      }
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder addAttributeFieldMappingsBuilder() {
      return getAttributeFieldMappingsFieldBuilder().addBuilder(
          com.google.ads.googleads.v5.resources.AttributeFieldMapping.getDefaultInstance());
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder addAttributeFieldMappingsBuilder(
        int index) {
      return getAttributeFieldMappingsFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v5.resources.AttributeFieldMapping.getDefaultInstance());
    }
    /**
     * <pre>
     * Immutable. Feed attributes to field mappings. These mappings are a one-to-many
     * relationship meaning that 1 feed attribute can be used to populate
     * multiple placeholder fields, but 1 placeholder field can only draw
     * data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
     * field can be mapped to multiple feed attributes. Required.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.resources.AttributeFieldMapping attribute_field_mappings = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public java.util.List<com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder> 
         getAttributeFieldMappingsBuilderList() {
      return getAttributeFieldMappingsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v5.resources.AttributeFieldMapping, com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder, com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder> 
        getAttributeFieldMappingsFieldBuilder() {
      if (attributeFieldMappingsBuilder_ == null) {
        attributeFieldMappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v5.resources.AttributeFieldMapping, com.google.ads.googleads.v5.resources.AttributeFieldMapping.Builder, com.google.ads.googleads.v5.resources.AttributeFieldMappingOrBuilder>(
                attributeFieldMappings_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        attributeFieldMappings_ = null;
      }
      return attributeFieldMappingsBuilder_;
    }

    private int status_ = 0;
    /**
     * <pre>
     * Output only. Status of the feed mapping.
     * This field is read-only.
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Output only. Status of the feed mapping.
     * This field is read-only.
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Status of the feed mapping.
     * This field is read-only.
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The status.
     */
    @java.lang.Override
    public com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus getStatus() {
      @SuppressWarnings("deprecation")
      com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus result = com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.valueOf(status_);
      return result == null ? com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Output only. Status of the feed mapping.
     * This field is read-only.
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Status of the feed mapping.
     * This field is read-only.
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingStatusEnum.FeedMappingStatus status = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
     * attributes to placeholder fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The enum numeric value on the wire for placeholderType.
     */
    @java.lang.Override
    public int getPlaceholderTypeValue() {
      if (targetCase_ == 3) {
        return ((java.lang.Integer) target_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
     * attributes to placeholder fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The enum numeric value on the wire for placeholderType to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceholderTypeValue(int value) {
      targetCase_ = 3;
      target_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
     * attributes to placeholder fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The placeholderType.
     */
    @java.lang.Override
    public com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType getPlaceholderType() {
      if (targetCase_ == 3) {
        @SuppressWarnings("deprecation")
        com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType result = com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.valueOf(
            (java.lang.Integer) target_);
        return result == null ? com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.UNRECOGNIZED : result;
      }
      return com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType.UNSPECIFIED;
    }
    /**
     * <pre>
     * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
     * attributes to placeholder fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The placeholderType to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceholderType(com.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      targetCase_ = 3;
      target_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
     * attributes to placeholder fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type = 3 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return This builder for chaining.
     */
    public Builder clearPlaceholderType() {
      if (targetCase_ == 3) {
        targetCase_ = 0;
        target_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
     * attributes to criterion fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The enum numeric value on the wire for criterionType.
     */
    @java.lang.Override
    public int getCriterionTypeValue() {
      if (targetCase_ == 4) {
        return ((java.lang.Integer) target_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
     * attributes to criterion fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The enum numeric value on the wire for criterionType to set.
     * @return This builder for chaining.
     */
    public Builder setCriterionTypeValue(int value) {
      targetCase_ = 4;
      target_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
     * attributes to criterion fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The criterionType.
     */
    @java.lang.Override
    public com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType getCriterionType() {
      if (targetCase_ == 4) {
        @SuppressWarnings("deprecation")
        com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType result = com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.valueOf(
            (java.lang.Integer) target_);
        return result == null ? com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.UNRECOGNIZED : result;
      }
      return com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType.UNSPECIFIED;
    }
    /**
     * <pre>
     * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
     * attributes to criterion fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The criterionType to set.
     * @return This builder for chaining.
     */
    public Builder setCriterionType(com.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      targetCase_ = 4;
      target_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
     * attributes to criterion fields).
     * </pre>
     *
     * <code>.google.ads.googleads.v5.enums.FeedMappingCriterionTypeEnum.FeedMappingCriterionType criterion_type = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return This builder for chaining.
     */
    public Builder clearCriterionType() {
      if (targetCase_ == 4) {
        targetCase_ = 0;
        target_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v5.resources.FeedMapping)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v5.resources.FeedMapping)
  private static final com.google.ads.googleads.v5.resources.FeedMapping DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v5.resources.FeedMapping();
  }

  public static com.google.ads.googleads.v5.resources.FeedMapping getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FeedMapping>
      PARSER = new com.google.protobuf.AbstractParser<FeedMapping>() {
    @java.lang.Override
    public FeedMapping parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FeedMapping(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FeedMapping> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FeedMapping> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v5.resources.FeedMapping getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

