// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/common/user_lists.proto

package com.google.ads.googleads.v1.common;

/**
 * <pre>
 * Representation of a userlist that is generated by a rule.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.common.RuleBasedUserListInfo}
 */
public  final class RuleBasedUserListInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.common.RuleBasedUserListInfo)
    RuleBasedUserListInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RuleBasedUserListInfo.newBuilder() to construct.
  private RuleBasedUserListInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RuleBasedUserListInfo() {
    prepopulationStatus_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RuleBasedUserListInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            prepopulationStatus_ = rawValue;
            break;
          }
          case 18: {
            com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder subBuilder = null;
            if (ruleBasedUserListCase_ == 2) {
              subBuilder = ((com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_).toBuilder();
            }
            ruleBasedUserList_ =
                input.readMessage(com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_);
              ruleBasedUserList_ = subBuilder.buildPartial();
            }
            ruleBasedUserListCase_ = 2;
            break;
          }
          case 26: {
            com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder subBuilder = null;
            if (ruleBasedUserListCase_ == 3) {
              subBuilder = ((com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_).toBuilder();
            }
            ruleBasedUserList_ =
                input.readMessage(com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_);
              ruleBasedUserList_ = subBuilder.buildPartial();
            }
            ruleBasedUserListCase_ = 3;
            break;
          }
          case 34: {
            com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder subBuilder = null;
            if (ruleBasedUserListCase_ == 4) {
              subBuilder = ((com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_).toBuilder();
            }
            ruleBasedUserList_ =
                input.readMessage(com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_);
              ruleBasedUserList_ = subBuilder.buildPartial();
            }
            ruleBasedUserListCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.common.UserListsProto.internal_static_google_ads_googleads_v1_common_RuleBasedUserListInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.common.UserListsProto.internal_static_google_ads_googleads_v1_common_RuleBasedUserListInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.common.RuleBasedUserListInfo.class, com.google.ads.googleads.v1.common.RuleBasedUserListInfo.Builder.class);
  }

  private int ruleBasedUserListCase_ = 0;
  private java.lang.Object ruleBasedUserList_;
  public enum RuleBasedUserListCase
      implements com.google.protobuf.Internal.EnumLite {
    COMBINED_RULE_USER_LIST(2),
    DATE_SPECIFIC_RULE_USER_LIST(3),
    EXPRESSION_RULE_USER_LIST(4),
    RULEBASEDUSERLIST_NOT_SET(0);
    private final int value;
    private RuleBasedUserListCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RuleBasedUserListCase valueOf(int value) {
      return forNumber(value);
    }

    public static RuleBasedUserListCase forNumber(int value) {
      switch (value) {
        case 2: return COMBINED_RULE_USER_LIST;
        case 3: return DATE_SPECIFIC_RULE_USER_LIST;
        case 4: return EXPRESSION_RULE_USER_LIST;
        case 0: return RULEBASEDUSERLIST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RuleBasedUserListCase
  getRuleBasedUserListCase() {
    return RuleBasedUserListCase.forNumber(
        ruleBasedUserListCase_);
  }

  public static final int PREPOPULATION_STATUS_FIELD_NUMBER = 1;
  private int prepopulationStatus_;
  /**
   * <pre>
   * The status of pre-population. The field is default to NONE if not set which
   * means the previous users will not be considered. If set to REQUESTED, past
   * site visitors or app users who match the list definition will be included
   * in the list (works on the Display Network only). This will only
   * add past users from within the last 30 days, depending on the
   * list's membership duration and the date when the remarketing tag is added.
   * The status will be updated to FINISHED once request is processed, or FAILED
   * if the request fails.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
   */
  public int getPrepopulationStatusValue() {
    return prepopulationStatus_;
  }
  /**
   * <pre>
   * The status of pre-population. The field is default to NONE if not set which
   * means the previous users will not be considered. If set to REQUESTED, past
   * site visitors or app users who match the list definition will be included
   * in the list (works on the Display Network only). This will only
   * add past users from within the last 30 days, depending on the
   * list's membership duration and the date when the remarketing tag is added.
   * The status will be updated to FINISHED once request is processed, or FAILED
   * if the request fails.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
   */
  public com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus getPrepopulationStatus() {
    @SuppressWarnings("deprecation")
    com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus result = com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.valueOf(prepopulationStatus_);
    return result == null ? com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.UNRECOGNIZED : result;
  }

  public static final int COMBINED_RULE_USER_LIST_FIELD_NUMBER = 2;
  /**
   * <pre>
   * User lists defined by combining two rules.
   * There are two operators: AND, where the left and right operands have to
   * be true; AND_NOT where left operand is true but right operand is false.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
   */
  public boolean hasCombinedRuleUserList() {
    return ruleBasedUserListCase_ == 2;
  }
  /**
   * <pre>
   * User lists defined by combining two rules.
   * There are two operators: AND, where the left and right operands have to
   * be true; AND_NOT where left operand is true but right operand is false.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
   */
  public com.google.ads.googleads.v1.common.CombinedRuleUserListInfo getCombinedRuleUserList() {
    if (ruleBasedUserListCase_ == 2) {
       return (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
  }
  /**
   * <pre>
   * User lists defined by combining two rules.
   * There are two operators: AND, where the left and right operands have to
   * be true; AND_NOT where left operand is true but right operand is false.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
   */
  public com.google.ads.googleads.v1.common.CombinedRuleUserListInfoOrBuilder getCombinedRuleUserListOrBuilder() {
    if (ruleBasedUserListCase_ == 2) {
       return (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
  }

  public static final int DATE_SPECIFIC_RULE_USER_LIST_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Visitors of a page during specific dates. The visiting periods are
   * defined as follows:
   * Between start_date (inclusive) and end_date (inclusive);
   * Before end_date (exclusive) with start_date = 2000-01-01;
   * After start_date (exclusive) with end_date = 2037-12-30.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
   */
  public boolean hasDateSpecificRuleUserList() {
    return ruleBasedUserListCase_ == 3;
  }
  /**
   * <pre>
   * Visitors of a page during specific dates. The visiting periods are
   * defined as follows:
   * Between start_date (inclusive) and end_date (inclusive);
   * Before end_date (exclusive) with start_date = 2000-01-01;
   * After start_date (exclusive) with end_date = 2037-12-30.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
   */
  public com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo getDateSpecificRuleUserList() {
    if (ruleBasedUserListCase_ == 3) {
       return (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
  }
  /**
   * <pre>
   * Visitors of a page during specific dates. The visiting periods are
   * defined as follows:
   * Between start_date (inclusive) and end_date (inclusive);
   * Before end_date (exclusive) with start_date = 2000-01-01;
   * After start_date (exclusive) with end_date = 2037-12-30.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
   */
  public com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfoOrBuilder getDateSpecificRuleUserListOrBuilder() {
    if (ruleBasedUserListCase_ == 3) {
       return (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
  }

  public static final int EXPRESSION_RULE_USER_LIST_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Visitors of a page. The page visit is defined by one boolean rule
   * expression.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
   */
  public boolean hasExpressionRuleUserList() {
    return ruleBasedUserListCase_ == 4;
  }
  /**
   * <pre>
   * Visitors of a page. The page visit is defined by one boolean rule
   * expression.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
   */
  public com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo getExpressionRuleUserList() {
    if (ruleBasedUserListCase_ == 4) {
       return (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
  }
  /**
   * <pre>
   * Visitors of a page. The page visit is defined by one boolean rule
   * expression.
   * </pre>
   *
   * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
   */
  public com.google.ads.googleads.v1.common.ExpressionRuleUserListInfoOrBuilder getExpressionRuleUserListOrBuilder() {
    if (ruleBasedUserListCase_ == 4) {
       return (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_;
    }
    return com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (prepopulationStatus_ != com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.UNSPECIFIED.getNumber()) {
      output.writeEnum(1, prepopulationStatus_);
    }
    if (ruleBasedUserListCase_ == 2) {
      output.writeMessage(2, (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_);
    }
    if (ruleBasedUserListCase_ == 3) {
      output.writeMessage(3, (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_);
    }
    if (ruleBasedUserListCase_ == 4) {
      output.writeMessage(4, (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (prepopulationStatus_ != com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, prepopulationStatus_);
    }
    if (ruleBasedUserListCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_);
    }
    if (ruleBasedUserListCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_);
    }
    if (ruleBasedUserListCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.common.RuleBasedUserListInfo)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.common.RuleBasedUserListInfo other = (com.google.ads.googleads.v1.common.RuleBasedUserListInfo) obj;

    boolean result = true;
    result = result && prepopulationStatus_ == other.prepopulationStatus_;
    result = result && getRuleBasedUserListCase().equals(
        other.getRuleBasedUserListCase());
    if (!result) return false;
    switch (ruleBasedUserListCase_) {
      case 2:
        result = result && getCombinedRuleUserList()
            .equals(other.getCombinedRuleUserList());
        break;
      case 3:
        result = result && getDateSpecificRuleUserList()
            .equals(other.getDateSpecificRuleUserList());
        break;
      case 4:
        result = result && getExpressionRuleUserList()
            .equals(other.getExpressionRuleUserList());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PREPOPULATION_STATUS_FIELD_NUMBER;
    hash = (53 * hash) + prepopulationStatus_;
    switch (ruleBasedUserListCase_) {
      case 2:
        hash = (37 * hash) + COMBINED_RULE_USER_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCombinedRuleUserList().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DATE_SPECIFIC_RULE_USER_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getDateSpecificRuleUserList().hashCode();
        break;
      case 4:
        hash = (37 * hash) + EXPRESSION_RULE_USER_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getExpressionRuleUserList().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.common.RuleBasedUserListInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Representation of a userlist that is generated by a rule.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.common.RuleBasedUserListInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.common.RuleBasedUserListInfo)
      com.google.ads.googleads.v1.common.RuleBasedUserListInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.common.UserListsProto.internal_static_google_ads_googleads_v1_common_RuleBasedUserListInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.common.UserListsProto.internal_static_google_ads_googleads_v1_common_RuleBasedUserListInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.common.RuleBasedUserListInfo.class, com.google.ads.googleads.v1.common.RuleBasedUserListInfo.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.common.RuleBasedUserListInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      prepopulationStatus_ = 0;

      ruleBasedUserListCase_ = 0;
      ruleBasedUserList_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.common.UserListsProto.internal_static_google_ads_googleads_v1_common_RuleBasedUserListInfo_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.common.RuleBasedUserListInfo getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.common.RuleBasedUserListInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.common.RuleBasedUserListInfo build() {
      com.google.ads.googleads.v1.common.RuleBasedUserListInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.common.RuleBasedUserListInfo buildPartial() {
      com.google.ads.googleads.v1.common.RuleBasedUserListInfo result = new com.google.ads.googleads.v1.common.RuleBasedUserListInfo(this);
      result.prepopulationStatus_ = prepopulationStatus_;
      if (ruleBasedUserListCase_ == 2) {
        if (combinedRuleUserListBuilder_ == null) {
          result.ruleBasedUserList_ = ruleBasedUserList_;
        } else {
          result.ruleBasedUserList_ = combinedRuleUserListBuilder_.build();
        }
      }
      if (ruleBasedUserListCase_ == 3) {
        if (dateSpecificRuleUserListBuilder_ == null) {
          result.ruleBasedUserList_ = ruleBasedUserList_;
        } else {
          result.ruleBasedUserList_ = dateSpecificRuleUserListBuilder_.build();
        }
      }
      if (ruleBasedUserListCase_ == 4) {
        if (expressionRuleUserListBuilder_ == null) {
          result.ruleBasedUserList_ = ruleBasedUserList_;
        } else {
          result.ruleBasedUserList_ = expressionRuleUserListBuilder_.build();
        }
      }
      result.ruleBasedUserListCase_ = ruleBasedUserListCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.common.RuleBasedUserListInfo) {
        return mergeFrom((com.google.ads.googleads.v1.common.RuleBasedUserListInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.common.RuleBasedUserListInfo other) {
      if (other == com.google.ads.googleads.v1.common.RuleBasedUserListInfo.getDefaultInstance()) return this;
      if (other.prepopulationStatus_ != 0) {
        setPrepopulationStatusValue(other.getPrepopulationStatusValue());
      }
      switch (other.getRuleBasedUserListCase()) {
        case COMBINED_RULE_USER_LIST: {
          mergeCombinedRuleUserList(other.getCombinedRuleUserList());
          break;
        }
        case DATE_SPECIFIC_RULE_USER_LIST: {
          mergeDateSpecificRuleUserList(other.getDateSpecificRuleUserList());
          break;
        }
        case EXPRESSION_RULE_USER_LIST: {
          mergeExpressionRuleUserList(other.getExpressionRuleUserList());
          break;
        }
        case RULEBASEDUSERLIST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.common.RuleBasedUserListInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.common.RuleBasedUserListInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int ruleBasedUserListCase_ = 0;
    private java.lang.Object ruleBasedUserList_;
    public RuleBasedUserListCase
        getRuleBasedUserListCase() {
      return RuleBasedUserListCase.forNumber(
          ruleBasedUserListCase_);
    }

    public Builder clearRuleBasedUserList() {
      ruleBasedUserListCase_ = 0;
      ruleBasedUserList_ = null;
      onChanged();
      return this;
    }


    private int prepopulationStatus_ = 0;
    /**
     * <pre>
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
     */
    public int getPrepopulationStatusValue() {
      return prepopulationStatus_;
    }
    /**
     * <pre>
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
     */
    public Builder setPrepopulationStatusValue(int value) {
      prepopulationStatus_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
     */
    public com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus getPrepopulationStatus() {
      @SuppressWarnings("deprecation")
      com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus result = com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.valueOf(prepopulationStatus_);
      return result == null ? com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
     */
    public Builder setPrepopulationStatus(com.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      prepopulationStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;</code>
     */
    public Builder clearPrepopulationStatus() {
      
      prepopulationStatus_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.CombinedRuleUserListInfo, com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.CombinedRuleUserListInfoOrBuilder> combinedRuleUserListBuilder_;
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public boolean hasCombinedRuleUserList() {
      return ruleBasedUserListCase_ == 2;
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public com.google.ads.googleads.v1.common.CombinedRuleUserListInfo getCombinedRuleUserList() {
      if (combinedRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 2) {
          return (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
      } else {
        if (ruleBasedUserListCase_ == 2) {
          return combinedRuleUserListBuilder_.getMessage();
        }
        return com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public Builder setCombinedRuleUserList(com.google.ads.googleads.v1.common.CombinedRuleUserListInfo value) {
      if (combinedRuleUserListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ruleBasedUserList_ = value;
        onChanged();
      } else {
        combinedRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public Builder setCombinedRuleUserList(
        com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder builderForValue) {
      if (combinedRuleUserListBuilder_ == null) {
        ruleBasedUserList_ = builderForValue.build();
        onChanged();
      } else {
        combinedRuleUserListBuilder_.setMessage(builderForValue.build());
      }
      ruleBasedUserListCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public Builder mergeCombinedRuleUserList(com.google.ads.googleads.v1.common.CombinedRuleUserListInfo value) {
      if (combinedRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 2 &&
            ruleBasedUserList_ != com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance()) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.newBuilder((com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_)
              .mergeFrom(value).buildPartial();
        } else {
          ruleBasedUserList_ = value;
        }
        onChanged();
      } else {
        if (ruleBasedUserListCase_ == 2) {
          combinedRuleUserListBuilder_.mergeFrom(value);
        }
        combinedRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public Builder clearCombinedRuleUserList() {
      if (combinedRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 2) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
          onChanged();
        }
      } else {
        if (ruleBasedUserListCase_ == 2) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
        }
        combinedRuleUserListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder getCombinedRuleUserListBuilder() {
      return getCombinedRuleUserListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    public com.google.ads.googleads.v1.common.CombinedRuleUserListInfoOrBuilder getCombinedRuleUserListOrBuilder() {
      if ((ruleBasedUserListCase_ == 2) && (combinedRuleUserListBuilder_ != null)) {
        return combinedRuleUserListBuilder_.getMessageOrBuilder();
      } else {
        if (ruleBasedUserListCase_ == 2) {
          return (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * User lists defined by combining two rules.
     * There are two operators: AND, where the left and right operands have to
     * be true; AND_NOT where left operand is true but right operand is false.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.CombinedRuleUserListInfo combined_rule_user_list = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.CombinedRuleUserListInfo, com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.CombinedRuleUserListInfoOrBuilder> 
        getCombinedRuleUserListFieldBuilder() {
      if (combinedRuleUserListBuilder_ == null) {
        if (!(ruleBasedUserListCase_ == 2)) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.getDefaultInstance();
        }
        combinedRuleUserListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.ads.googleads.v1.common.CombinedRuleUserListInfo, com.google.ads.googleads.v1.common.CombinedRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.CombinedRuleUserListInfoOrBuilder>(
                (com.google.ads.googleads.v1.common.CombinedRuleUserListInfo) ruleBasedUserList_,
                getParentForChildren(),
                isClean());
        ruleBasedUserList_ = null;
      }
      ruleBasedUserListCase_ = 2;
      onChanged();;
      return combinedRuleUserListBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfoOrBuilder> dateSpecificRuleUserListBuilder_;
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public boolean hasDateSpecificRuleUserList() {
      return ruleBasedUserListCase_ == 3;
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo getDateSpecificRuleUserList() {
      if (dateSpecificRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 3) {
          return (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
      } else {
        if (ruleBasedUserListCase_ == 3) {
          return dateSpecificRuleUserListBuilder_.getMessage();
        }
        return com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public Builder setDateSpecificRuleUserList(com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo value) {
      if (dateSpecificRuleUserListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ruleBasedUserList_ = value;
        onChanged();
      } else {
        dateSpecificRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public Builder setDateSpecificRuleUserList(
        com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder builderForValue) {
      if (dateSpecificRuleUserListBuilder_ == null) {
        ruleBasedUserList_ = builderForValue.build();
        onChanged();
      } else {
        dateSpecificRuleUserListBuilder_.setMessage(builderForValue.build());
      }
      ruleBasedUserListCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public Builder mergeDateSpecificRuleUserList(com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo value) {
      if (dateSpecificRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 3 &&
            ruleBasedUserList_ != com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance()) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.newBuilder((com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_)
              .mergeFrom(value).buildPartial();
        } else {
          ruleBasedUserList_ = value;
        }
        onChanged();
      } else {
        if (ruleBasedUserListCase_ == 3) {
          dateSpecificRuleUserListBuilder_.mergeFrom(value);
        }
        dateSpecificRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public Builder clearDateSpecificRuleUserList() {
      if (dateSpecificRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 3) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
          onChanged();
        }
      } else {
        if (ruleBasedUserListCase_ == 3) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
        }
        dateSpecificRuleUserListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder getDateSpecificRuleUserListBuilder() {
      return getDateSpecificRuleUserListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    public com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfoOrBuilder getDateSpecificRuleUserListOrBuilder() {
      if ((ruleBasedUserListCase_ == 3) && (dateSpecificRuleUserListBuilder_ != null)) {
        return dateSpecificRuleUserListBuilder_.getMessageOrBuilder();
      } else {
        if (ruleBasedUserListCase_ == 3) {
          return (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Visitors of a page during specific dates. The visiting periods are
     * defined as follows:
     * Between start_date (inclusive) and end_date (inclusive);
     * Before end_date (exclusive) with start_date = 2000-01-01;
     * After start_date (exclusive) with end_date = 2037-12-30.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo date_specific_rule_user_list = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfoOrBuilder> 
        getDateSpecificRuleUserListFieldBuilder() {
      if (dateSpecificRuleUserListBuilder_ == null) {
        if (!(ruleBasedUserListCase_ == 3)) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.getDefaultInstance();
        }
        dateSpecificRuleUserListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfoOrBuilder>(
                (com.google.ads.googleads.v1.common.DateSpecificRuleUserListInfo) ruleBasedUserList_,
                getParentForChildren(),
                isClean());
        ruleBasedUserList_ = null;
      }
      ruleBasedUserListCase_ = 3;
      onChanged();;
      return dateSpecificRuleUserListBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfoOrBuilder> expressionRuleUserListBuilder_;
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public boolean hasExpressionRuleUserList() {
      return ruleBasedUserListCase_ == 4;
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo getExpressionRuleUserList() {
      if (expressionRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 4) {
          return (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
      } else {
        if (ruleBasedUserListCase_ == 4) {
          return expressionRuleUserListBuilder_.getMessage();
        }
        return com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public Builder setExpressionRuleUserList(com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo value) {
      if (expressionRuleUserListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ruleBasedUserList_ = value;
        onChanged();
      } else {
        expressionRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public Builder setExpressionRuleUserList(
        com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder builderForValue) {
      if (expressionRuleUserListBuilder_ == null) {
        ruleBasedUserList_ = builderForValue.build();
        onChanged();
      } else {
        expressionRuleUserListBuilder_.setMessage(builderForValue.build());
      }
      ruleBasedUserListCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public Builder mergeExpressionRuleUserList(com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo value) {
      if (expressionRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 4 &&
            ruleBasedUserList_ != com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance()) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.newBuilder((com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_)
              .mergeFrom(value).buildPartial();
        } else {
          ruleBasedUserList_ = value;
        }
        onChanged();
      } else {
        if (ruleBasedUserListCase_ == 4) {
          expressionRuleUserListBuilder_.mergeFrom(value);
        }
        expressionRuleUserListBuilder_.setMessage(value);
      }
      ruleBasedUserListCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public Builder clearExpressionRuleUserList() {
      if (expressionRuleUserListBuilder_ == null) {
        if (ruleBasedUserListCase_ == 4) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
          onChanged();
        }
      } else {
        if (ruleBasedUserListCase_ == 4) {
          ruleBasedUserListCase_ = 0;
          ruleBasedUserList_ = null;
        }
        expressionRuleUserListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder getExpressionRuleUserListBuilder() {
      return getExpressionRuleUserListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    public com.google.ads.googleads.v1.common.ExpressionRuleUserListInfoOrBuilder getExpressionRuleUserListOrBuilder() {
      if ((ruleBasedUserListCase_ == 4) && (expressionRuleUserListBuilder_ != null)) {
        return expressionRuleUserListBuilder_.getMessageOrBuilder();
      } else {
        if (ruleBasedUserListCase_ == 4) {
          return (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_;
        }
        return com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Visitors of a page. The page visit is defined by one boolean rule
     * expression.
     * </pre>
     *
     * <code>.google.ads.googleads.v1.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfoOrBuilder> 
        getExpressionRuleUserListFieldBuilder() {
      if (expressionRuleUserListBuilder_ == null) {
        if (!(ruleBasedUserListCase_ == 4)) {
          ruleBasedUserList_ = com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.getDefaultInstance();
        }
        expressionRuleUserListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo.Builder, com.google.ads.googleads.v1.common.ExpressionRuleUserListInfoOrBuilder>(
                (com.google.ads.googleads.v1.common.ExpressionRuleUserListInfo) ruleBasedUserList_,
                getParentForChildren(),
                isClean());
        ruleBasedUserList_ = null;
      }
      ruleBasedUserListCase_ = 4;
      onChanged();;
      return expressionRuleUserListBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.common.RuleBasedUserListInfo)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.common.RuleBasedUserListInfo)
  private static final com.google.ads.googleads.v1.common.RuleBasedUserListInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.common.RuleBasedUserListInfo();
  }

  public static com.google.ads.googleads.v1.common.RuleBasedUserListInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RuleBasedUserListInfo>
      PARSER = new com.google.protobuf.AbstractParser<RuleBasedUserListInfo>() {
    @java.lang.Override
    public RuleBasedUserListInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RuleBasedUserListInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RuleBasedUserListInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RuleBasedUserListInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.common.RuleBasedUserListInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

