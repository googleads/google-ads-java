// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/enums/price_placeholder_field.proto

package com.google.ads.googleads.v1.enums;

/**
 * <pre>
 * Values for Price placeholder fields.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.enums.PricePlaceholderFieldEnum}
 */
public  final class PricePlaceholderFieldEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)
    PricePlaceholderFieldEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PricePlaceholderFieldEnum.newBuilder() to construct.
  private PricePlaceholderFieldEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PricePlaceholderFieldEnum() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PricePlaceholderFieldEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.enums.PricePlaceholderFieldProto.internal_static_google_ads_googleads_v1_enums_PricePlaceholderFieldEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.enums.PricePlaceholderFieldProto.internal_static_google_ads_googleads_v1_enums_PricePlaceholderFieldEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.class, com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.Builder.class);
  }

  /**
   * <pre>
   * Possible values for Price placeholder fields.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.PricePlaceholderField}
   */
  public enum PricePlaceholderField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not specified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * Used for return value only. Represents value unknown in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * Data Type: STRING. The type of your price feed. Must match one of the
     * predefined price feed type exactly.
     * </pre>
     *
     * <code>TYPE = 2;</code>
     */
    TYPE(2),
    /**
     * <pre>
     * Data Type: STRING. The qualifier of each price. Must match one of the
     * predefined price qualifiers exactly.
     * </pre>
     *
     * <code>PRICE_QUALIFIER = 3;</code>
     */
    PRICE_QUALIFIER(3),
    /**
     * <pre>
     * Data Type: URL. Tracking template for the price feed when using Upgraded
     * URLs.
     * </pre>
     *
     * <code>TRACKING_TEMPLATE = 4;</code>
     */
    TRACKING_TEMPLATE(4),
    /**
     * <pre>
     * Data Type: STRING. Language of the price feed. Must match one of the
     * available available locale codes exactly.
     * </pre>
     *
     * <code>LANGUAGE = 5;</code>
     */
    LANGUAGE(5),
    /**
     * <pre>
     * Data Type: STRING. Final URL suffix for the price feed when using
     * parallel tracking.
     * </pre>
     *
     * <code>FINAL_URL_SUFFIX = 6;</code>
     */
    FINAL_URL_SUFFIX(6),
    /**
     * <pre>
     * Data Type: STRING. The header of item 1 of the table.
     * </pre>
     *
     * <code>ITEM_1_HEADER = 100;</code>
     */
    ITEM_1_HEADER(100),
    /**
     * <pre>
     * Data Type: STRING. The description of item 1 of the table.
     * </pre>
     *
     * <code>ITEM_1_DESCRIPTION = 101;</code>
     */
    ITEM_1_DESCRIPTION(101),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 1 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_1_PRICE = 102;</code>
     */
    ITEM_1_PRICE(102),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 1 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_1_UNIT = 103;</code>
     */
    ITEM_1_UNIT(103),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 1 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_1_FINAL_URLS = 104;</code>
     */
    ITEM_1_FINAL_URLS(104),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 1 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_1_FINAL_MOBILE_URLS = 105;</code>
     */
    ITEM_1_FINAL_MOBILE_URLS(105),
    /**
     * <pre>
     * Data Type: STRING. The header of item 2 of the table.
     * </pre>
     *
     * <code>ITEM_2_HEADER = 200;</code>
     */
    ITEM_2_HEADER(200),
    /**
     * <pre>
     * Data Type: STRING. The description of item 2 of the table.
     * </pre>
     *
     * <code>ITEM_2_DESCRIPTION = 201;</code>
     */
    ITEM_2_DESCRIPTION(201),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 2 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_2_PRICE = 202;</code>
     */
    ITEM_2_PRICE(202),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 2 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_2_UNIT = 203;</code>
     */
    ITEM_2_UNIT(203),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 2 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_2_FINAL_URLS = 204;</code>
     */
    ITEM_2_FINAL_URLS(204),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 2 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_2_FINAL_MOBILE_URLS = 205;</code>
     */
    ITEM_2_FINAL_MOBILE_URLS(205),
    /**
     * <pre>
     * Data Type: STRING. The header of item 3 of the table.
     * </pre>
     *
     * <code>ITEM_3_HEADER = 300;</code>
     */
    ITEM_3_HEADER(300),
    /**
     * <pre>
     * Data Type: STRING. The description of item 3 of the table.
     * </pre>
     *
     * <code>ITEM_3_DESCRIPTION = 301;</code>
     */
    ITEM_3_DESCRIPTION(301),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 3 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_3_PRICE = 302;</code>
     */
    ITEM_3_PRICE(302),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 3 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_3_UNIT = 303;</code>
     */
    ITEM_3_UNIT(303),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 3 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_3_FINAL_URLS = 304;</code>
     */
    ITEM_3_FINAL_URLS(304),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 3 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_3_FINAL_MOBILE_URLS = 305;</code>
     */
    ITEM_3_FINAL_MOBILE_URLS(305),
    /**
     * <pre>
     * Data Type: STRING. The header of item 4 of the table.
     * </pre>
     *
     * <code>ITEM_4_HEADER = 400;</code>
     */
    ITEM_4_HEADER(400),
    /**
     * <pre>
     * Data Type: STRING. The description of item 4 of the table.
     * </pre>
     *
     * <code>ITEM_4_DESCRIPTION = 401;</code>
     */
    ITEM_4_DESCRIPTION(401),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 4 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_4_PRICE = 402;</code>
     */
    ITEM_4_PRICE(402),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 4 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_4_UNIT = 403;</code>
     */
    ITEM_4_UNIT(403),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 4 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_4_FINAL_URLS = 404;</code>
     */
    ITEM_4_FINAL_URLS(404),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 4 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_4_FINAL_MOBILE_URLS = 405;</code>
     */
    ITEM_4_FINAL_MOBILE_URLS(405),
    /**
     * <pre>
     * Data Type: STRING. The header of item 5 of the table.
     * </pre>
     *
     * <code>ITEM_5_HEADER = 500;</code>
     */
    ITEM_5_HEADER(500),
    /**
     * <pre>
     * Data Type: STRING. The description of item 5 of the table.
     * </pre>
     *
     * <code>ITEM_5_DESCRIPTION = 501;</code>
     */
    ITEM_5_DESCRIPTION(501),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 5 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_5_PRICE = 502;</code>
     */
    ITEM_5_PRICE(502),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 5 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_5_UNIT = 503;</code>
     */
    ITEM_5_UNIT(503),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 5 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_5_FINAL_URLS = 504;</code>
     */
    ITEM_5_FINAL_URLS(504),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 5 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_5_FINAL_MOBILE_URLS = 505;</code>
     */
    ITEM_5_FINAL_MOBILE_URLS(505),
    /**
     * <pre>
     * Data Type: STRING. The header of item 6 of the table.
     * </pre>
     *
     * <code>ITEM_6_HEADER = 600;</code>
     */
    ITEM_6_HEADER(600),
    /**
     * <pre>
     * Data Type: STRING. The description of item 6 of the table.
     * </pre>
     *
     * <code>ITEM_6_DESCRIPTION = 601;</code>
     */
    ITEM_6_DESCRIPTION(601),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 6 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_6_PRICE = 602;</code>
     */
    ITEM_6_PRICE(602),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 6 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_6_UNIT = 603;</code>
     */
    ITEM_6_UNIT(603),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 6 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_6_FINAL_URLS = 604;</code>
     */
    ITEM_6_FINAL_URLS(604),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 6 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_6_FINAL_MOBILE_URLS = 605;</code>
     */
    ITEM_6_FINAL_MOBILE_URLS(605),
    /**
     * <pre>
     * Data Type: STRING. The header of item 7 of the table.
     * </pre>
     *
     * <code>ITEM_7_HEADER = 700;</code>
     */
    ITEM_7_HEADER(700),
    /**
     * <pre>
     * Data Type: STRING. The description of item 7 of the table.
     * </pre>
     *
     * <code>ITEM_7_DESCRIPTION = 701;</code>
     */
    ITEM_7_DESCRIPTION(701),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 7 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_7_PRICE = 702;</code>
     */
    ITEM_7_PRICE(702),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 7 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_7_UNIT = 703;</code>
     */
    ITEM_7_UNIT(703),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 7 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_7_FINAL_URLS = 704;</code>
     */
    ITEM_7_FINAL_URLS(704),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 7 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_7_FINAL_MOBILE_URLS = 705;</code>
     */
    ITEM_7_FINAL_MOBILE_URLS(705),
    /**
     * <pre>
     * Data Type: STRING. The header of item 8 of the table.
     * </pre>
     *
     * <code>ITEM_8_HEADER = 800;</code>
     */
    ITEM_8_HEADER(800),
    /**
     * <pre>
     * Data Type: STRING. The description of item 8 of the table.
     * </pre>
     *
     * <code>ITEM_8_DESCRIPTION = 801;</code>
     */
    ITEM_8_DESCRIPTION(801),
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 8 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_8_PRICE = 802;</code>
     */
    ITEM_8_PRICE(802),
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 8 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_8_UNIT = 803;</code>
     */
    ITEM_8_UNIT(803),
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 8 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_8_FINAL_URLS = 804;</code>
     */
    ITEM_8_FINAL_URLS(804),
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 8 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_8_FINAL_MOBILE_URLS = 805;</code>
     */
    ITEM_8_FINAL_MOBILE_URLS(805),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not specified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Used for return value only. Represents value unknown in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * Data Type: STRING. The type of your price feed. Must match one of the
     * predefined price feed type exactly.
     * </pre>
     *
     * <code>TYPE = 2;</code>
     */
    public static final int TYPE_VALUE = 2;
    /**
     * <pre>
     * Data Type: STRING. The qualifier of each price. Must match one of the
     * predefined price qualifiers exactly.
     * </pre>
     *
     * <code>PRICE_QUALIFIER = 3;</code>
     */
    public static final int PRICE_QUALIFIER_VALUE = 3;
    /**
     * <pre>
     * Data Type: URL. Tracking template for the price feed when using Upgraded
     * URLs.
     * </pre>
     *
     * <code>TRACKING_TEMPLATE = 4;</code>
     */
    public static final int TRACKING_TEMPLATE_VALUE = 4;
    /**
     * <pre>
     * Data Type: STRING. Language of the price feed. Must match one of the
     * available available locale codes exactly.
     * </pre>
     *
     * <code>LANGUAGE = 5;</code>
     */
    public static final int LANGUAGE_VALUE = 5;
    /**
     * <pre>
     * Data Type: STRING. Final URL suffix for the price feed when using
     * parallel tracking.
     * </pre>
     *
     * <code>FINAL_URL_SUFFIX = 6;</code>
     */
    public static final int FINAL_URL_SUFFIX_VALUE = 6;
    /**
     * <pre>
     * Data Type: STRING. The header of item 1 of the table.
     * </pre>
     *
     * <code>ITEM_1_HEADER = 100;</code>
     */
    public static final int ITEM_1_HEADER_VALUE = 100;
    /**
     * <pre>
     * Data Type: STRING. The description of item 1 of the table.
     * </pre>
     *
     * <code>ITEM_1_DESCRIPTION = 101;</code>
     */
    public static final int ITEM_1_DESCRIPTION_VALUE = 101;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 1 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_1_PRICE = 102;</code>
     */
    public static final int ITEM_1_PRICE_VALUE = 102;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 1 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_1_UNIT = 103;</code>
     */
    public static final int ITEM_1_UNIT_VALUE = 103;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 1 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_1_FINAL_URLS = 104;</code>
     */
    public static final int ITEM_1_FINAL_URLS_VALUE = 104;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 1 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_1_FINAL_MOBILE_URLS = 105;</code>
     */
    public static final int ITEM_1_FINAL_MOBILE_URLS_VALUE = 105;
    /**
     * <pre>
     * Data Type: STRING. The header of item 2 of the table.
     * </pre>
     *
     * <code>ITEM_2_HEADER = 200;</code>
     */
    public static final int ITEM_2_HEADER_VALUE = 200;
    /**
     * <pre>
     * Data Type: STRING. The description of item 2 of the table.
     * </pre>
     *
     * <code>ITEM_2_DESCRIPTION = 201;</code>
     */
    public static final int ITEM_2_DESCRIPTION_VALUE = 201;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 2 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_2_PRICE = 202;</code>
     */
    public static final int ITEM_2_PRICE_VALUE = 202;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 2 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_2_UNIT = 203;</code>
     */
    public static final int ITEM_2_UNIT_VALUE = 203;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 2 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_2_FINAL_URLS = 204;</code>
     */
    public static final int ITEM_2_FINAL_URLS_VALUE = 204;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 2 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_2_FINAL_MOBILE_URLS = 205;</code>
     */
    public static final int ITEM_2_FINAL_MOBILE_URLS_VALUE = 205;
    /**
     * <pre>
     * Data Type: STRING. The header of item 3 of the table.
     * </pre>
     *
     * <code>ITEM_3_HEADER = 300;</code>
     */
    public static final int ITEM_3_HEADER_VALUE = 300;
    /**
     * <pre>
     * Data Type: STRING. The description of item 3 of the table.
     * </pre>
     *
     * <code>ITEM_3_DESCRIPTION = 301;</code>
     */
    public static final int ITEM_3_DESCRIPTION_VALUE = 301;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 3 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_3_PRICE = 302;</code>
     */
    public static final int ITEM_3_PRICE_VALUE = 302;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 3 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_3_UNIT = 303;</code>
     */
    public static final int ITEM_3_UNIT_VALUE = 303;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 3 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_3_FINAL_URLS = 304;</code>
     */
    public static final int ITEM_3_FINAL_URLS_VALUE = 304;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 3 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_3_FINAL_MOBILE_URLS = 305;</code>
     */
    public static final int ITEM_3_FINAL_MOBILE_URLS_VALUE = 305;
    /**
     * <pre>
     * Data Type: STRING. The header of item 4 of the table.
     * </pre>
     *
     * <code>ITEM_4_HEADER = 400;</code>
     */
    public static final int ITEM_4_HEADER_VALUE = 400;
    /**
     * <pre>
     * Data Type: STRING. The description of item 4 of the table.
     * </pre>
     *
     * <code>ITEM_4_DESCRIPTION = 401;</code>
     */
    public static final int ITEM_4_DESCRIPTION_VALUE = 401;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 4 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_4_PRICE = 402;</code>
     */
    public static final int ITEM_4_PRICE_VALUE = 402;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 4 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_4_UNIT = 403;</code>
     */
    public static final int ITEM_4_UNIT_VALUE = 403;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 4 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_4_FINAL_URLS = 404;</code>
     */
    public static final int ITEM_4_FINAL_URLS_VALUE = 404;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 4 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_4_FINAL_MOBILE_URLS = 405;</code>
     */
    public static final int ITEM_4_FINAL_MOBILE_URLS_VALUE = 405;
    /**
     * <pre>
     * Data Type: STRING. The header of item 5 of the table.
     * </pre>
     *
     * <code>ITEM_5_HEADER = 500;</code>
     */
    public static final int ITEM_5_HEADER_VALUE = 500;
    /**
     * <pre>
     * Data Type: STRING. The description of item 5 of the table.
     * </pre>
     *
     * <code>ITEM_5_DESCRIPTION = 501;</code>
     */
    public static final int ITEM_5_DESCRIPTION_VALUE = 501;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 5 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_5_PRICE = 502;</code>
     */
    public static final int ITEM_5_PRICE_VALUE = 502;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 5 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_5_UNIT = 503;</code>
     */
    public static final int ITEM_5_UNIT_VALUE = 503;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 5 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_5_FINAL_URLS = 504;</code>
     */
    public static final int ITEM_5_FINAL_URLS_VALUE = 504;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 5 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_5_FINAL_MOBILE_URLS = 505;</code>
     */
    public static final int ITEM_5_FINAL_MOBILE_URLS_VALUE = 505;
    /**
     * <pre>
     * Data Type: STRING. The header of item 6 of the table.
     * </pre>
     *
     * <code>ITEM_6_HEADER = 600;</code>
     */
    public static final int ITEM_6_HEADER_VALUE = 600;
    /**
     * <pre>
     * Data Type: STRING. The description of item 6 of the table.
     * </pre>
     *
     * <code>ITEM_6_DESCRIPTION = 601;</code>
     */
    public static final int ITEM_6_DESCRIPTION_VALUE = 601;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 6 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_6_PRICE = 602;</code>
     */
    public static final int ITEM_6_PRICE_VALUE = 602;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 6 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_6_UNIT = 603;</code>
     */
    public static final int ITEM_6_UNIT_VALUE = 603;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 6 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_6_FINAL_URLS = 604;</code>
     */
    public static final int ITEM_6_FINAL_URLS_VALUE = 604;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 6 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_6_FINAL_MOBILE_URLS = 605;</code>
     */
    public static final int ITEM_6_FINAL_MOBILE_URLS_VALUE = 605;
    /**
     * <pre>
     * Data Type: STRING. The header of item 7 of the table.
     * </pre>
     *
     * <code>ITEM_7_HEADER = 700;</code>
     */
    public static final int ITEM_7_HEADER_VALUE = 700;
    /**
     * <pre>
     * Data Type: STRING. The description of item 7 of the table.
     * </pre>
     *
     * <code>ITEM_7_DESCRIPTION = 701;</code>
     */
    public static final int ITEM_7_DESCRIPTION_VALUE = 701;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 7 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_7_PRICE = 702;</code>
     */
    public static final int ITEM_7_PRICE_VALUE = 702;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 7 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_7_UNIT = 703;</code>
     */
    public static final int ITEM_7_UNIT_VALUE = 703;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 7 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_7_FINAL_URLS = 704;</code>
     */
    public static final int ITEM_7_FINAL_URLS_VALUE = 704;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 7 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_7_FINAL_MOBILE_URLS = 705;</code>
     */
    public static final int ITEM_7_FINAL_MOBILE_URLS_VALUE = 705;
    /**
     * <pre>
     * Data Type: STRING. The header of item 8 of the table.
     * </pre>
     *
     * <code>ITEM_8_HEADER = 800;</code>
     */
    public static final int ITEM_8_HEADER_VALUE = 800;
    /**
     * <pre>
     * Data Type: STRING. The description of item 8 of the table.
     * </pre>
     *
     * <code>ITEM_8_DESCRIPTION = 801;</code>
     */
    public static final int ITEM_8_DESCRIPTION_VALUE = 801;
    /**
     * <pre>
     * Data Type: MONEY. The price (money with currency) of item 8 of the table,
     * e.g., 30 USD. The currency must match one of the available currencies.
     * </pre>
     *
     * <code>ITEM_8_PRICE = 802;</code>
     */
    public static final int ITEM_8_PRICE_VALUE = 802;
    /**
     * <pre>
     * Data Type: STRING. The price unit of item 8 of the table. Must match one
     * of the predefined price units.
     * </pre>
     *
     * <code>ITEM_8_UNIT = 803;</code>
     */
    public static final int ITEM_8_UNIT_VALUE = 803;
    /**
     * <pre>
     * Data Type: URL_LIST. The final URLs of item 8 of the table when using
     * Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_8_FINAL_URLS = 804;</code>
     */
    public static final int ITEM_8_FINAL_URLS_VALUE = 804;
    /**
     * <pre>
     * Data Type: URL_LIST. The final mobile URLs of item 8 of the table when
     * using Upgraded URLs.
     * </pre>
     *
     * <code>ITEM_8_FINAL_MOBILE_URLS = 805;</code>
     */
    public static final int ITEM_8_FINAL_MOBILE_URLS_VALUE = 805;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PricePlaceholderField valueOf(int value) {
      return forNumber(value);
    }

    public static PricePlaceholderField forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 2: return TYPE;
        case 3: return PRICE_QUALIFIER;
        case 4: return TRACKING_TEMPLATE;
        case 5: return LANGUAGE;
        case 6: return FINAL_URL_SUFFIX;
        case 100: return ITEM_1_HEADER;
        case 101: return ITEM_1_DESCRIPTION;
        case 102: return ITEM_1_PRICE;
        case 103: return ITEM_1_UNIT;
        case 104: return ITEM_1_FINAL_URLS;
        case 105: return ITEM_1_FINAL_MOBILE_URLS;
        case 200: return ITEM_2_HEADER;
        case 201: return ITEM_2_DESCRIPTION;
        case 202: return ITEM_2_PRICE;
        case 203: return ITEM_2_UNIT;
        case 204: return ITEM_2_FINAL_URLS;
        case 205: return ITEM_2_FINAL_MOBILE_URLS;
        case 300: return ITEM_3_HEADER;
        case 301: return ITEM_3_DESCRIPTION;
        case 302: return ITEM_3_PRICE;
        case 303: return ITEM_3_UNIT;
        case 304: return ITEM_3_FINAL_URLS;
        case 305: return ITEM_3_FINAL_MOBILE_URLS;
        case 400: return ITEM_4_HEADER;
        case 401: return ITEM_4_DESCRIPTION;
        case 402: return ITEM_4_PRICE;
        case 403: return ITEM_4_UNIT;
        case 404: return ITEM_4_FINAL_URLS;
        case 405: return ITEM_4_FINAL_MOBILE_URLS;
        case 500: return ITEM_5_HEADER;
        case 501: return ITEM_5_DESCRIPTION;
        case 502: return ITEM_5_PRICE;
        case 503: return ITEM_5_UNIT;
        case 504: return ITEM_5_FINAL_URLS;
        case 505: return ITEM_5_FINAL_MOBILE_URLS;
        case 600: return ITEM_6_HEADER;
        case 601: return ITEM_6_DESCRIPTION;
        case 602: return ITEM_6_PRICE;
        case 603: return ITEM_6_UNIT;
        case 604: return ITEM_6_FINAL_URLS;
        case 605: return ITEM_6_FINAL_MOBILE_URLS;
        case 700: return ITEM_7_HEADER;
        case 701: return ITEM_7_DESCRIPTION;
        case 702: return ITEM_7_PRICE;
        case 703: return ITEM_7_UNIT;
        case 704: return ITEM_7_FINAL_URLS;
        case 705: return ITEM_7_FINAL_MOBILE_URLS;
        case 800: return ITEM_8_HEADER;
        case 801: return ITEM_8_DESCRIPTION;
        case 802: return ITEM_8_PRICE;
        case 803: return ITEM_8_UNIT;
        case 804: return ITEM_8_FINAL_URLS;
        case 805: return ITEM_8_FINAL_MOBILE_URLS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PricePlaceholderField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PricePlaceholderField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PricePlaceholderField>() {
            public PricePlaceholderField findValueByNumber(int number) {
              return PricePlaceholderField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final PricePlaceholderField[] VALUES = values();

    public static PricePlaceholderField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PricePlaceholderField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.PricePlaceholderField)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum other = (com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Values for Price placeholder fields.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.enums.PricePlaceholderFieldEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)
      com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.enums.PricePlaceholderFieldProto.internal_static_google_ads_googleads_v1_enums_PricePlaceholderFieldEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.enums.PricePlaceholderFieldProto.internal_static_google_ads_googleads_v1_enums_PricePlaceholderFieldEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.class, com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.enums.PricePlaceholderFieldProto.internal_static_google_ads_googleads_v1_enums_PricePlaceholderFieldEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum build() {
      com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum buildPartial() {
      com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum result = new com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum) {
        return mergeFrom((com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum other) {
      if (other == com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.enums.PricePlaceholderFieldEnum)
  private static final com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum();
  }

  public static com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PricePlaceholderFieldEnum>
      PARSER = new com.google.protobuf.AbstractParser<PricePlaceholderFieldEnum>() {
    @java.lang.Override
    public PricePlaceholderFieldEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PricePlaceholderFieldEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PricePlaceholderFieldEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PricePlaceholderFieldEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.enums.PricePlaceholderFieldEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

