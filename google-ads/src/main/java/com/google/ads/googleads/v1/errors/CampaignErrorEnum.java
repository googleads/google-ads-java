// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/errors/campaign_error.proto

package com.google.ads.googleads.v1.errors;

/**
 * <pre>
 * Container for enum describing possible campaign errors.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.errors.CampaignErrorEnum}
 */
public  final class CampaignErrorEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.errors.CampaignErrorEnum)
    CampaignErrorEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CampaignErrorEnum.newBuilder() to construct.
  private CampaignErrorEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CampaignErrorEnum() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CampaignErrorEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.errors.CampaignErrorProto.internal_static_google_ads_googleads_v1_errors_CampaignErrorEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.errors.CampaignErrorProto.internal_static_google_ads_googleads_v1_errors_CampaignErrorEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.errors.CampaignErrorEnum.class, com.google.ads.googleads.v1.errors.CampaignErrorEnum.Builder.class);
  }

  /**
   * <pre>
   * Enum describing possible campaign errors.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v1.errors.CampaignErrorEnum.CampaignError}
   */
  public enum CampaignError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * Cannot target content network.
     * </pre>
     *
     * <code>CANNOT_TARGET_CONTENT_NETWORK = 3;</code>
     */
    CANNOT_TARGET_CONTENT_NETWORK(3),
    /**
     * <pre>
     * Cannot target search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_SEARCH_NETWORK = 4;</code>
     */
    CANNOT_TARGET_SEARCH_NETWORK(4),
    /**
     * <pre>
     * Cannot cover search network without google search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH = 5;</code>
     */
    CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH(5),
    /**
     * <pre>
     * Cannot target Google Search network for a CPM campaign.
     * </pre>
     *
     * <code>CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN = 6;</code>
     */
    CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN(6),
    /**
     * <pre>
     * Must target at least one network.
     * </pre>
     *
     * <code>CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK = 7;</code>
     */
    CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK(7),
    /**
     * <pre>
     * Only some Google partners are allowed to target partner search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_PARTNER_SEARCH_NETWORK = 8;</code>
     */
    CANNOT_TARGET_PARTNER_SEARCH_NETWORK(8),
    /**
     * <pre>
     * Cannot target content network only as campaign has criteria-level bidding
     * strategy.
     * </pre>
     *
     * <code>CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY = 9;</code>
     */
    CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY(9),
    /**
     * <pre>
     * Cannot modify the start or end date such that the campaign duration would
     * not contain the durations of all runnable trials.
     * </pre>
     *
     * <code>CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS = 10;</code>
     */
    CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS(10),
    /**
     * <pre>
     * Cannot modify dates, budget or campaign name of a trial campaign.
     * </pre>
     *
     * <code>CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN = 11;</code>
     */
    CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN(11),
    /**
     * <pre>
     * Trying to modify the name of an active or paused campaign, where the name
     * is already assigned to another active or paused campaign.
     * </pre>
     *
     * <code>DUPLICATE_CAMPAIGN_NAME = 12;</code>
     */
    DUPLICATE_CAMPAIGN_NAME(12),
    /**
     * <pre>
     * Two fields are in conflicting modes.
     * </pre>
     *
     * <code>INCOMPATIBLE_CAMPAIGN_FIELD = 13;</code>
     */
    INCOMPATIBLE_CAMPAIGN_FIELD(13),
    /**
     * <pre>
     * Campaign name cannot be used.
     * </pre>
     *
     * <code>INVALID_CAMPAIGN_NAME = 14;</code>
     */
    INVALID_CAMPAIGN_NAME(14),
    /**
     * <pre>
     * Given status is invalid.
     * </pre>
     *
     * <code>INVALID_AD_SERVING_OPTIMIZATION_STATUS = 15;</code>
     */
    INVALID_AD_SERVING_OPTIMIZATION_STATUS(15),
    /**
     * <pre>
     * Error in the campaign level tracking url.
     * </pre>
     *
     * <code>INVALID_TRACKING_URL = 16;</code>
     */
    INVALID_TRACKING_URL(16),
    /**
     * <pre>
     * Cannot set both tracking url template and tracking setting. An user has
     * to clear legacy tracking setting in order to add tracking url template.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING = 17;</code>
     */
    CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING(17),
    /**
     * <pre>
     * The maximum number of impressions for Frequency Cap should be an integer
     * greater than 0.
     * </pre>
     *
     * <code>MAX_IMPRESSIONS_NOT_IN_RANGE = 18;</code>
     */
    MAX_IMPRESSIONS_NOT_IN_RANGE(18),
    /**
     * <pre>
     * Only the Day, Week and Month time units are supported.
     * </pre>
     *
     * <code>TIME_UNIT_NOT_SUPPORTED = 19;</code>
     */
    TIME_UNIT_NOT_SUPPORTED(19),
    /**
     * <pre>
     * Operation not allowed on a campaign whose serving status has ended
     * </pre>
     *
     * <code>INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED = 20;</code>
     */
    INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED(20),
    /**
     * <pre>
     * This budget is exclusively linked to a Campaign that is using experiments
     * so it cannot be shared.
     * </pre>
     *
     * <code>BUDGET_CANNOT_BE_SHARED = 21;</code>
     */
    BUDGET_CANNOT_BE_SHARED(21),
    /**
     * <pre>
     * Campaigns using experiments cannot use a shared budget.
     * </pre>
     *
     * <code>CAMPAIGN_CANNOT_USE_SHARED_BUDGET = 22;</code>
     */
    CAMPAIGN_CANNOT_USE_SHARED_BUDGET(22),
    /**
     * <pre>
     * A different budget cannot be assigned to a campaign when there are
     * running or scheduled trials.
     * </pre>
     *
     * <code>CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS = 23;</code>
     */
    CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS(23),
    /**
     * <pre>
     * No link found between the campaign and the label.
     * </pre>
     *
     * <code>CAMPAIGN_LABEL_DOES_NOT_EXIST = 24;</code>
     */
    CAMPAIGN_LABEL_DOES_NOT_EXIST(24),
    /**
     * <pre>
     * The label has already been attached to the campaign.
     * </pre>
     *
     * <code>CAMPAIGN_LABEL_ALREADY_EXISTS = 25;</code>
     */
    CAMPAIGN_LABEL_ALREADY_EXISTS(25),
    /**
     * <pre>
     * A ShoppingSetting was not found when creating a shopping campaign.
     * </pre>
     *
     * <code>MISSING_SHOPPING_SETTING = 26;</code>
     */
    MISSING_SHOPPING_SETTING(26),
    /**
     * <pre>
     * The country in shopping setting is not an allowed country.
     * </pre>
     *
     * <code>INVALID_SHOPPING_SALES_COUNTRY = 27;</code>
     */
    INVALID_SHOPPING_SALES_COUNTRY(27),
    /**
     * <pre>
     * A Campaign with channel sub type UNIVERSAL_APP_CAMPAIGN must have a
     * UniversalAppCampaignSetting specified.
     * </pre>
     *
     * <code>MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING = 30;</code>
     */
    MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING(30),
    /**
     * <pre>
     * The requested channel type is not available according to the customer's
     * account setting.
     * </pre>
     *
     * <code>ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE = 31;</code>
     */
    ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE(31),
    /**
     * <pre>
     * The AdvertisingChannelSubType is not a valid subtype of the primary
     * channel type.
     * </pre>
     *
     * <code>INVALID_ADVERTISING_CHANNEL_SUB_TYPE = 32;</code>
     */
    INVALID_ADVERTISING_CHANNEL_SUB_TYPE(32),
    /**
     * <pre>
     * At least one conversion must be selected.
     * </pre>
     *
     * <code>AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED = 33;</code>
     */
    AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED(33),
    /**
     * <pre>
     * Setting ad rotation mode for a campaign is not allowed. Ad rotation mode
     * at campaign is deprecated.
     * </pre>
     *
     * <code>CANNOT_SET_AD_ROTATION_MODE = 34;</code>
     */
    CANNOT_SET_AD_ROTATION_MODE(34),
    /**
     * <pre>
     * Trying to change start date on a campaign that has started.
     * </pre>
     *
     * <code>CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED = 35;</code>
     */
    CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED(35),
    /**
     * <pre>
     * Trying to modify a date into the past.
     * </pre>
     *
     * <code>CANNOT_SET_DATE_TO_PAST = 36;</code>
     */
    CANNOT_SET_DATE_TO_PAST(36),
    /**
     * <pre>
     * Hotel center id in the hotel setting does not match any customer links.
     * </pre>
     *
     * <code>MISSING_HOTEL_CUSTOMER_LINK = 37;</code>
     */
    MISSING_HOTEL_CUSTOMER_LINK(37),
    /**
     * <pre>
     * Hotel center id in the hotel setting must match an active customer link.
     * </pre>
     *
     * <code>INVALID_HOTEL_CUSTOMER_LINK = 38;</code>
     */
    INVALID_HOTEL_CUSTOMER_LINK(38),
    /**
     * <pre>
     * Hotel setting was not found when creating a hotel ads campaign.
     * </pre>
     *
     * <code>MISSING_HOTEL_SETTING = 39;</code>
     */
    MISSING_HOTEL_SETTING(39),
    /**
     * <pre>
     * A Campaign cannot use shared campaign budgets and be part of a campaign
     * group.
     * </pre>
     *
     * <code>CANNOT_USE_SHARED_CAMPAIGN_BUDGET_WHILE_PART_OF_CAMPAIGN_GROUP = 40;</code>
     */
    CANNOT_USE_SHARED_CAMPAIGN_BUDGET_WHILE_PART_OF_CAMPAIGN_GROUP(40),
    /**
     * <pre>
     * The app ID was not found.
     * </pre>
     *
     * <code>APP_NOT_FOUND = 41;</code>
     */
    APP_NOT_FOUND(41),
    /**
     * <pre>
     * Campaign.shopping_setting.enable_local is not supported for the specified
     * campaign type.
     * </pre>
     *
     * <code>SHOPPING_ENABLE_LOCAL_NOT_SUPPORTED_FOR_CAMPAIGN_TYPE = 42;</code>
     */
    SHOPPING_ENABLE_LOCAL_NOT_SUPPORTED_FOR_CAMPAIGN_TYPE(42),
    /**
     * <pre>
     * The merchant does not support the creation of campaigns for Shopping
     * Comparison Listing Ads.
     * </pre>
     *
     * <code>MERCHANT_NOT_ALLOWED_FOR_COMPARISON_LISTING_ADS = 43;</code>
     */
    MERCHANT_NOT_ALLOWED_FOR_COMPARISON_LISTING_ADS(43),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * Cannot target content network.
     * </pre>
     *
     * <code>CANNOT_TARGET_CONTENT_NETWORK = 3;</code>
     */
    public static final int CANNOT_TARGET_CONTENT_NETWORK_VALUE = 3;
    /**
     * <pre>
     * Cannot target search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_SEARCH_NETWORK = 4;</code>
     */
    public static final int CANNOT_TARGET_SEARCH_NETWORK_VALUE = 4;
    /**
     * <pre>
     * Cannot cover search network without google search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH = 5;</code>
     */
    public static final int CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH_VALUE = 5;
    /**
     * <pre>
     * Cannot target Google Search network for a CPM campaign.
     * </pre>
     *
     * <code>CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN = 6;</code>
     */
    public static final int CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN_VALUE = 6;
    /**
     * <pre>
     * Must target at least one network.
     * </pre>
     *
     * <code>CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK = 7;</code>
     */
    public static final int CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK_VALUE = 7;
    /**
     * <pre>
     * Only some Google partners are allowed to target partner search network.
     * </pre>
     *
     * <code>CANNOT_TARGET_PARTNER_SEARCH_NETWORK = 8;</code>
     */
    public static final int CANNOT_TARGET_PARTNER_SEARCH_NETWORK_VALUE = 8;
    /**
     * <pre>
     * Cannot target content network only as campaign has criteria-level bidding
     * strategy.
     * </pre>
     *
     * <code>CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY = 9;</code>
     */
    public static final int CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY_VALUE = 9;
    /**
     * <pre>
     * Cannot modify the start or end date such that the campaign duration would
     * not contain the durations of all runnable trials.
     * </pre>
     *
     * <code>CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS = 10;</code>
     */
    public static final int CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS_VALUE = 10;
    /**
     * <pre>
     * Cannot modify dates, budget or campaign name of a trial campaign.
     * </pre>
     *
     * <code>CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN = 11;</code>
     */
    public static final int CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN_VALUE = 11;
    /**
     * <pre>
     * Trying to modify the name of an active or paused campaign, where the name
     * is already assigned to another active or paused campaign.
     * </pre>
     *
     * <code>DUPLICATE_CAMPAIGN_NAME = 12;</code>
     */
    public static final int DUPLICATE_CAMPAIGN_NAME_VALUE = 12;
    /**
     * <pre>
     * Two fields are in conflicting modes.
     * </pre>
     *
     * <code>INCOMPATIBLE_CAMPAIGN_FIELD = 13;</code>
     */
    public static final int INCOMPATIBLE_CAMPAIGN_FIELD_VALUE = 13;
    /**
     * <pre>
     * Campaign name cannot be used.
     * </pre>
     *
     * <code>INVALID_CAMPAIGN_NAME = 14;</code>
     */
    public static final int INVALID_CAMPAIGN_NAME_VALUE = 14;
    /**
     * <pre>
     * Given status is invalid.
     * </pre>
     *
     * <code>INVALID_AD_SERVING_OPTIMIZATION_STATUS = 15;</code>
     */
    public static final int INVALID_AD_SERVING_OPTIMIZATION_STATUS_VALUE = 15;
    /**
     * <pre>
     * Error in the campaign level tracking url.
     * </pre>
     *
     * <code>INVALID_TRACKING_URL = 16;</code>
     */
    public static final int INVALID_TRACKING_URL_VALUE = 16;
    /**
     * <pre>
     * Cannot set both tracking url template and tracking setting. An user has
     * to clear legacy tracking setting in order to add tracking url template.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING = 17;</code>
     */
    public static final int CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING_VALUE = 17;
    /**
     * <pre>
     * The maximum number of impressions for Frequency Cap should be an integer
     * greater than 0.
     * </pre>
     *
     * <code>MAX_IMPRESSIONS_NOT_IN_RANGE = 18;</code>
     */
    public static final int MAX_IMPRESSIONS_NOT_IN_RANGE_VALUE = 18;
    /**
     * <pre>
     * Only the Day, Week and Month time units are supported.
     * </pre>
     *
     * <code>TIME_UNIT_NOT_SUPPORTED = 19;</code>
     */
    public static final int TIME_UNIT_NOT_SUPPORTED_VALUE = 19;
    /**
     * <pre>
     * Operation not allowed on a campaign whose serving status has ended
     * </pre>
     *
     * <code>INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED = 20;</code>
     */
    public static final int INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED_VALUE = 20;
    /**
     * <pre>
     * This budget is exclusively linked to a Campaign that is using experiments
     * so it cannot be shared.
     * </pre>
     *
     * <code>BUDGET_CANNOT_BE_SHARED = 21;</code>
     */
    public static final int BUDGET_CANNOT_BE_SHARED_VALUE = 21;
    /**
     * <pre>
     * Campaigns using experiments cannot use a shared budget.
     * </pre>
     *
     * <code>CAMPAIGN_CANNOT_USE_SHARED_BUDGET = 22;</code>
     */
    public static final int CAMPAIGN_CANNOT_USE_SHARED_BUDGET_VALUE = 22;
    /**
     * <pre>
     * A different budget cannot be assigned to a campaign when there are
     * running or scheduled trials.
     * </pre>
     *
     * <code>CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS = 23;</code>
     */
    public static final int CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS_VALUE = 23;
    /**
     * <pre>
     * No link found between the campaign and the label.
     * </pre>
     *
     * <code>CAMPAIGN_LABEL_DOES_NOT_EXIST = 24;</code>
     */
    public static final int CAMPAIGN_LABEL_DOES_NOT_EXIST_VALUE = 24;
    /**
     * <pre>
     * The label has already been attached to the campaign.
     * </pre>
     *
     * <code>CAMPAIGN_LABEL_ALREADY_EXISTS = 25;</code>
     */
    public static final int CAMPAIGN_LABEL_ALREADY_EXISTS_VALUE = 25;
    /**
     * <pre>
     * A ShoppingSetting was not found when creating a shopping campaign.
     * </pre>
     *
     * <code>MISSING_SHOPPING_SETTING = 26;</code>
     */
    public static final int MISSING_SHOPPING_SETTING_VALUE = 26;
    /**
     * <pre>
     * The country in shopping setting is not an allowed country.
     * </pre>
     *
     * <code>INVALID_SHOPPING_SALES_COUNTRY = 27;</code>
     */
    public static final int INVALID_SHOPPING_SALES_COUNTRY_VALUE = 27;
    /**
     * <pre>
     * A Campaign with channel sub type UNIVERSAL_APP_CAMPAIGN must have a
     * UniversalAppCampaignSetting specified.
     * </pre>
     *
     * <code>MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING = 30;</code>
     */
    public static final int MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING_VALUE = 30;
    /**
     * <pre>
     * The requested channel type is not available according to the customer's
     * account setting.
     * </pre>
     *
     * <code>ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE = 31;</code>
     */
    public static final int ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE_VALUE = 31;
    /**
     * <pre>
     * The AdvertisingChannelSubType is not a valid subtype of the primary
     * channel type.
     * </pre>
     *
     * <code>INVALID_ADVERTISING_CHANNEL_SUB_TYPE = 32;</code>
     */
    public static final int INVALID_ADVERTISING_CHANNEL_SUB_TYPE_VALUE = 32;
    /**
     * <pre>
     * At least one conversion must be selected.
     * </pre>
     *
     * <code>AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED = 33;</code>
     */
    public static final int AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED_VALUE = 33;
    /**
     * <pre>
     * Setting ad rotation mode for a campaign is not allowed. Ad rotation mode
     * at campaign is deprecated.
     * </pre>
     *
     * <code>CANNOT_SET_AD_ROTATION_MODE = 34;</code>
     */
    public static final int CANNOT_SET_AD_ROTATION_MODE_VALUE = 34;
    /**
     * <pre>
     * Trying to change start date on a campaign that has started.
     * </pre>
     *
     * <code>CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED = 35;</code>
     */
    public static final int CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED_VALUE = 35;
    /**
     * <pre>
     * Trying to modify a date into the past.
     * </pre>
     *
     * <code>CANNOT_SET_DATE_TO_PAST = 36;</code>
     */
    public static final int CANNOT_SET_DATE_TO_PAST_VALUE = 36;
    /**
     * <pre>
     * Hotel center id in the hotel setting does not match any customer links.
     * </pre>
     *
     * <code>MISSING_HOTEL_CUSTOMER_LINK = 37;</code>
     */
    public static final int MISSING_HOTEL_CUSTOMER_LINK_VALUE = 37;
    /**
     * <pre>
     * Hotel center id in the hotel setting must match an active customer link.
     * </pre>
     *
     * <code>INVALID_HOTEL_CUSTOMER_LINK = 38;</code>
     */
    public static final int INVALID_HOTEL_CUSTOMER_LINK_VALUE = 38;
    /**
     * <pre>
     * Hotel setting was not found when creating a hotel ads campaign.
     * </pre>
     *
     * <code>MISSING_HOTEL_SETTING = 39;</code>
     */
    public static final int MISSING_HOTEL_SETTING_VALUE = 39;
    /**
     * <pre>
     * A Campaign cannot use shared campaign budgets and be part of a campaign
     * group.
     * </pre>
     *
     * <code>CANNOT_USE_SHARED_CAMPAIGN_BUDGET_WHILE_PART_OF_CAMPAIGN_GROUP = 40;</code>
     */
    public static final int CANNOT_USE_SHARED_CAMPAIGN_BUDGET_WHILE_PART_OF_CAMPAIGN_GROUP_VALUE = 40;
    /**
     * <pre>
     * The app ID was not found.
     * </pre>
     *
     * <code>APP_NOT_FOUND = 41;</code>
     */
    public static final int APP_NOT_FOUND_VALUE = 41;
    /**
     * <pre>
     * Campaign.shopping_setting.enable_local is not supported for the specified
     * campaign type.
     * </pre>
     *
     * <code>SHOPPING_ENABLE_LOCAL_NOT_SUPPORTED_FOR_CAMPAIGN_TYPE = 42;</code>
     */
    public static final int SHOPPING_ENABLE_LOCAL_NOT_SUPPORTED_FOR_CAMPAIGN_TYPE_VALUE = 42;
    /**
     * <pre>
     * The merchant does not support the creation of campaigns for Shopping
     * Comparison Listing Ads.
     * </pre>
     *
     * <code>MERCHANT_NOT_ALLOWED_FOR_COMPARISON_LISTING_ADS = 43;</code>
     */
    public static final int MERCHANT_NOT_ALLOWED_FOR_COMPARISON_LISTING_ADS_VALUE = 43;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CampaignError valueOf(int value) {
      return forNumber(value);
    }

    public static CampaignError forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 3: return CANNOT_TARGET_CONTENT_NETWORK;
        case 4: return CANNOT_TARGET_SEARCH_NETWORK;
        case 5: return CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH;
        case 6: return CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN;
        case 7: return CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK;
        case 8: return CANNOT_TARGET_PARTNER_SEARCH_NETWORK;
        case 9: return CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY;
        case 10: return CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS;
        case 11: return CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN;
        case 12: return DUPLICATE_CAMPAIGN_NAME;
        case 13: return INCOMPATIBLE_CAMPAIGN_FIELD;
        case 14: return INVALID_CAMPAIGN_NAME;
        case 15: return INVALID_AD_SERVING_OPTIMIZATION_STATUS;
        case 16: return INVALID_TRACKING_URL;
        case 17: return CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING;
        case 18: return MAX_IMPRESSIONS_NOT_IN_RANGE;
        case 19: return TIME_UNIT_NOT_SUPPORTED;
        case 20: return INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED;
        case 21: return BUDGET_CANNOT_BE_SHARED;
        case 22: return CAMPAIGN_CANNOT_USE_SHARED_BUDGET;
        case 23: return CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS;
        case 24: return CAMPAIGN_LABEL_DOES_NOT_EXIST;
        case 25: return CAMPAIGN_LABEL_ALREADY_EXISTS;
        case 26: return MISSING_SHOPPING_SETTING;
        case 27: return INVALID_SHOPPING_SALES_COUNTRY;
        case 30: return MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING;
        case 31: return ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE;
        case 32: return INVALID_ADVERTISING_CHANNEL_SUB_TYPE;
        case 33: return AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED;
        case 34: return CANNOT_SET_AD_ROTATION_MODE;
        case 35: return CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED;
        case 36: return CANNOT_SET_DATE_TO_PAST;
        case 37: return MISSING_HOTEL_CUSTOMER_LINK;
        case 38: return INVALID_HOTEL_CUSTOMER_LINK;
        case 39: return MISSING_HOTEL_SETTING;
        case 40: return CANNOT_USE_SHARED_CAMPAIGN_BUDGET_WHILE_PART_OF_CAMPAIGN_GROUP;
        case 41: return APP_NOT_FOUND;
        case 42: return SHOPPING_ENABLE_LOCAL_NOT_SUPPORTED_FOR_CAMPAIGN_TYPE;
        case 43: return MERCHANT_NOT_ALLOWED_FOR_COMPARISON_LISTING_ADS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CampaignError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CampaignError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CampaignError>() {
            public CampaignError findValueByNumber(int number) {
              return CampaignError.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.CampaignErrorEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final CampaignError[] VALUES = values();

    public static CampaignError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CampaignError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v1.errors.CampaignErrorEnum.CampaignError)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.errors.CampaignErrorEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.errors.CampaignErrorEnum other = (com.google.ads.googleads.v1.errors.CampaignErrorEnum) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.errors.CampaignErrorEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Container for enum describing possible campaign errors.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.errors.CampaignErrorEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.errors.CampaignErrorEnum)
      com.google.ads.googleads.v1.errors.CampaignErrorEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.CampaignErrorProto.internal_static_google_ads_googleads_v1_errors_CampaignErrorEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.errors.CampaignErrorProto.internal_static_google_ads_googleads_v1_errors_CampaignErrorEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.errors.CampaignErrorEnum.class, com.google.ads.googleads.v1.errors.CampaignErrorEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.errors.CampaignErrorEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.errors.CampaignErrorProto.internal_static_google_ads_googleads_v1_errors_CampaignErrorEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.CampaignErrorEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.errors.CampaignErrorEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.CampaignErrorEnum build() {
      com.google.ads.googleads.v1.errors.CampaignErrorEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.CampaignErrorEnum buildPartial() {
      com.google.ads.googleads.v1.errors.CampaignErrorEnum result = new com.google.ads.googleads.v1.errors.CampaignErrorEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.errors.CampaignErrorEnum) {
        return mergeFrom((com.google.ads.googleads.v1.errors.CampaignErrorEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.errors.CampaignErrorEnum other) {
      if (other == com.google.ads.googleads.v1.errors.CampaignErrorEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.errors.CampaignErrorEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.errors.CampaignErrorEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.errors.CampaignErrorEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.errors.CampaignErrorEnum)
  private static final com.google.ads.googleads.v1.errors.CampaignErrorEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.errors.CampaignErrorEnum();
  }

  public static com.google.ads.googleads.v1.errors.CampaignErrorEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CampaignErrorEnum>
      PARSER = new com.google.protobuf.AbstractParser<CampaignErrorEnum>() {
    @java.lang.Override
    public CampaignErrorEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CampaignErrorEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CampaignErrorEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CampaignErrorEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.errors.CampaignErrorEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

