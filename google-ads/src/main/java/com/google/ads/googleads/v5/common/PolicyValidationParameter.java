// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v5/common/policy.proto

package com.google.ads.googleads.v5.common;

/**
 * <pre>
 * Parameter for controlling how policy exemption is done. Ignorable policy
 * topics are only usable with expanded text ads and responsive search ads. All
 * other ad types must use policy violation keys.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v5.common.PolicyValidationParameter}
 */
public final class PolicyValidationParameter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v5.common.PolicyValidationParameter)
    PolicyValidationParameterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PolicyValidationParameter.newBuilder() to construct.
  private PolicyValidationParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PolicyValidationParameter() {
    ignorablePolicyTopics_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    exemptPolicyViolationKeys_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PolicyValidationParameter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PolicyValidationParameter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              exemptPolicyViolationKeys_ = new java.util.ArrayList<com.google.ads.googleads.v5.common.PolicyViolationKey>();
              mutable_bitField0_ |= 0x00000002;
            }
            exemptPolicyViolationKeys_.add(
                input.readMessage(com.google.ads.googleads.v5.common.PolicyViolationKey.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              ignorablePolicyTopics_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            ignorablePolicyTopics_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        exemptPolicyViolationKeys_ = java.util.Collections.unmodifiableList(exemptPolicyViolationKeys_);
      }
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        ignorablePolicyTopics_ = ignorablePolicyTopics_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v5.common.PolicyProto.internal_static_google_ads_googleads_v5_common_PolicyValidationParameter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v5.common.PolicyProto.internal_static_google_ads_googleads_v5_common_PolicyValidationParameter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v5.common.PolicyValidationParameter.class, com.google.ads.googleads.v5.common.PolicyValidationParameter.Builder.class);
  }

  public static final int IGNORABLE_POLICY_TOPICS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList ignorablePolicyTopics_;
  /**
   * <pre>
   * The list of policy topics that should not cause a PolicyFindingError to
   * be reported. This field is currently only compatible with Enhanced Text Ad.
   * It corresponds to the PolicyTopicEntry.topic field.
   * Resources violating these policies will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated string ignorable_policy_topics = 3;</code>
   * @return A list containing the ignorablePolicyTopics.
   */
  public com.google.protobuf.ProtocolStringList
      getIgnorablePolicyTopicsList() {
    return ignorablePolicyTopics_;
  }
  /**
   * <pre>
   * The list of policy topics that should not cause a PolicyFindingError to
   * be reported. This field is currently only compatible with Enhanced Text Ad.
   * It corresponds to the PolicyTopicEntry.topic field.
   * Resources violating these policies will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated string ignorable_policy_topics = 3;</code>
   * @return The count of ignorablePolicyTopics.
   */
  public int getIgnorablePolicyTopicsCount() {
    return ignorablePolicyTopics_.size();
  }
  /**
   * <pre>
   * The list of policy topics that should not cause a PolicyFindingError to
   * be reported. This field is currently only compatible with Enhanced Text Ad.
   * It corresponds to the PolicyTopicEntry.topic field.
   * Resources violating these policies will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated string ignorable_policy_topics = 3;</code>
   * @param index The index of the element to return.
   * @return The ignorablePolicyTopics at the given index.
   */
  public java.lang.String getIgnorablePolicyTopics(int index) {
    return ignorablePolicyTopics_.get(index);
  }
  /**
   * <pre>
   * The list of policy topics that should not cause a PolicyFindingError to
   * be reported. This field is currently only compatible with Enhanced Text Ad.
   * It corresponds to the PolicyTopicEntry.topic field.
   * Resources violating these policies will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated string ignorable_policy_topics = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the ignorablePolicyTopics at the given index.
   */
  public com.google.protobuf.ByteString
      getIgnorablePolicyTopicsBytes(int index) {
    return ignorablePolicyTopics_.getByteString(index);
  }

  public static final int EXEMPT_POLICY_VIOLATION_KEYS_FIELD_NUMBER = 2;
  private java.util.List<com.google.ads.googleads.v5.common.PolicyViolationKey> exemptPolicyViolationKeys_;
  /**
   * <pre>
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, please refer to the is_exemptible field in the returned
   * PolicyViolationError.
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v5.common.PolicyViolationKey> getExemptPolicyViolationKeysList() {
    return exemptPolicyViolationKeys_;
  }
  /**
   * <pre>
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, please refer to the is_exemptible field in the returned
   * PolicyViolationError.
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder> 
      getExemptPolicyViolationKeysOrBuilderList() {
    return exemptPolicyViolationKeys_;
  }
  /**
   * <pre>
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, please refer to the is_exemptible field in the returned
   * PolicyViolationError.
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
   */
  @java.lang.Override
  public int getExemptPolicyViolationKeysCount() {
    return exemptPolicyViolationKeys_.size();
  }
  /**
   * <pre>
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, please refer to the is_exemptible field in the returned
   * PolicyViolationError.
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v5.common.PolicyViolationKey getExemptPolicyViolationKeys(int index) {
    return exemptPolicyViolationKeys_.get(index);
  }
  /**
   * <pre>
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, please refer to the is_exemptible field in the returned
   * PolicyViolationError.
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder getExemptPolicyViolationKeysOrBuilder(
      int index) {
    return exemptPolicyViolationKeys_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < exemptPolicyViolationKeys_.size(); i++) {
      output.writeMessage(2, exemptPolicyViolationKeys_.get(i));
    }
    for (int i = 0; i < ignorablePolicyTopics_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ignorablePolicyTopics_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < exemptPolicyViolationKeys_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, exemptPolicyViolationKeys_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < ignorablePolicyTopics_.size(); i++) {
        dataSize += computeStringSizeNoTag(ignorablePolicyTopics_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getIgnorablePolicyTopicsList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v5.common.PolicyValidationParameter)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v5.common.PolicyValidationParameter other = (com.google.ads.googleads.v5.common.PolicyValidationParameter) obj;

    if (!getIgnorablePolicyTopicsList()
        .equals(other.getIgnorablePolicyTopicsList())) return false;
    if (!getExemptPolicyViolationKeysList()
        .equals(other.getExemptPolicyViolationKeysList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getIgnorablePolicyTopicsCount() > 0) {
      hash = (37 * hash) + IGNORABLE_POLICY_TOPICS_FIELD_NUMBER;
      hash = (53 * hash) + getIgnorablePolicyTopicsList().hashCode();
    }
    if (getExemptPolicyViolationKeysCount() > 0) {
      hash = (37 * hash) + EXEMPT_POLICY_VIOLATION_KEYS_FIELD_NUMBER;
      hash = (53 * hash) + getExemptPolicyViolationKeysList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.common.PolicyValidationParameter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v5.common.PolicyValidationParameter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Parameter for controlling how policy exemption is done. Ignorable policy
   * topics are only usable with expanded text ads and responsive search ads. All
   * other ad types must use policy violation keys.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v5.common.PolicyValidationParameter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v5.common.PolicyValidationParameter)
      com.google.ads.googleads.v5.common.PolicyValidationParameterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v5.common.PolicyProto.internal_static_google_ads_googleads_v5_common_PolicyValidationParameter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v5.common.PolicyProto.internal_static_google_ads_googleads_v5_common_PolicyValidationParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v5.common.PolicyValidationParameter.class, com.google.ads.googleads.v5.common.PolicyValidationParameter.Builder.class);
    }

    // Construct using com.google.ads.googleads.v5.common.PolicyValidationParameter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getExemptPolicyViolationKeysFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      ignorablePolicyTopics_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (exemptPolicyViolationKeysBuilder_ == null) {
        exemptPolicyViolationKeys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        exemptPolicyViolationKeysBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v5.common.PolicyProto.internal_static_google_ads_googleads_v5_common_PolicyValidationParameter_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.common.PolicyValidationParameter getDefaultInstanceForType() {
      return com.google.ads.googleads.v5.common.PolicyValidationParameter.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.common.PolicyValidationParameter build() {
      com.google.ads.googleads.v5.common.PolicyValidationParameter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.common.PolicyValidationParameter buildPartial() {
      com.google.ads.googleads.v5.common.PolicyValidationParameter result = new com.google.ads.googleads.v5.common.PolicyValidationParameter(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        ignorablePolicyTopics_ = ignorablePolicyTopics_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.ignorablePolicyTopics_ = ignorablePolicyTopics_;
      if (exemptPolicyViolationKeysBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          exemptPolicyViolationKeys_ = java.util.Collections.unmodifiableList(exemptPolicyViolationKeys_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.exemptPolicyViolationKeys_ = exemptPolicyViolationKeys_;
      } else {
        result.exemptPolicyViolationKeys_ = exemptPolicyViolationKeysBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v5.common.PolicyValidationParameter) {
        return mergeFrom((com.google.ads.googleads.v5.common.PolicyValidationParameter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v5.common.PolicyValidationParameter other) {
      if (other == com.google.ads.googleads.v5.common.PolicyValidationParameter.getDefaultInstance()) return this;
      if (!other.ignorablePolicyTopics_.isEmpty()) {
        if (ignorablePolicyTopics_.isEmpty()) {
          ignorablePolicyTopics_ = other.ignorablePolicyTopics_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureIgnorablePolicyTopicsIsMutable();
          ignorablePolicyTopics_.addAll(other.ignorablePolicyTopics_);
        }
        onChanged();
      }
      if (exemptPolicyViolationKeysBuilder_ == null) {
        if (!other.exemptPolicyViolationKeys_.isEmpty()) {
          if (exemptPolicyViolationKeys_.isEmpty()) {
            exemptPolicyViolationKeys_ = other.exemptPolicyViolationKeys_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExemptPolicyViolationKeysIsMutable();
            exemptPolicyViolationKeys_.addAll(other.exemptPolicyViolationKeys_);
          }
          onChanged();
        }
      } else {
        if (!other.exemptPolicyViolationKeys_.isEmpty()) {
          if (exemptPolicyViolationKeysBuilder_.isEmpty()) {
            exemptPolicyViolationKeysBuilder_.dispose();
            exemptPolicyViolationKeysBuilder_ = null;
            exemptPolicyViolationKeys_ = other.exemptPolicyViolationKeys_;
            bitField0_ = (bitField0_ & ~0x00000002);
            exemptPolicyViolationKeysBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExemptPolicyViolationKeysFieldBuilder() : null;
          } else {
            exemptPolicyViolationKeysBuilder_.addAllMessages(other.exemptPolicyViolationKeys_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v5.common.PolicyValidationParameter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v5.common.PolicyValidationParameter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList ignorablePolicyTopics_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureIgnorablePolicyTopicsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        ignorablePolicyTopics_ = new com.google.protobuf.LazyStringArrayList(ignorablePolicyTopics_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @return A list containing the ignorablePolicyTopics.
     */
    public com.google.protobuf.ProtocolStringList
        getIgnorablePolicyTopicsList() {
      return ignorablePolicyTopics_.getUnmodifiableView();
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @return The count of ignorablePolicyTopics.
     */
    public int getIgnorablePolicyTopicsCount() {
      return ignorablePolicyTopics_.size();
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param index The index of the element to return.
     * @return The ignorablePolicyTopics at the given index.
     */
    public java.lang.String getIgnorablePolicyTopics(int index) {
      return ignorablePolicyTopics_.get(index);
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the ignorablePolicyTopics at the given index.
     */
    public com.google.protobuf.ByteString
        getIgnorablePolicyTopicsBytes(int index) {
      return ignorablePolicyTopics_.getByteString(index);
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param index The index to set the value at.
     * @param value The ignorablePolicyTopics to set.
     * @return This builder for chaining.
     */
    public Builder setIgnorablePolicyTopics(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureIgnorablePolicyTopicsIsMutable();
      ignorablePolicyTopics_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param value The ignorablePolicyTopics to add.
     * @return This builder for chaining.
     */
    public Builder addIgnorablePolicyTopics(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureIgnorablePolicyTopicsIsMutable();
      ignorablePolicyTopics_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param values The ignorablePolicyTopics to add.
     * @return This builder for chaining.
     */
    public Builder addAllIgnorablePolicyTopics(
        java.lang.Iterable<java.lang.String> values) {
      ensureIgnorablePolicyTopicsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, ignorablePolicyTopics_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnorablePolicyTopics() {
      ignorablePolicyTopics_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of policy topics that should not cause a PolicyFindingError to
     * be reported. This field is currently only compatible with Enhanced Text Ad.
     * It corresponds to the PolicyTopicEntry.topic field.
     * Resources violating these policies will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated string ignorable_policy_topics = 3;</code>
     * @param value The bytes of the ignorablePolicyTopics to add.
     * @return This builder for chaining.
     */
    public Builder addIgnorablePolicyTopicsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureIgnorablePolicyTopicsIsMutable();
      ignorablePolicyTopics_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.google.ads.googleads.v5.common.PolicyViolationKey> exemptPolicyViolationKeys_ =
      java.util.Collections.emptyList();
    private void ensureExemptPolicyViolationKeysIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        exemptPolicyViolationKeys_ = new java.util.ArrayList<com.google.ads.googleads.v5.common.PolicyViolationKey>(exemptPolicyViolationKeys_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v5.common.PolicyViolationKey, com.google.ads.googleads.v5.common.PolicyViolationKey.Builder, com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder> exemptPolicyViolationKeysBuilder_;

    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public java.util.List<com.google.ads.googleads.v5.common.PolicyViolationKey> getExemptPolicyViolationKeysList() {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(exemptPolicyViolationKeys_);
      } else {
        return exemptPolicyViolationKeysBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public int getExemptPolicyViolationKeysCount() {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        return exemptPolicyViolationKeys_.size();
      } else {
        return exemptPolicyViolationKeysBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public com.google.ads.googleads.v5.common.PolicyViolationKey getExemptPolicyViolationKeys(int index) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        return exemptPolicyViolationKeys_.get(index);
      } else {
        return exemptPolicyViolationKeysBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder setExemptPolicyViolationKeys(
        int index, com.google.ads.googleads.v5.common.PolicyViolationKey value) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.set(index, value);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder setExemptPolicyViolationKeys(
        int index, com.google.ads.googleads.v5.common.PolicyViolationKey.Builder builderForValue) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.set(index, builderForValue.build());
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder addExemptPolicyViolationKeys(com.google.ads.googleads.v5.common.PolicyViolationKey value) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.add(value);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder addExemptPolicyViolationKeys(
        int index, com.google.ads.googleads.v5.common.PolicyViolationKey value) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.add(index, value);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder addExemptPolicyViolationKeys(
        com.google.ads.googleads.v5.common.PolicyViolationKey.Builder builderForValue) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.add(builderForValue.build());
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder addExemptPolicyViolationKeys(
        int index, com.google.ads.googleads.v5.common.PolicyViolationKey.Builder builderForValue) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.add(index, builderForValue.build());
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder addAllExemptPolicyViolationKeys(
        java.lang.Iterable<? extends com.google.ads.googleads.v5.common.PolicyViolationKey> values) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        ensureExemptPolicyViolationKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, exemptPolicyViolationKeys_);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder clearExemptPolicyViolationKeys() {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        exemptPolicyViolationKeys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public Builder removeExemptPolicyViolationKeys(int index) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        ensureExemptPolicyViolationKeysIsMutable();
        exemptPolicyViolationKeys_.remove(index);
        onChanged();
      } else {
        exemptPolicyViolationKeysBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public com.google.ads.googleads.v5.common.PolicyViolationKey.Builder getExemptPolicyViolationKeysBuilder(
        int index) {
      return getExemptPolicyViolationKeysFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder getExemptPolicyViolationKeysOrBuilder(
        int index) {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        return exemptPolicyViolationKeys_.get(index);  } else {
        return exemptPolicyViolationKeysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder> 
         getExemptPolicyViolationKeysOrBuilderList() {
      if (exemptPolicyViolationKeysBuilder_ != null) {
        return exemptPolicyViolationKeysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(exemptPolicyViolationKeys_);
      }
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public com.google.ads.googleads.v5.common.PolicyViolationKey.Builder addExemptPolicyViolationKeysBuilder() {
      return getExemptPolicyViolationKeysFieldBuilder().addBuilder(
          com.google.ads.googleads.v5.common.PolicyViolationKey.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public com.google.ads.googleads.v5.common.PolicyViolationKey.Builder addExemptPolicyViolationKeysBuilder(
        int index) {
      return getExemptPolicyViolationKeysFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v5.common.PolicyViolationKey.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of policy violation keys that should not cause a
     * PolicyViolationError to be reported. Not all policy violations are
     * exemptable, please refer to the is_exemptible field in the returned
     * PolicyViolationError.
     * Resources violating these polices will be saved, but will not be eligible
     * to serve. They may begin serving at a later time due to a change in
     * policies, re-review of the resource, or a change in advertiser
     * certificates.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v5.common.PolicyViolationKey exempt_policy_violation_keys = 2;</code>
     */
    public java.util.List<com.google.ads.googleads.v5.common.PolicyViolationKey.Builder> 
         getExemptPolicyViolationKeysBuilderList() {
      return getExemptPolicyViolationKeysFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v5.common.PolicyViolationKey, com.google.ads.googleads.v5.common.PolicyViolationKey.Builder, com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder> 
        getExemptPolicyViolationKeysFieldBuilder() {
      if (exemptPolicyViolationKeysBuilder_ == null) {
        exemptPolicyViolationKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v5.common.PolicyViolationKey, com.google.ads.googleads.v5.common.PolicyViolationKey.Builder, com.google.ads.googleads.v5.common.PolicyViolationKeyOrBuilder>(
                exemptPolicyViolationKeys_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        exemptPolicyViolationKeys_ = null;
      }
      return exemptPolicyViolationKeysBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v5.common.PolicyValidationParameter)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v5.common.PolicyValidationParameter)
  private static final com.google.ads.googleads.v5.common.PolicyValidationParameter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v5.common.PolicyValidationParameter();
  }

  public static com.google.ads.googleads.v5.common.PolicyValidationParameter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PolicyValidationParameter>
      PARSER = new com.google.protobuf.AbstractParser<PolicyValidationParameter>() {
    @java.lang.Override
    public PolicyValidationParameter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PolicyValidationParameter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PolicyValidationParameter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PolicyValidationParameter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v5.common.PolicyValidationParameter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

