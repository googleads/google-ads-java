// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v5/errors/criterion_error.proto

package com.google.ads.googleads.v5.errors;

/**
 * <pre>
 * Container for enum describing possible criterion errors.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v5.errors.CriterionErrorEnum}
 */
public final class CriterionErrorEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v5.errors.CriterionErrorEnum)
    CriterionErrorEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CriterionErrorEnum.newBuilder() to construct.
  private CriterionErrorEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CriterionErrorEnum() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CriterionErrorEnum();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CriterionErrorEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v5.errors.CriterionErrorProto.internal_static_google_ads_googleads_v5_errors_CriterionErrorEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v5.errors.CriterionErrorProto.internal_static_google_ads_googleads_v5_errors_CriterionErrorEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v5.errors.CriterionErrorEnum.class, com.google.ads.googleads.v5.errors.CriterionErrorEnum.Builder.class);
  }

  /**
   * <pre>
   * Enum describing possible criterion errors.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v5.errors.CriterionErrorEnum.CriterionError}
   */
  public enum CriterionError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * Concrete type of criterion is required for CREATE and UPDATE operations.
     * </pre>
     *
     * <code>CONCRETE_TYPE_REQUIRED = 2;</code>
     */
    CONCRETE_TYPE_REQUIRED(2),
    /**
     * <pre>
     * The category requested for exclusion is invalid.
     * </pre>
     *
     * <code>INVALID_EXCLUDED_CATEGORY = 3;</code>
     */
    INVALID_EXCLUDED_CATEGORY(3),
    /**
     * <pre>
     * Invalid keyword criteria text.
     * </pre>
     *
     * <code>INVALID_KEYWORD_TEXT = 4;</code>
     */
    INVALID_KEYWORD_TEXT(4),
    /**
     * <pre>
     * Keyword text should be less than 80 chars.
     * </pre>
     *
     * <code>KEYWORD_TEXT_TOO_LONG = 5;</code>
     */
    KEYWORD_TEXT_TOO_LONG(5),
    /**
     * <pre>
     * Keyword text has too many words.
     * </pre>
     *
     * <code>KEYWORD_HAS_TOO_MANY_WORDS = 6;</code>
     */
    KEYWORD_HAS_TOO_MANY_WORDS(6),
    /**
     * <pre>
     * Keyword text has invalid characters or symbols.
     * </pre>
     *
     * <code>KEYWORD_HAS_INVALID_CHARS = 7;</code>
     */
    KEYWORD_HAS_INVALID_CHARS(7),
    /**
     * <pre>
     * Invalid placement URL.
     * </pre>
     *
     * <code>INVALID_PLACEMENT_URL = 8;</code>
     */
    INVALID_PLACEMENT_URL(8),
    /**
     * <pre>
     * Invalid user list criterion.
     * </pre>
     *
     * <code>INVALID_USER_LIST = 9;</code>
     */
    INVALID_USER_LIST(9),
    /**
     * <pre>
     * Invalid user interest criterion.
     * </pre>
     *
     * <code>INVALID_USER_INTEREST = 10;</code>
     */
    INVALID_USER_INTEREST(10),
    /**
     * <pre>
     * Placement URL has wrong format.
     * </pre>
     *
     * <code>INVALID_FORMAT_FOR_PLACEMENT_URL = 11;</code>
     */
    INVALID_FORMAT_FOR_PLACEMENT_URL(11),
    /**
     * <pre>
     * Placement URL is too long.
     * </pre>
     *
     * <code>PLACEMENT_URL_IS_TOO_LONG = 12;</code>
     */
    PLACEMENT_URL_IS_TOO_LONG(12),
    /**
     * <pre>
     * Indicates the URL contains an illegal character.
     * </pre>
     *
     * <code>PLACEMENT_URL_HAS_ILLEGAL_CHAR = 13;</code>
     */
    PLACEMENT_URL_HAS_ILLEGAL_CHAR(13),
    /**
     * <pre>
     * Indicates the URL contains multiple comma separated URLs.
     * </pre>
     *
     * <code>PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE = 14;</code>
     */
    PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE(14),
    /**
     * <pre>
     * Indicates the domain is blocked.
     * </pre>
     *
     * <code>PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION = 15;</code>
     */
    PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION(15),
    /**
     * <pre>
     * Invalid topic path.
     * </pre>
     *
     * <code>INVALID_TOPIC_PATH = 16;</code>
     */
    INVALID_TOPIC_PATH(16),
    /**
     * <pre>
     * The YouTube Channel Id is invalid.
     * </pre>
     *
     * <code>INVALID_YOUTUBE_CHANNEL_ID = 17;</code>
     */
    INVALID_YOUTUBE_CHANNEL_ID(17),
    /**
     * <pre>
     * The YouTube Video Id is invalid.
     * </pre>
     *
     * <code>INVALID_YOUTUBE_VIDEO_ID = 18;</code>
     */
    INVALID_YOUTUBE_VIDEO_ID(18),
    /**
     * <pre>
     * Indicates the placement is a YouTube vertical channel, which is no longer
     * supported.
     * </pre>
     *
     * <code>YOUTUBE_VERTICAL_CHANNEL_DEPRECATED = 19;</code>
     */
    YOUTUBE_VERTICAL_CHANNEL_DEPRECATED(19),
    /**
     * <pre>
     * Indicates the placement is a YouTube demographic channel, which is no
     * longer supported.
     * </pre>
     *
     * <code>YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED = 20;</code>
     */
    YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED(20),
    /**
     * <pre>
     * YouTube urls are not supported in Placement criterion. Use YouTubeChannel
     * and YouTubeVideo criterion instead.
     * </pre>
     *
     * <code>YOUTUBE_URL_UNSUPPORTED = 21;</code>
     */
    YOUTUBE_URL_UNSUPPORTED(21),
    /**
     * <pre>
     * Criteria type can not be excluded by the customer, like AOL account type
     * cannot target site type criteria.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERIA_TYPE = 22;</code>
     */
    CANNOT_EXCLUDE_CRITERIA_TYPE(22),
    /**
     * <pre>
     * Criteria type can not be targeted.
     * </pre>
     *
     * <code>CANNOT_ADD_CRITERIA_TYPE = 23;</code>
     */
    CANNOT_ADD_CRITERIA_TYPE(23),
    /**
     * <pre>
     * Not allowed to exclude similar user list.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_SIMILAR_USER_LIST = 26;</code>
     */
    CANNOT_EXCLUDE_SIMILAR_USER_LIST(26),
    /**
     * <pre>
     * Not allowed to target a closed user list.
     * </pre>
     *
     * <code>CANNOT_ADD_CLOSED_USER_LIST = 27;</code>
     */
    CANNOT_ADD_CLOSED_USER_LIST(27),
    /**
     * <pre>
     * Not allowed to add display only UserLists to search only campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS = 28;</code>
     */
    CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS(28),
    /**
     * <pre>
     * Not allowed to add display only UserLists to search plus campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS = 29;</code>
     */
    CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS(29),
    /**
     * <pre>
     * Not allowed to add display only UserLists to shopping campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS = 30;</code>
     */
    CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS(30),
    /**
     * <pre>
     * Not allowed to add User interests to search only campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS = 31;</code>
     */
    CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS(31),
    /**
     * <pre>
     * Not allowed to set bids for this criterion type in search campaigns
     * </pre>
     *
     * <code>CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS = 32;</code>
     */
    CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS(32),
    /**
     * <pre>
     * Final URLs, URL Templates and CustomParameters cannot be set for the
     * criterion types of Gender, AgeRange, UserList, Placement, MobileApp, and
     * MobileAppCategory in search campaigns and shopping campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE = 33;</code>
     */
    CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE(33),
    /**
     * <pre>
     * Invalid custom affinity criterion.
     * </pre>
     *
     * <code>INVALID_CUSTOM_AFFINITY = 96;</code>
     */
    INVALID_CUSTOM_AFFINITY(96),
    /**
     * <pre>
     * Invalid custom intent criterion.
     * </pre>
     *
     * <code>INVALID_CUSTOM_INTENT = 97;</code>
     */
    INVALID_CUSTOM_INTENT(97),
    /**
     * <pre>
     * IP address is not valid.
     * </pre>
     *
     * <code>INVALID_IP_ADDRESS = 34;</code>
     */
    INVALID_IP_ADDRESS(34),
    /**
     * <pre>
     * IP format is not valid.
     * </pre>
     *
     * <code>INVALID_IP_FORMAT = 35;</code>
     */
    INVALID_IP_FORMAT(35),
    /**
     * <pre>
     * Mobile application is not valid.
     * </pre>
     *
     * <code>INVALID_MOBILE_APP = 36;</code>
     */
    INVALID_MOBILE_APP(36),
    /**
     * <pre>
     * Mobile application category is not valid.
     * </pre>
     *
     * <code>INVALID_MOBILE_APP_CATEGORY = 37;</code>
     */
    INVALID_MOBILE_APP_CATEGORY(37),
    /**
     * <pre>
     * The CriterionId does not exist or is of the incorrect type.
     * </pre>
     *
     * <code>INVALID_CRITERION_ID = 38;</code>
     */
    INVALID_CRITERION_ID(38),
    /**
     * <pre>
     * The Criterion is not allowed to be targeted.
     * </pre>
     *
     * <code>CANNOT_TARGET_CRITERION = 39;</code>
     */
    CANNOT_TARGET_CRITERION(39),
    /**
     * <pre>
     * The criterion is not allowed to be targeted as it is deprecated.
     * </pre>
     *
     * <code>CANNOT_TARGET_OBSOLETE_CRITERION = 40;</code>
     */
    CANNOT_TARGET_OBSOLETE_CRITERION(40),
    /**
     * <pre>
     * The CriterionId is not valid for the type.
     * </pre>
     *
     * <code>CRITERION_ID_AND_TYPE_MISMATCH = 41;</code>
     */
    CRITERION_ID_AND_TYPE_MISMATCH(41),
    /**
     * <pre>
     * Distance for the radius for the proximity criterion is invalid.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_RADIUS = 42;</code>
     */
    INVALID_PROXIMITY_RADIUS(42),
    /**
     * <pre>
     * Units for the distance for the radius for the proximity criterion is
     * invalid.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_RADIUS_UNITS = 43;</code>
     */
    INVALID_PROXIMITY_RADIUS_UNITS(43),
    /**
     * <pre>
     * Street address in the address is not valid.
     * </pre>
     *
     * <code>INVALID_STREETADDRESS_LENGTH = 44;</code>
     */
    INVALID_STREETADDRESS_LENGTH(44),
    /**
     * <pre>
     * City name in the address is not valid.
     * </pre>
     *
     * <code>INVALID_CITYNAME_LENGTH = 45;</code>
     */
    INVALID_CITYNAME_LENGTH(45),
    /**
     * <pre>
     * Region code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_REGIONCODE_LENGTH = 46;</code>
     */
    INVALID_REGIONCODE_LENGTH(46),
    /**
     * <pre>
     * Region name in the address is not valid.
     * </pre>
     *
     * <code>INVALID_REGIONNAME_LENGTH = 47;</code>
     */
    INVALID_REGIONNAME_LENGTH(47),
    /**
     * <pre>
     * Postal code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_POSTALCODE_LENGTH = 48;</code>
     */
    INVALID_POSTALCODE_LENGTH(48),
    /**
     * <pre>
     * Country code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_COUNTRY_CODE = 49;</code>
     */
    INVALID_COUNTRY_CODE(49),
    /**
     * <pre>
     * Latitude for the GeoPoint is not valid.
     * </pre>
     *
     * <code>INVALID_LATITUDE = 50;</code>
     */
    INVALID_LATITUDE(50),
    /**
     * <pre>
     * Longitude for the GeoPoint is not valid.
     * </pre>
     *
     * <code>INVALID_LONGITUDE = 51;</code>
     */
    INVALID_LONGITUDE(51),
    /**
     * <pre>
     * The Proximity input is not valid. Both address and geoPoint cannot be
     * null.
     * </pre>
     *
     * <code>PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL = 52;</code>
     */
    PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL(52),
    /**
     * <pre>
     * The Proximity address cannot be geocoded to a valid lat/long.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_ADDRESS = 53;</code>
     */
    INVALID_PROXIMITY_ADDRESS(53),
    /**
     * <pre>
     * User domain name is not valid.
     * </pre>
     *
     * <code>INVALID_USER_DOMAIN_NAME = 54;</code>
     */
    INVALID_USER_DOMAIN_NAME(54),
    /**
     * <pre>
     * Length of serialized criterion parameter exceeded size limit.
     * </pre>
     *
     * <code>CRITERION_PARAMETER_TOO_LONG = 55;</code>
     */
    CRITERION_PARAMETER_TOO_LONG(55),
    /**
     * <pre>
     * Time interval in the AdSchedule overlaps with another AdSchedule.
     * </pre>
     *
     * <code>AD_SCHEDULE_TIME_INTERVALS_OVERLAP = 56;</code>
     */
    AD_SCHEDULE_TIME_INTERVALS_OVERLAP(56),
    /**
     * <pre>
     * AdSchedule time interval cannot span multiple days.
     * </pre>
     *
     * <code>AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS = 57;</code>
     */
    AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS(57),
    /**
     * <pre>
     * AdSchedule time interval specified is invalid, endTime cannot be earlier
     * than startTime.
     * </pre>
     *
     * <code>AD_SCHEDULE_INVALID_TIME_INTERVAL = 58;</code>
     */
    AD_SCHEDULE_INVALID_TIME_INTERVAL(58),
    /**
     * <pre>
     * The number of AdSchedule entries in a day exceeds the limit.
     * </pre>
     *
     * <code>AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT = 59;</code>
     */
    AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT(59),
    /**
     * <pre>
     * CriteriaId does not match the interval of the AdSchedule specified.
     * </pre>
     *
     * <code>AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS = 60;</code>
     */
    AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS(60),
    /**
     * <pre>
     * Cannot set bid modifier for this criterion type.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_CRITERION_TYPE = 61;</code>
     */
    CANNOT_BID_MODIFY_CRITERION_TYPE(61),
    /**
     * <pre>
     * Cannot bid modify criterion, since it is opted out of the campaign.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT = 62;</code>
     */
    CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT(62),
    /**
     * <pre>
     * Cannot set bid modifier for a negative criterion.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_NEGATIVE_CRITERION = 63;</code>
     */
    CANNOT_BID_MODIFY_NEGATIVE_CRITERION(63),
    /**
     * <pre>
     * Bid Modifier already exists. Use SET operation to update.
     * </pre>
     *
     * <code>BID_MODIFIER_ALREADY_EXISTS = 64;</code>
     */
    BID_MODIFIER_ALREADY_EXISTS(64),
    /**
     * <pre>
     * Feed Id is not allowed in these Location Groups.
     * </pre>
     *
     * <code>FEED_ID_NOT_ALLOWED = 65;</code>
     */
    FEED_ID_NOT_ALLOWED(65),
    /**
     * <pre>
     * The account may not use the requested criteria type. For example, some
     * accounts are restricted to keywords only.
     * </pre>
     *
     * <code>ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE = 66;</code>
     */
    ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE(66),
    /**
     * <pre>
     * The requested criteria type cannot be used with campaign or ad group
     * bidding strategy.
     * </pre>
     *
     * <code>CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY = 67;</code>
     */
    CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY(67),
    /**
     * <pre>
     * The Criterion is not allowed to be excluded.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERION = 68;</code>
     */
    CANNOT_EXCLUDE_CRITERION(68),
    /**
     * <pre>
     * The criterion is not allowed to be removed. For example, we cannot remove
     * any of the device criterion.
     * </pre>
     *
     * <code>CANNOT_REMOVE_CRITERION = 69;</code>
     */
    CANNOT_REMOVE_CRITERION(69),
    /**
     * <pre>
     * Bidding categories do not form a valid path in the Shopping bidding
     * category taxonomy.
     * </pre>
     *
     * <code>INVALID_PRODUCT_BIDDING_CATEGORY = 76;</code>
     */
    INVALID_PRODUCT_BIDDING_CATEGORY(76),
    /**
     * <pre>
     * ShoppingSetting must be added to the campaign before ProductScope
     * criteria can be added.
     * </pre>
     *
     * <code>MISSING_SHOPPING_SETTING = 77;</code>
     */
    MISSING_SHOPPING_SETTING(77),
    /**
     * <pre>
     * Matching function is invalid.
     * </pre>
     *
     * <code>INVALID_MATCHING_FUNCTION = 78;</code>
     */
    INVALID_MATCHING_FUNCTION(78),
    /**
     * <pre>
     * Filter parameters not allowed for location groups targeting.
     * </pre>
     *
     * <code>LOCATION_FILTER_NOT_ALLOWED = 79;</code>
     */
    LOCATION_FILTER_NOT_ALLOWED(79),
    /**
     * <pre>
     * Feed not found, or the feed is not an enabled location feed.
     * </pre>
     *
     * <code>INVALID_FEED_FOR_LOCATION_FILTER = 98;</code>
     */
    INVALID_FEED_FOR_LOCATION_FILTER(98),
    /**
     * <pre>
     * Given location filter parameter is invalid for location groups targeting.
     * </pre>
     *
     * <code>LOCATION_FILTER_INVALID = 80;</code>
     */
    LOCATION_FILTER_INVALID(80),
    /**
     * <pre>
     * Criteria type cannot be associated with a campaign and its ad group(s)
     * simultaneously.
     * </pre>
     *
     * <code>CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP = 81;</code>
     */
    CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP(81),
    /**
     * <pre>
     * Range represented by hotel length of stay's min nights and max nights
     * overlaps with an existing criterion.
     * </pre>
     *
     * <code>HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION = 82;</code>
     */
    HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION(82),
    /**
     * <pre>
     * Range represented by hotel advance booking window's min days and max days
     * overlaps with an existing criterion.
     * </pre>
     *
     * <code>HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION = 83;</code>
     */
    HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION(83),
    /**
     * <pre>
     * The field is not allowed to be set when the negative field is set to
     * true, e.g. we don't allow bids in negative ad group or campaign criteria.
     * </pre>
     *
     * <code>FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING = 84;</code>
     */
    FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING(84),
    /**
     * <pre>
     * The combination of operand and operator in webpage condition is invalid.
     * </pre>
     *
     * <code>INVALID_WEBPAGE_CONDITION = 85;</code>
     */
    INVALID_WEBPAGE_CONDITION(85),
    /**
     * <pre>
     * The URL of webpage condition is invalid.
     * </pre>
     *
     * <code>INVALID_WEBPAGE_CONDITION_URL = 86;</code>
     */
    INVALID_WEBPAGE_CONDITION_URL(86),
    /**
     * <pre>
     * The URL of webpage condition cannot be empty or contain white space.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY = 87;</code>
     */
    WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY(87),
    /**
     * <pre>
     * The URL of webpage condition contains an unsupported protocol.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL = 88;</code>
     */
    WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL(88),
    /**
     * <pre>
     * The URL of webpage condition cannot be an IP address.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS = 89;</code>
     */
    WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS(89),
    /**
     * <pre>
     * The domain of the URL is not consistent with the domain in campaign
     * setting.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING = 90;</code>
     */
    WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING(90),
    /**
     * <pre>
     * The URL of webpage condition cannot be a public suffix itself.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX = 91;</code>
     */
    WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX(91),
    /**
     * <pre>
     * The URL of webpage condition has an invalid public suffix.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX = 92;</code>
     */
    WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX(92),
    /**
     * <pre>
     * Value track parameter is not supported in webpage condition URL.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED = 93;</code>
     */
    WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED(93),
    /**
     * <pre>
     * Only one URL-EQUALS webpage condition is allowed in a webpage
     * criterion and it cannot be combined with other conditions.
     * </pre>
     *
     * <code>WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION = 94;</code>
     */
    WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION(94),
    /**
     * <pre>
     * A webpage criterion cannot be added to a non-DSA ad group.
     * </pre>
     *
     * <code>WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP = 95;</code>
     */
    WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP(95),
    /**
     * <pre>
     * Cannot add positive user list criteria in Smart Display campaigns.
     * </pre>
     *
     * <code>CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS = 99;</code>
     */
    CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS(99),
    /**
     * <pre>
     * Listing scope contains too many dimension types.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES = 100;</code>
     */
    LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES(100),
    /**
     * <pre>
     * Listing scope has too many IN operators.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_IN_OPERATORS = 101;</code>
     */
    LISTING_SCOPE_TOO_MANY_IN_OPERATORS(101),
    /**
     * <pre>
     * Listing scope contains IN operator on an unsupported dimension type.
     * </pre>
     *
     * <code>LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED = 102;</code>
     */
    LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED(102),
    /**
     * <pre>
     * There are dimensions with duplicate dimension type.
     * </pre>
     *
     * <code>DUPLICATE_LISTING_DIMENSION_TYPE = 103;</code>
     */
    DUPLICATE_LISTING_DIMENSION_TYPE(103),
    /**
     * <pre>
     * There are dimensions with duplicate dimension value.
     * </pre>
     *
     * <code>DUPLICATE_LISTING_DIMENSION_VALUE = 104;</code>
     */
    DUPLICATE_LISTING_DIMENSION_VALUE(104),
    /**
     * <pre>
     * Listing group SUBDIVISION nodes cannot have bids.
     * </pre>
     *
     * <code>CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION = 105;</code>
     */
    CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION(105),
    /**
     * <pre>
     * Ad group is invalid due to the listing groups it contains.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_HIERARCHY = 106;</code>
     */
    INVALID_LISTING_GROUP_HIERARCHY(106),
    /**
     * <pre>
     * Listing group unit cannot have children.
     * </pre>
     *
     * <code>LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN = 107;</code>
     */
    LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN(107),
    /**
     * <pre>
     * Subdivided listing groups must have an "others" case.
     * </pre>
     *
     * <code>LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE = 108;</code>
     */
    LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE(108),
    /**
     * <pre>
     * Dimension type of listing group must be the same as that of its siblings.
     * </pre>
     *
     * <code>LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS = 109;</code>
     */
    LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS(109),
    /**
     * <pre>
     * Listing group cannot be added to the ad group because it already exists.
     * </pre>
     *
     * <code>LISTING_GROUP_ALREADY_EXISTS = 110;</code>
     */
    LISTING_GROUP_ALREADY_EXISTS(110),
    /**
     * <pre>
     * Listing group referenced in the operation was not found in the ad group.
     * </pre>
     *
     * <code>LISTING_GROUP_DOES_NOT_EXIST = 111;</code>
     */
    LISTING_GROUP_DOES_NOT_EXIST(111),
    /**
     * <pre>
     * Recursive removal failed because listing group subdivision is being
     * created or modified in this request.
     * </pre>
     *
     * <code>LISTING_GROUP_CANNOT_BE_REMOVED = 112;</code>
     */
    LISTING_GROUP_CANNOT_BE_REMOVED(112),
    /**
     * <pre>
     * Listing group type is not allowed for specified ad group criterion type.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_TYPE = 113;</code>
     */
    INVALID_LISTING_GROUP_TYPE(113),
    /**
     * <pre>
     * Listing group in an ADD operation specifies a non temporary criterion id.
     * </pre>
     *
     * <code>LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID = 114;</code>
     */
    LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID(114),
    /**
     * <pre>
     * The combined length of dimension values of the Listing scope criterion
     * is too long.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_LONG = 115;</code>
     */
    LISTING_SCOPE_TOO_LONG(115),
    /**
     * <pre>
     * Listing scope contains too many dimensions.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_DIMENSIONS = 116;</code>
     */
    LISTING_SCOPE_TOO_MANY_DIMENSIONS(116),
    /**
     * <pre>
     * The combined length of dimension values of the Listing group criterion is
     * too long.
     * </pre>
     *
     * <code>LISTING_GROUP_TOO_LONG = 117;</code>
     */
    LISTING_GROUP_TOO_LONG(117),
    /**
     * <pre>
     * Listing group tree is too deep.
     * </pre>
     *
     * <code>LISTING_GROUP_TREE_TOO_DEEP = 118;</code>
     */
    LISTING_GROUP_TREE_TOO_DEEP(118),
    /**
     * <pre>
     * Listing dimension is invalid (e.g. dimension contains illegal value,
     * dimension type is represented with wrong class, etc). Listing dimension
     * value can not contain "==" or "&amp;+".
     * </pre>
     *
     * <code>INVALID_LISTING_DIMENSION = 119;</code>
     */
    INVALID_LISTING_DIMENSION(119),
    /**
     * <pre>
     * Listing dimension type is either invalid for campaigns of this type or
     * cannot be used in the current context. BIDDING_CATEGORY_Lx and
     * PRODUCT_TYPE_Lx dimensions must be used in ascending order of their
     * levels: L1, L2, L3, L4, L5... The levels must be specified sequentially
     * and start from L1. Furthermore, an "others" Listing group cannot be
     * subdivided with a dimension of the same type but of a higher level
     * ("others" BIDDING_CATEGORY_L3 can be subdivided with BRAND but not with
     * BIDDING_CATEGORY_L4).
     * </pre>
     *
     * <code>INVALID_LISTING_DIMENSION_TYPE = 120;</code>
     */
    INVALID_LISTING_DIMENSION_TYPE(120),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * Concrete type of criterion is required for CREATE and UPDATE operations.
     * </pre>
     *
     * <code>CONCRETE_TYPE_REQUIRED = 2;</code>
     */
    public static final int CONCRETE_TYPE_REQUIRED_VALUE = 2;
    /**
     * <pre>
     * The category requested for exclusion is invalid.
     * </pre>
     *
     * <code>INVALID_EXCLUDED_CATEGORY = 3;</code>
     */
    public static final int INVALID_EXCLUDED_CATEGORY_VALUE = 3;
    /**
     * <pre>
     * Invalid keyword criteria text.
     * </pre>
     *
     * <code>INVALID_KEYWORD_TEXT = 4;</code>
     */
    public static final int INVALID_KEYWORD_TEXT_VALUE = 4;
    /**
     * <pre>
     * Keyword text should be less than 80 chars.
     * </pre>
     *
     * <code>KEYWORD_TEXT_TOO_LONG = 5;</code>
     */
    public static final int KEYWORD_TEXT_TOO_LONG_VALUE = 5;
    /**
     * <pre>
     * Keyword text has too many words.
     * </pre>
     *
     * <code>KEYWORD_HAS_TOO_MANY_WORDS = 6;</code>
     */
    public static final int KEYWORD_HAS_TOO_MANY_WORDS_VALUE = 6;
    /**
     * <pre>
     * Keyword text has invalid characters or symbols.
     * </pre>
     *
     * <code>KEYWORD_HAS_INVALID_CHARS = 7;</code>
     */
    public static final int KEYWORD_HAS_INVALID_CHARS_VALUE = 7;
    /**
     * <pre>
     * Invalid placement URL.
     * </pre>
     *
     * <code>INVALID_PLACEMENT_URL = 8;</code>
     */
    public static final int INVALID_PLACEMENT_URL_VALUE = 8;
    /**
     * <pre>
     * Invalid user list criterion.
     * </pre>
     *
     * <code>INVALID_USER_LIST = 9;</code>
     */
    public static final int INVALID_USER_LIST_VALUE = 9;
    /**
     * <pre>
     * Invalid user interest criterion.
     * </pre>
     *
     * <code>INVALID_USER_INTEREST = 10;</code>
     */
    public static final int INVALID_USER_INTEREST_VALUE = 10;
    /**
     * <pre>
     * Placement URL has wrong format.
     * </pre>
     *
     * <code>INVALID_FORMAT_FOR_PLACEMENT_URL = 11;</code>
     */
    public static final int INVALID_FORMAT_FOR_PLACEMENT_URL_VALUE = 11;
    /**
     * <pre>
     * Placement URL is too long.
     * </pre>
     *
     * <code>PLACEMENT_URL_IS_TOO_LONG = 12;</code>
     */
    public static final int PLACEMENT_URL_IS_TOO_LONG_VALUE = 12;
    /**
     * <pre>
     * Indicates the URL contains an illegal character.
     * </pre>
     *
     * <code>PLACEMENT_URL_HAS_ILLEGAL_CHAR = 13;</code>
     */
    public static final int PLACEMENT_URL_HAS_ILLEGAL_CHAR_VALUE = 13;
    /**
     * <pre>
     * Indicates the URL contains multiple comma separated URLs.
     * </pre>
     *
     * <code>PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE = 14;</code>
     */
    public static final int PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE_VALUE = 14;
    /**
     * <pre>
     * Indicates the domain is blocked.
     * </pre>
     *
     * <code>PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION = 15;</code>
     */
    public static final int PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION_VALUE = 15;
    /**
     * <pre>
     * Invalid topic path.
     * </pre>
     *
     * <code>INVALID_TOPIC_PATH = 16;</code>
     */
    public static final int INVALID_TOPIC_PATH_VALUE = 16;
    /**
     * <pre>
     * The YouTube Channel Id is invalid.
     * </pre>
     *
     * <code>INVALID_YOUTUBE_CHANNEL_ID = 17;</code>
     */
    public static final int INVALID_YOUTUBE_CHANNEL_ID_VALUE = 17;
    /**
     * <pre>
     * The YouTube Video Id is invalid.
     * </pre>
     *
     * <code>INVALID_YOUTUBE_VIDEO_ID = 18;</code>
     */
    public static final int INVALID_YOUTUBE_VIDEO_ID_VALUE = 18;
    /**
     * <pre>
     * Indicates the placement is a YouTube vertical channel, which is no longer
     * supported.
     * </pre>
     *
     * <code>YOUTUBE_VERTICAL_CHANNEL_DEPRECATED = 19;</code>
     */
    public static final int YOUTUBE_VERTICAL_CHANNEL_DEPRECATED_VALUE = 19;
    /**
     * <pre>
     * Indicates the placement is a YouTube demographic channel, which is no
     * longer supported.
     * </pre>
     *
     * <code>YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED = 20;</code>
     */
    public static final int YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED_VALUE = 20;
    /**
     * <pre>
     * YouTube urls are not supported in Placement criterion. Use YouTubeChannel
     * and YouTubeVideo criterion instead.
     * </pre>
     *
     * <code>YOUTUBE_URL_UNSUPPORTED = 21;</code>
     */
    public static final int YOUTUBE_URL_UNSUPPORTED_VALUE = 21;
    /**
     * <pre>
     * Criteria type can not be excluded by the customer, like AOL account type
     * cannot target site type criteria.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERIA_TYPE = 22;</code>
     */
    public static final int CANNOT_EXCLUDE_CRITERIA_TYPE_VALUE = 22;
    /**
     * <pre>
     * Criteria type can not be targeted.
     * </pre>
     *
     * <code>CANNOT_ADD_CRITERIA_TYPE = 23;</code>
     */
    public static final int CANNOT_ADD_CRITERIA_TYPE_VALUE = 23;
    /**
     * <pre>
     * Not allowed to exclude similar user list.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_SIMILAR_USER_LIST = 26;</code>
     */
    public static final int CANNOT_EXCLUDE_SIMILAR_USER_LIST_VALUE = 26;
    /**
     * <pre>
     * Not allowed to target a closed user list.
     * </pre>
     *
     * <code>CANNOT_ADD_CLOSED_USER_LIST = 27;</code>
     */
    public static final int CANNOT_ADD_CLOSED_USER_LIST_VALUE = 27;
    /**
     * <pre>
     * Not allowed to add display only UserLists to search only campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS = 28;</code>
     */
    public static final int CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS_VALUE = 28;
    /**
     * <pre>
     * Not allowed to add display only UserLists to search plus campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS = 29;</code>
     */
    public static final int CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS_VALUE = 29;
    /**
     * <pre>
     * Not allowed to add display only UserLists to shopping campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS = 30;</code>
     */
    public static final int CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS_VALUE = 30;
    /**
     * <pre>
     * Not allowed to add User interests to search only campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS = 31;</code>
     */
    public static final int CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS_VALUE = 31;
    /**
     * <pre>
     * Not allowed to set bids for this criterion type in search campaigns
     * </pre>
     *
     * <code>CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS = 32;</code>
     */
    public static final int CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS_VALUE = 32;
    /**
     * <pre>
     * Final URLs, URL Templates and CustomParameters cannot be set for the
     * criterion types of Gender, AgeRange, UserList, Placement, MobileApp, and
     * MobileAppCategory in search campaigns and shopping campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE = 33;</code>
     */
    public static final int CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE_VALUE = 33;
    /**
     * <pre>
     * Invalid custom affinity criterion.
     * </pre>
     *
     * <code>INVALID_CUSTOM_AFFINITY = 96;</code>
     */
    public static final int INVALID_CUSTOM_AFFINITY_VALUE = 96;
    /**
     * <pre>
     * Invalid custom intent criterion.
     * </pre>
     *
     * <code>INVALID_CUSTOM_INTENT = 97;</code>
     */
    public static final int INVALID_CUSTOM_INTENT_VALUE = 97;
    /**
     * <pre>
     * IP address is not valid.
     * </pre>
     *
     * <code>INVALID_IP_ADDRESS = 34;</code>
     */
    public static final int INVALID_IP_ADDRESS_VALUE = 34;
    /**
     * <pre>
     * IP format is not valid.
     * </pre>
     *
     * <code>INVALID_IP_FORMAT = 35;</code>
     */
    public static final int INVALID_IP_FORMAT_VALUE = 35;
    /**
     * <pre>
     * Mobile application is not valid.
     * </pre>
     *
     * <code>INVALID_MOBILE_APP = 36;</code>
     */
    public static final int INVALID_MOBILE_APP_VALUE = 36;
    /**
     * <pre>
     * Mobile application category is not valid.
     * </pre>
     *
     * <code>INVALID_MOBILE_APP_CATEGORY = 37;</code>
     */
    public static final int INVALID_MOBILE_APP_CATEGORY_VALUE = 37;
    /**
     * <pre>
     * The CriterionId does not exist or is of the incorrect type.
     * </pre>
     *
     * <code>INVALID_CRITERION_ID = 38;</code>
     */
    public static final int INVALID_CRITERION_ID_VALUE = 38;
    /**
     * <pre>
     * The Criterion is not allowed to be targeted.
     * </pre>
     *
     * <code>CANNOT_TARGET_CRITERION = 39;</code>
     */
    public static final int CANNOT_TARGET_CRITERION_VALUE = 39;
    /**
     * <pre>
     * The criterion is not allowed to be targeted as it is deprecated.
     * </pre>
     *
     * <code>CANNOT_TARGET_OBSOLETE_CRITERION = 40;</code>
     */
    public static final int CANNOT_TARGET_OBSOLETE_CRITERION_VALUE = 40;
    /**
     * <pre>
     * The CriterionId is not valid for the type.
     * </pre>
     *
     * <code>CRITERION_ID_AND_TYPE_MISMATCH = 41;</code>
     */
    public static final int CRITERION_ID_AND_TYPE_MISMATCH_VALUE = 41;
    /**
     * <pre>
     * Distance for the radius for the proximity criterion is invalid.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_RADIUS = 42;</code>
     */
    public static final int INVALID_PROXIMITY_RADIUS_VALUE = 42;
    /**
     * <pre>
     * Units for the distance for the radius for the proximity criterion is
     * invalid.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_RADIUS_UNITS = 43;</code>
     */
    public static final int INVALID_PROXIMITY_RADIUS_UNITS_VALUE = 43;
    /**
     * <pre>
     * Street address in the address is not valid.
     * </pre>
     *
     * <code>INVALID_STREETADDRESS_LENGTH = 44;</code>
     */
    public static final int INVALID_STREETADDRESS_LENGTH_VALUE = 44;
    /**
     * <pre>
     * City name in the address is not valid.
     * </pre>
     *
     * <code>INVALID_CITYNAME_LENGTH = 45;</code>
     */
    public static final int INVALID_CITYNAME_LENGTH_VALUE = 45;
    /**
     * <pre>
     * Region code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_REGIONCODE_LENGTH = 46;</code>
     */
    public static final int INVALID_REGIONCODE_LENGTH_VALUE = 46;
    /**
     * <pre>
     * Region name in the address is not valid.
     * </pre>
     *
     * <code>INVALID_REGIONNAME_LENGTH = 47;</code>
     */
    public static final int INVALID_REGIONNAME_LENGTH_VALUE = 47;
    /**
     * <pre>
     * Postal code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_POSTALCODE_LENGTH = 48;</code>
     */
    public static final int INVALID_POSTALCODE_LENGTH_VALUE = 48;
    /**
     * <pre>
     * Country code in the address is not valid.
     * </pre>
     *
     * <code>INVALID_COUNTRY_CODE = 49;</code>
     */
    public static final int INVALID_COUNTRY_CODE_VALUE = 49;
    /**
     * <pre>
     * Latitude for the GeoPoint is not valid.
     * </pre>
     *
     * <code>INVALID_LATITUDE = 50;</code>
     */
    public static final int INVALID_LATITUDE_VALUE = 50;
    /**
     * <pre>
     * Longitude for the GeoPoint is not valid.
     * </pre>
     *
     * <code>INVALID_LONGITUDE = 51;</code>
     */
    public static final int INVALID_LONGITUDE_VALUE = 51;
    /**
     * <pre>
     * The Proximity input is not valid. Both address and geoPoint cannot be
     * null.
     * </pre>
     *
     * <code>PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL = 52;</code>
     */
    public static final int PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL_VALUE = 52;
    /**
     * <pre>
     * The Proximity address cannot be geocoded to a valid lat/long.
     * </pre>
     *
     * <code>INVALID_PROXIMITY_ADDRESS = 53;</code>
     */
    public static final int INVALID_PROXIMITY_ADDRESS_VALUE = 53;
    /**
     * <pre>
     * User domain name is not valid.
     * </pre>
     *
     * <code>INVALID_USER_DOMAIN_NAME = 54;</code>
     */
    public static final int INVALID_USER_DOMAIN_NAME_VALUE = 54;
    /**
     * <pre>
     * Length of serialized criterion parameter exceeded size limit.
     * </pre>
     *
     * <code>CRITERION_PARAMETER_TOO_LONG = 55;</code>
     */
    public static final int CRITERION_PARAMETER_TOO_LONG_VALUE = 55;
    /**
     * <pre>
     * Time interval in the AdSchedule overlaps with another AdSchedule.
     * </pre>
     *
     * <code>AD_SCHEDULE_TIME_INTERVALS_OVERLAP = 56;</code>
     */
    public static final int AD_SCHEDULE_TIME_INTERVALS_OVERLAP_VALUE = 56;
    /**
     * <pre>
     * AdSchedule time interval cannot span multiple days.
     * </pre>
     *
     * <code>AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS = 57;</code>
     */
    public static final int AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS_VALUE = 57;
    /**
     * <pre>
     * AdSchedule time interval specified is invalid, endTime cannot be earlier
     * than startTime.
     * </pre>
     *
     * <code>AD_SCHEDULE_INVALID_TIME_INTERVAL = 58;</code>
     */
    public static final int AD_SCHEDULE_INVALID_TIME_INTERVAL_VALUE = 58;
    /**
     * <pre>
     * The number of AdSchedule entries in a day exceeds the limit.
     * </pre>
     *
     * <code>AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT = 59;</code>
     */
    public static final int AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT_VALUE = 59;
    /**
     * <pre>
     * CriteriaId does not match the interval of the AdSchedule specified.
     * </pre>
     *
     * <code>AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS = 60;</code>
     */
    public static final int AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS_VALUE = 60;
    /**
     * <pre>
     * Cannot set bid modifier for this criterion type.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_CRITERION_TYPE = 61;</code>
     */
    public static final int CANNOT_BID_MODIFY_CRITERION_TYPE_VALUE = 61;
    /**
     * <pre>
     * Cannot bid modify criterion, since it is opted out of the campaign.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT = 62;</code>
     */
    public static final int CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT_VALUE = 62;
    /**
     * <pre>
     * Cannot set bid modifier for a negative criterion.
     * </pre>
     *
     * <code>CANNOT_BID_MODIFY_NEGATIVE_CRITERION = 63;</code>
     */
    public static final int CANNOT_BID_MODIFY_NEGATIVE_CRITERION_VALUE = 63;
    /**
     * <pre>
     * Bid Modifier already exists. Use SET operation to update.
     * </pre>
     *
     * <code>BID_MODIFIER_ALREADY_EXISTS = 64;</code>
     */
    public static final int BID_MODIFIER_ALREADY_EXISTS_VALUE = 64;
    /**
     * <pre>
     * Feed Id is not allowed in these Location Groups.
     * </pre>
     *
     * <code>FEED_ID_NOT_ALLOWED = 65;</code>
     */
    public static final int FEED_ID_NOT_ALLOWED_VALUE = 65;
    /**
     * <pre>
     * The account may not use the requested criteria type. For example, some
     * accounts are restricted to keywords only.
     * </pre>
     *
     * <code>ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE = 66;</code>
     */
    public static final int ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE_VALUE = 66;
    /**
     * <pre>
     * The requested criteria type cannot be used with campaign or ad group
     * bidding strategy.
     * </pre>
     *
     * <code>CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY = 67;</code>
     */
    public static final int CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY_VALUE = 67;
    /**
     * <pre>
     * The Criterion is not allowed to be excluded.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERION = 68;</code>
     */
    public static final int CANNOT_EXCLUDE_CRITERION_VALUE = 68;
    /**
     * <pre>
     * The criterion is not allowed to be removed. For example, we cannot remove
     * any of the device criterion.
     * </pre>
     *
     * <code>CANNOT_REMOVE_CRITERION = 69;</code>
     */
    public static final int CANNOT_REMOVE_CRITERION_VALUE = 69;
    /**
     * <pre>
     * Bidding categories do not form a valid path in the Shopping bidding
     * category taxonomy.
     * </pre>
     *
     * <code>INVALID_PRODUCT_BIDDING_CATEGORY = 76;</code>
     */
    public static final int INVALID_PRODUCT_BIDDING_CATEGORY_VALUE = 76;
    /**
     * <pre>
     * ShoppingSetting must be added to the campaign before ProductScope
     * criteria can be added.
     * </pre>
     *
     * <code>MISSING_SHOPPING_SETTING = 77;</code>
     */
    public static final int MISSING_SHOPPING_SETTING_VALUE = 77;
    /**
     * <pre>
     * Matching function is invalid.
     * </pre>
     *
     * <code>INVALID_MATCHING_FUNCTION = 78;</code>
     */
    public static final int INVALID_MATCHING_FUNCTION_VALUE = 78;
    /**
     * <pre>
     * Filter parameters not allowed for location groups targeting.
     * </pre>
     *
     * <code>LOCATION_FILTER_NOT_ALLOWED = 79;</code>
     */
    public static final int LOCATION_FILTER_NOT_ALLOWED_VALUE = 79;
    /**
     * <pre>
     * Feed not found, or the feed is not an enabled location feed.
     * </pre>
     *
     * <code>INVALID_FEED_FOR_LOCATION_FILTER = 98;</code>
     */
    public static final int INVALID_FEED_FOR_LOCATION_FILTER_VALUE = 98;
    /**
     * <pre>
     * Given location filter parameter is invalid for location groups targeting.
     * </pre>
     *
     * <code>LOCATION_FILTER_INVALID = 80;</code>
     */
    public static final int LOCATION_FILTER_INVALID_VALUE = 80;
    /**
     * <pre>
     * Criteria type cannot be associated with a campaign and its ad group(s)
     * simultaneously.
     * </pre>
     *
     * <code>CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP = 81;</code>
     */
    public static final int CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP_VALUE = 81;
    /**
     * <pre>
     * Range represented by hotel length of stay's min nights and max nights
     * overlaps with an existing criterion.
     * </pre>
     *
     * <code>HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION = 82;</code>
     */
    public static final int HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION_VALUE = 82;
    /**
     * <pre>
     * Range represented by hotel advance booking window's min days and max days
     * overlaps with an existing criterion.
     * </pre>
     *
     * <code>HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION = 83;</code>
     */
    public static final int HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION_VALUE = 83;
    /**
     * <pre>
     * The field is not allowed to be set when the negative field is set to
     * true, e.g. we don't allow bids in negative ad group or campaign criteria.
     * </pre>
     *
     * <code>FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING = 84;</code>
     */
    public static final int FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING_VALUE = 84;
    /**
     * <pre>
     * The combination of operand and operator in webpage condition is invalid.
     * </pre>
     *
     * <code>INVALID_WEBPAGE_CONDITION = 85;</code>
     */
    public static final int INVALID_WEBPAGE_CONDITION_VALUE = 85;
    /**
     * <pre>
     * The URL of webpage condition is invalid.
     * </pre>
     *
     * <code>INVALID_WEBPAGE_CONDITION_URL = 86;</code>
     */
    public static final int INVALID_WEBPAGE_CONDITION_URL_VALUE = 86;
    /**
     * <pre>
     * The URL of webpage condition cannot be empty or contain white space.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY = 87;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY_VALUE = 87;
    /**
     * <pre>
     * The URL of webpage condition contains an unsupported protocol.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL = 88;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL_VALUE = 88;
    /**
     * <pre>
     * The URL of webpage condition cannot be an IP address.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS = 89;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS_VALUE = 89;
    /**
     * <pre>
     * The domain of the URL is not consistent with the domain in campaign
     * setting.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING = 90;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING_VALUE = 90;
    /**
     * <pre>
     * The URL of webpage condition cannot be a public suffix itself.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX = 91;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX_VALUE = 91;
    /**
     * <pre>
     * The URL of webpage condition has an invalid public suffix.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX = 92;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX_VALUE = 92;
    /**
     * <pre>
     * Value track parameter is not supported in webpage condition URL.
     * </pre>
     *
     * <code>WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED = 93;</code>
     */
    public static final int WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED_VALUE = 93;
    /**
     * <pre>
     * Only one URL-EQUALS webpage condition is allowed in a webpage
     * criterion and it cannot be combined with other conditions.
     * </pre>
     *
     * <code>WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION = 94;</code>
     */
    public static final int WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION_VALUE = 94;
    /**
     * <pre>
     * A webpage criterion cannot be added to a non-DSA ad group.
     * </pre>
     *
     * <code>WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP = 95;</code>
     */
    public static final int WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP_VALUE = 95;
    /**
     * <pre>
     * Cannot add positive user list criteria in Smart Display campaigns.
     * </pre>
     *
     * <code>CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS = 99;</code>
     */
    public static final int CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS_VALUE = 99;
    /**
     * <pre>
     * Listing scope contains too many dimension types.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES = 100;</code>
     */
    public static final int LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES_VALUE = 100;
    /**
     * <pre>
     * Listing scope has too many IN operators.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_IN_OPERATORS = 101;</code>
     */
    public static final int LISTING_SCOPE_TOO_MANY_IN_OPERATORS_VALUE = 101;
    /**
     * <pre>
     * Listing scope contains IN operator on an unsupported dimension type.
     * </pre>
     *
     * <code>LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED = 102;</code>
     */
    public static final int LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED_VALUE = 102;
    /**
     * <pre>
     * There are dimensions with duplicate dimension type.
     * </pre>
     *
     * <code>DUPLICATE_LISTING_DIMENSION_TYPE = 103;</code>
     */
    public static final int DUPLICATE_LISTING_DIMENSION_TYPE_VALUE = 103;
    /**
     * <pre>
     * There are dimensions with duplicate dimension value.
     * </pre>
     *
     * <code>DUPLICATE_LISTING_DIMENSION_VALUE = 104;</code>
     */
    public static final int DUPLICATE_LISTING_DIMENSION_VALUE_VALUE = 104;
    /**
     * <pre>
     * Listing group SUBDIVISION nodes cannot have bids.
     * </pre>
     *
     * <code>CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION = 105;</code>
     */
    public static final int CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION_VALUE = 105;
    /**
     * <pre>
     * Ad group is invalid due to the listing groups it contains.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_HIERARCHY = 106;</code>
     */
    public static final int INVALID_LISTING_GROUP_HIERARCHY_VALUE = 106;
    /**
     * <pre>
     * Listing group unit cannot have children.
     * </pre>
     *
     * <code>LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN = 107;</code>
     */
    public static final int LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN_VALUE = 107;
    /**
     * <pre>
     * Subdivided listing groups must have an "others" case.
     * </pre>
     *
     * <code>LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE = 108;</code>
     */
    public static final int LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE_VALUE = 108;
    /**
     * <pre>
     * Dimension type of listing group must be the same as that of its siblings.
     * </pre>
     *
     * <code>LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS = 109;</code>
     */
    public static final int LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS_VALUE = 109;
    /**
     * <pre>
     * Listing group cannot be added to the ad group because it already exists.
     * </pre>
     *
     * <code>LISTING_GROUP_ALREADY_EXISTS = 110;</code>
     */
    public static final int LISTING_GROUP_ALREADY_EXISTS_VALUE = 110;
    /**
     * <pre>
     * Listing group referenced in the operation was not found in the ad group.
     * </pre>
     *
     * <code>LISTING_GROUP_DOES_NOT_EXIST = 111;</code>
     */
    public static final int LISTING_GROUP_DOES_NOT_EXIST_VALUE = 111;
    /**
     * <pre>
     * Recursive removal failed because listing group subdivision is being
     * created or modified in this request.
     * </pre>
     *
     * <code>LISTING_GROUP_CANNOT_BE_REMOVED = 112;</code>
     */
    public static final int LISTING_GROUP_CANNOT_BE_REMOVED_VALUE = 112;
    /**
     * <pre>
     * Listing group type is not allowed for specified ad group criterion type.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_TYPE = 113;</code>
     */
    public static final int INVALID_LISTING_GROUP_TYPE_VALUE = 113;
    /**
     * <pre>
     * Listing group in an ADD operation specifies a non temporary criterion id.
     * </pre>
     *
     * <code>LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID = 114;</code>
     */
    public static final int LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID_VALUE = 114;
    /**
     * <pre>
     * The combined length of dimension values of the Listing scope criterion
     * is too long.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_LONG = 115;</code>
     */
    public static final int LISTING_SCOPE_TOO_LONG_VALUE = 115;
    /**
     * <pre>
     * Listing scope contains too many dimensions.
     * </pre>
     *
     * <code>LISTING_SCOPE_TOO_MANY_DIMENSIONS = 116;</code>
     */
    public static final int LISTING_SCOPE_TOO_MANY_DIMENSIONS_VALUE = 116;
    /**
     * <pre>
     * The combined length of dimension values of the Listing group criterion is
     * too long.
     * </pre>
     *
     * <code>LISTING_GROUP_TOO_LONG = 117;</code>
     */
    public static final int LISTING_GROUP_TOO_LONG_VALUE = 117;
    /**
     * <pre>
     * Listing group tree is too deep.
     * </pre>
     *
     * <code>LISTING_GROUP_TREE_TOO_DEEP = 118;</code>
     */
    public static final int LISTING_GROUP_TREE_TOO_DEEP_VALUE = 118;
    /**
     * <pre>
     * Listing dimension is invalid (e.g. dimension contains illegal value,
     * dimension type is represented with wrong class, etc). Listing dimension
     * value can not contain "==" or "&amp;+".
     * </pre>
     *
     * <code>INVALID_LISTING_DIMENSION = 119;</code>
     */
    public static final int INVALID_LISTING_DIMENSION_VALUE = 119;
    /**
     * <pre>
     * Listing dimension type is either invalid for campaigns of this type or
     * cannot be used in the current context. BIDDING_CATEGORY_Lx and
     * PRODUCT_TYPE_Lx dimensions must be used in ascending order of their
     * levels: L1, L2, L3, L4, L5... The levels must be specified sequentially
     * and start from L1. Furthermore, an "others" Listing group cannot be
     * subdivided with a dimension of the same type but of a higher level
     * ("others" BIDDING_CATEGORY_L3 can be subdivided with BRAND but not with
     * BIDDING_CATEGORY_L4).
     * </pre>
     *
     * <code>INVALID_LISTING_DIMENSION_TYPE = 120;</code>
     */
    public static final int INVALID_LISTING_DIMENSION_TYPE_VALUE = 120;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CriterionError valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CriterionError forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 2: return CONCRETE_TYPE_REQUIRED;
        case 3: return INVALID_EXCLUDED_CATEGORY;
        case 4: return INVALID_KEYWORD_TEXT;
        case 5: return KEYWORD_TEXT_TOO_LONG;
        case 6: return KEYWORD_HAS_TOO_MANY_WORDS;
        case 7: return KEYWORD_HAS_INVALID_CHARS;
        case 8: return INVALID_PLACEMENT_URL;
        case 9: return INVALID_USER_LIST;
        case 10: return INVALID_USER_INTEREST;
        case 11: return INVALID_FORMAT_FOR_PLACEMENT_URL;
        case 12: return PLACEMENT_URL_IS_TOO_LONG;
        case 13: return PLACEMENT_URL_HAS_ILLEGAL_CHAR;
        case 14: return PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE;
        case 15: return PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION;
        case 16: return INVALID_TOPIC_PATH;
        case 17: return INVALID_YOUTUBE_CHANNEL_ID;
        case 18: return INVALID_YOUTUBE_VIDEO_ID;
        case 19: return YOUTUBE_VERTICAL_CHANNEL_DEPRECATED;
        case 20: return YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED;
        case 21: return YOUTUBE_URL_UNSUPPORTED;
        case 22: return CANNOT_EXCLUDE_CRITERIA_TYPE;
        case 23: return CANNOT_ADD_CRITERIA_TYPE;
        case 26: return CANNOT_EXCLUDE_SIMILAR_USER_LIST;
        case 27: return CANNOT_ADD_CLOSED_USER_LIST;
        case 28: return CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS;
        case 29: return CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS;
        case 30: return CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS;
        case 31: return CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS;
        case 32: return CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS;
        case 33: return CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE;
        case 96: return INVALID_CUSTOM_AFFINITY;
        case 97: return INVALID_CUSTOM_INTENT;
        case 34: return INVALID_IP_ADDRESS;
        case 35: return INVALID_IP_FORMAT;
        case 36: return INVALID_MOBILE_APP;
        case 37: return INVALID_MOBILE_APP_CATEGORY;
        case 38: return INVALID_CRITERION_ID;
        case 39: return CANNOT_TARGET_CRITERION;
        case 40: return CANNOT_TARGET_OBSOLETE_CRITERION;
        case 41: return CRITERION_ID_AND_TYPE_MISMATCH;
        case 42: return INVALID_PROXIMITY_RADIUS;
        case 43: return INVALID_PROXIMITY_RADIUS_UNITS;
        case 44: return INVALID_STREETADDRESS_LENGTH;
        case 45: return INVALID_CITYNAME_LENGTH;
        case 46: return INVALID_REGIONCODE_LENGTH;
        case 47: return INVALID_REGIONNAME_LENGTH;
        case 48: return INVALID_POSTALCODE_LENGTH;
        case 49: return INVALID_COUNTRY_CODE;
        case 50: return INVALID_LATITUDE;
        case 51: return INVALID_LONGITUDE;
        case 52: return PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL;
        case 53: return INVALID_PROXIMITY_ADDRESS;
        case 54: return INVALID_USER_DOMAIN_NAME;
        case 55: return CRITERION_PARAMETER_TOO_LONG;
        case 56: return AD_SCHEDULE_TIME_INTERVALS_OVERLAP;
        case 57: return AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS;
        case 58: return AD_SCHEDULE_INVALID_TIME_INTERVAL;
        case 59: return AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT;
        case 60: return AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS;
        case 61: return CANNOT_BID_MODIFY_CRITERION_TYPE;
        case 62: return CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT;
        case 63: return CANNOT_BID_MODIFY_NEGATIVE_CRITERION;
        case 64: return BID_MODIFIER_ALREADY_EXISTS;
        case 65: return FEED_ID_NOT_ALLOWED;
        case 66: return ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE;
        case 67: return CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY;
        case 68: return CANNOT_EXCLUDE_CRITERION;
        case 69: return CANNOT_REMOVE_CRITERION;
        case 76: return INVALID_PRODUCT_BIDDING_CATEGORY;
        case 77: return MISSING_SHOPPING_SETTING;
        case 78: return INVALID_MATCHING_FUNCTION;
        case 79: return LOCATION_FILTER_NOT_ALLOWED;
        case 98: return INVALID_FEED_FOR_LOCATION_FILTER;
        case 80: return LOCATION_FILTER_INVALID;
        case 81: return CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP;
        case 82: return HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION;
        case 83: return HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION;
        case 84: return FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING;
        case 85: return INVALID_WEBPAGE_CONDITION;
        case 86: return INVALID_WEBPAGE_CONDITION_URL;
        case 87: return WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY;
        case 88: return WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL;
        case 89: return WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS;
        case 90: return WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING;
        case 91: return WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX;
        case 92: return WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX;
        case 93: return WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED;
        case 94: return WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION;
        case 95: return WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP;
        case 99: return CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS;
        case 100: return LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES;
        case 101: return LISTING_SCOPE_TOO_MANY_IN_OPERATORS;
        case 102: return LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED;
        case 103: return DUPLICATE_LISTING_DIMENSION_TYPE;
        case 104: return DUPLICATE_LISTING_DIMENSION_VALUE;
        case 105: return CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION;
        case 106: return INVALID_LISTING_GROUP_HIERARCHY;
        case 107: return LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN;
        case 108: return LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE;
        case 109: return LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS;
        case 110: return LISTING_GROUP_ALREADY_EXISTS;
        case 111: return LISTING_GROUP_DOES_NOT_EXIST;
        case 112: return LISTING_GROUP_CANNOT_BE_REMOVED;
        case 113: return INVALID_LISTING_GROUP_TYPE;
        case 114: return LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID;
        case 115: return LISTING_SCOPE_TOO_LONG;
        case 116: return LISTING_SCOPE_TOO_MANY_DIMENSIONS;
        case 117: return LISTING_GROUP_TOO_LONG;
        case 118: return LISTING_GROUP_TREE_TOO_DEEP;
        case 119: return INVALID_LISTING_DIMENSION;
        case 120: return INVALID_LISTING_DIMENSION_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CriterionError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CriterionError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CriterionError>() {
            public CriterionError findValueByNumber(int number) {
              return CriterionError.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v5.errors.CriterionErrorEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final CriterionError[] VALUES = values();

    public static CriterionError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CriterionError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v5.errors.CriterionErrorEnum.CriterionError)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v5.errors.CriterionErrorEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v5.errors.CriterionErrorEnum other = (com.google.ads.googleads.v5.errors.CriterionErrorEnum) obj;

    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v5.errors.CriterionErrorEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Container for enum describing possible criterion errors.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v5.errors.CriterionErrorEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v5.errors.CriterionErrorEnum)
      com.google.ads.googleads.v5.errors.CriterionErrorEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v5.errors.CriterionErrorProto.internal_static_google_ads_googleads_v5_errors_CriterionErrorEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v5.errors.CriterionErrorProto.internal_static_google_ads_googleads_v5_errors_CriterionErrorEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v5.errors.CriterionErrorEnum.class, com.google.ads.googleads.v5.errors.CriterionErrorEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v5.errors.CriterionErrorEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v5.errors.CriterionErrorProto.internal_static_google_ads_googleads_v5_errors_CriterionErrorEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.errors.CriterionErrorEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v5.errors.CriterionErrorEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.errors.CriterionErrorEnum build() {
      com.google.ads.googleads.v5.errors.CriterionErrorEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v5.errors.CriterionErrorEnum buildPartial() {
      com.google.ads.googleads.v5.errors.CriterionErrorEnum result = new com.google.ads.googleads.v5.errors.CriterionErrorEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v5.errors.CriterionErrorEnum) {
        return mergeFrom((com.google.ads.googleads.v5.errors.CriterionErrorEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v5.errors.CriterionErrorEnum other) {
      if (other == com.google.ads.googleads.v5.errors.CriterionErrorEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v5.errors.CriterionErrorEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v5.errors.CriterionErrorEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v5.errors.CriterionErrorEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v5.errors.CriterionErrorEnum)
  private static final com.google.ads.googleads.v5.errors.CriterionErrorEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v5.errors.CriterionErrorEnum();
  }

  public static com.google.ads.googleads.v5.errors.CriterionErrorEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CriterionErrorEnum>
      PARSER = new com.google.protobuf.AbstractParser<CriterionErrorEnum>() {
    @java.lang.Override
    public CriterionErrorEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CriterionErrorEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CriterionErrorEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CriterionErrorEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v5.errors.CriterionErrorEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

