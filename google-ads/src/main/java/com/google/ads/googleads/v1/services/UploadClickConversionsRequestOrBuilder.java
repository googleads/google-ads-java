// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/services/conversion_upload_service.proto

package com.google.ads.googleads.v1.services;

public interface UploadClickConversionsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.ads.googleads.v1.services.UploadClickConversionsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The ID of the customer performing the upload.
   * </pre>
   *
   * <code>string customer_id = 1;</code>
   */
  java.lang.String getCustomerId();
  /**
   * <pre>
   * The ID of the customer performing the upload.
   * </pre>
   *
   * <code>string customer_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getCustomerIdBytes();

  /**
   * <pre>
   * The conversions that are being uploaded.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v1.services.ClickConversion conversions = 2;</code>
   */
  java.util.List<com.google.ads.googleads.v1.services.ClickConversion> 
      getConversionsList();
  /**
   * <pre>
   * The conversions that are being uploaded.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v1.services.ClickConversion conversions = 2;</code>
   */
  com.google.ads.googleads.v1.services.ClickConversion getConversions(int index);
  /**
   * <pre>
   * The conversions that are being uploaded.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v1.services.ClickConversion conversions = 2;</code>
   */
  int getConversionsCount();
  /**
   * <pre>
   * The conversions that are being uploaded.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v1.services.ClickConversion conversions = 2;</code>
   */
  java.util.List<? extends com.google.ads.googleads.v1.services.ClickConversionOrBuilder> 
      getConversionsOrBuilderList();
  /**
   * <pre>
   * The conversions that are being uploaded.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v1.services.ClickConversion conversions = 2;</code>
   */
  com.google.ads.googleads.v1.services.ClickConversionOrBuilder getConversionsOrBuilder(
      int index);

  /**
   * <pre>
   * If true, successful operations will be carried out and invalid
   * operations will return errors. If false, all operations will be carried
   * out in one transaction if and only if they are all valid.
   * This should always be set to true.
   * </pre>
   *
   * <code>bool partial_failure = 3;</code>
   */
  boolean getPartialFailure();

  /**
   * <pre>
   * If true, the request is validated but not executed. Only errors are
   * returned, not results.
   * </pre>
   *
   * <code>bool validate_only = 4;</code>
   */
  boolean getValidateOnly();
}
