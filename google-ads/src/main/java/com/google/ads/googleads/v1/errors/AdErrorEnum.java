// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/errors/ad_error.proto

package com.google.ads.googleads.v1.errors;

/**
 * <pre>
 * Container for enum describing possible ad errors.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.errors.AdErrorEnum}
 */
public  final class AdErrorEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.errors.AdErrorEnum)
    AdErrorEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AdErrorEnum.newBuilder() to construct.
  private AdErrorEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AdErrorEnum() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AdErrorEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.errors.AdErrorProto.internal_static_google_ads_googleads_v1_errors_AdErrorEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.errors.AdErrorProto.internal_static_google_ads_googleads_v1_errors_AdErrorEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.errors.AdErrorEnum.class, com.google.ads.googleads.v1.errors.AdErrorEnum.Builder.class);
  }

  /**
   * <pre>
   * Enum describing possible ad errors.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v1.errors.AdErrorEnum.AdError}
   */
  public enum AdError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * Ad customizers are not supported for ad type.
     * </pre>
     *
     * <code>AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE = 2;</code>
     */
    AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE(2),
    /**
     * <pre>
     * Estimating character sizes the string is too long.
     * </pre>
     *
     * <code>APPROXIMATELY_TOO_LONG = 3;</code>
     */
    APPROXIMATELY_TOO_LONG(3),
    /**
     * <pre>
     * Estimating character sizes the string is too short.
     * </pre>
     *
     * <code>APPROXIMATELY_TOO_SHORT = 4;</code>
     */
    APPROXIMATELY_TOO_SHORT(4),
    /**
     * <pre>
     * There is a problem with the snippet.
     * </pre>
     *
     * <code>BAD_SNIPPET = 5;</code>
     */
    BAD_SNIPPET(5),
    /**
     * <pre>
     * Cannot modify an ad.
     * </pre>
     *
     * <code>CANNOT_MODIFY_AD = 6;</code>
     */
    CANNOT_MODIFY_AD(6),
    /**
     * <pre>
     * business name and url cannot be set at the same time
     * </pre>
     *
     * <code>CANNOT_SET_BUSINESS_NAME_IF_URL_SET = 7;</code>
     */
    CANNOT_SET_BUSINESS_NAME_IF_URL_SET(7),
    /**
     * <pre>
     * The specified field is incompatible with this ad's type or settings.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD = 8;</code>
     */
    CANNOT_SET_FIELD(8),
    /**
     * <pre>
     * Cannot set field when originAdId is set.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET = 9;</code>
     */
    CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET(9),
    /**
     * <pre>
     * Cannot set field when an existing ad id is set for sharing.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING = 10;</code>
     */
    CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING(10),
    /**
     * <pre>
     * Cannot set allowFlexibleColor false if no color is provided by user.
     * </pre>
     *
     * <code>CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE = 11;</code>
     */
    CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE(11),
    /**
     * <pre>
     * When user select native, no color control is allowed because we will
     * always respect publisher color for native format serving.
     * </pre>
     *
     * <code>CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING = 12;</code>
     */
    CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING(12),
    /**
     * <pre>
     * Cannot specify a url for the ad type
     * </pre>
     *
     * <code>CANNOT_SET_URL = 13;</code>
     */
    CANNOT_SET_URL(13),
    /**
     * <pre>
     * Cannot specify a tracking or mobile url without also setting final urls
     * </pre>
     *
     * <code>CANNOT_SET_WITHOUT_FINAL_URLS = 14;</code>
     */
    CANNOT_SET_WITHOUT_FINAL_URLS(14),
    /**
     * <pre>
     * Cannot specify a legacy url and a final url simultaneously
     * </pre>
     *
     * <code>CANNOT_SET_WITH_FINAL_URLS = 15;</code>
     */
    CANNOT_SET_WITH_FINAL_URLS(15),
    /**
     * <pre>
     * Cannot specify a urls in UrlData and in template fields simultaneously.
     * </pre>
     *
     * <code>CANNOT_SET_WITH_URL_DATA = 17;</code>
     */
    CANNOT_SET_WITH_URL_DATA(17),
    /**
     * <pre>
     * This operator cannot be used with a subclass of Ad.
     * </pre>
     *
     * <code>CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR = 18;</code>
     */
    CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR(18),
    /**
     * <pre>
     * Customer is not approved for mobile ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_MOBILEADS = 19;</code>
     */
    CUSTOMER_NOT_APPROVED_MOBILEADS(19),
    /**
     * <pre>
     * Customer is not approved for 3PAS richmedia ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS = 20;</code>
     */
    CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS(20),
    /**
     * <pre>
     * Customer is not approved for 3PAS redirect richmedia (Ad Exchange) ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS = 21;</code>
     */
    CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS(21),
    /**
     * <pre>
     * Not an eligible customer
     * </pre>
     *
     * <code>CUSTOMER_NOT_ELIGIBLE = 22;</code>
     */
    CUSTOMER_NOT_ELIGIBLE(22),
    /**
     * <pre>
     * Customer is not eligible for updating beacon url
     * </pre>
     *
     * <code>CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL = 23;</code>
     */
    CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL(23),
    /**
     * <pre>
     * There already exists an ad with the same dimensions in the union.
     * </pre>
     *
     * <code>DIMENSION_ALREADY_IN_UNION = 24;</code>
     */
    DIMENSION_ALREADY_IN_UNION(24),
    /**
     * <pre>
     * Ad's dimension must be set before setting union dimension.
     * </pre>
     *
     * <code>DIMENSION_MUST_BE_SET = 25;</code>
     */
    DIMENSION_MUST_BE_SET(25),
    /**
     * <pre>
     * Ad's dimension must be included in the union dimensions.
     * </pre>
     *
     * <code>DIMENSION_NOT_IN_UNION = 26;</code>
     */
    DIMENSION_NOT_IN_UNION(26),
    /**
     * <pre>
     * Display Url cannot be specified (applies to Ad Exchange Ads)
     * </pre>
     *
     * <code>DISPLAY_URL_CANNOT_BE_SPECIFIED = 27;</code>
     */
    DISPLAY_URL_CANNOT_BE_SPECIFIED(27),
    /**
     * <pre>
     * Telephone number contains invalid characters or invalid format. Please
     * re-enter your number using digits (0-9), dashes (-), and parentheses
     * only.
     * </pre>
     *
     * <code>DOMESTIC_PHONE_NUMBER_FORMAT = 28;</code>
     */
    DOMESTIC_PHONE_NUMBER_FORMAT(28),
    /**
     * <pre>
     * Emergency telephone numbers are not allowed. Please enter a valid
     * domestic phone number to connect customers to your business.
     * </pre>
     *
     * <code>EMERGENCY_PHONE_NUMBER = 29;</code>
     */
    EMERGENCY_PHONE_NUMBER(29),
    /**
     * <pre>
     * A required field was not specified or is an empty string.
     * </pre>
     *
     * <code>EMPTY_FIELD = 30;</code>
     */
    EMPTY_FIELD(30),
    /**
     * <pre>
     * A feed attribute referenced in an ad customizer tag is not in the ad
     * customizer mapping for the feed.
     * </pre>
     *
     * <code>FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID = 31;</code>
     */
    FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID(31),
    /**
     * <pre>
     * The ad customizer field mapping for the feed attribute does not match the
     * expected field type.
     * </pre>
     *
     * <code>FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH = 32;</code>
     */
    FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH(32),
    /**
     * <pre>
     * The use of ad customizer tags in the ad text is disallowed. Details in
     * trigger.
     * </pre>
     *
     * <code>ILLEGAL_AD_CUSTOMIZER_TAG_USE = 33;</code>
     */
    ILLEGAL_AD_CUSTOMIZER_TAG_USE(33),
    /**
     * <pre>
     * Tags of the form {PH_x}, where x is a number, are disallowed in ad text.
     * </pre>
     *
     * <code>ILLEGAL_TAG_USE = 34;</code>
     */
    ILLEGAL_TAG_USE(34),
    /**
     * <pre>
     * The dimensions of the ad are specified or derived in multiple ways and
     * are not consistent.
     * </pre>
     *
     * <code>INCONSISTENT_DIMENSIONS = 35;</code>
     */
    INCONSISTENT_DIMENSIONS(35),
    /**
     * <pre>
     * The status cannot differ among template ads of the same union.
     * </pre>
     *
     * <code>INCONSISTENT_STATUS_IN_TEMPLATE_UNION = 36;</code>
     */
    INCONSISTENT_STATUS_IN_TEMPLATE_UNION(36),
    /**
     * <pre>
     * The length of the string is not valid.
     * </pre>
     *
     * <code>INCORRECT_LENGTH = 37;</code>
     */
    INCORRECT_LENGTH(37),
    /**
     * <pre>
     * The ad is ineligible for upgrade.
     * </pre>
     *
     * <code>INELIGIBLE_FOR_UPGRADE = 38;</code>
     */
    INELIGIBLE_FOR_UPGRADE(38),
    /**
     * <pre>
     * User cannot create mobile ad for countries targeted in specified
     * campaign.
     * </pre>
     *
     * <code>INVALID_AD_ADDRESS_CAMPAIGN_TARGET = 39;</code>
     */
    INVALID_AD_ADDRESS_CAMPAIGN_TARGET(39),
    /**
     * <pre>
     * Invalid Ad type. A specific type of Ad is required.
     * </pre>
     *
     * <code>INVALID_AD_TYPE = 40;</code>
     */
    INVALID_AD_TYPE(40),
    /**
     * <pre>
     * Headline, description or phone cannot be present when creating mobile
     * image ad.
     * </pre>
     *
     * <code>INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE = 41;</code>
     */
    INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE(41),
    /**
     * <pre>
     * Image cannot be present when creating mobile text ad.
     * </pre>
     *
     * <code>INVALID_ATTRIBUTES_FOR_MOBILE_TEXT = 42;</code>
     */
    INVALID_ATTRIBUTES_FOR_MOBILE_TEXT(42),
    /**
     * <pre>
     * Invalid call to action text.
     * </pre>
     *
     * <code>INVALID_CALL_TO_ACTION_TEXT = 43;</code>
     */
    INVALID_CALL_TO_ACTION_TEXT(43),
    /**
     * <pre>
     * Invalid character in URL.
     * </pre>
     *
     * <code>INVALID_CHARACTER_FOR_URL = 44;</code>
     */
    INVALID_CHARACTER_FOR_URL(44),
    /**
     * <pre>
     * Creative's country code is not valid.
     * </pre>
     *
     * <code>INVALID_COUNTRY_CODE = 45;</code>
     */
    INVALID_COUNTRY_CODE(45),
    /**
     * <pre>
     * Invalid use of Expanded Dynamic Search Ads tags ({lpurl} etc.)
     * </pre>
     *
     * <code>INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG = 47;</code>
     */
    INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG(47),
    /**
     * <pre>
     * An input error whose real reason was not properly mapped (should not
     * happen).
     * </pre>
     *
     * <code>INVALID_INPUT = 48;</code>
     */
    INVALID_INPUT(48),
    /**
     * <pre>
     * An invalid markup language was entered.
     * </pre>
     *
     * <code>INVALID_MARKUP_LANGUAGE = 49;</code>
     */
    INVALID_MARKUP_LANGUAGE(49),
    /**
     * <pre>
     * An invalid mobile carrier was entered.
     * </pre>
     *
     * <code>INVALID_MOBILE_CARRIER = 50;</code>
     */
    INVALID_MOBILE_CARRIER(50),
    /**
     * <pre>
     * Specified mobile carriers target a country not targeted by the campaign.
     * </pre>
     *
     * <code>INVALID_MOBILE_CARRIER_TARGET = 51;</code>
     */
    INVALID_MOBILE_CARRIER_TARGET(51),
    /**
     * <pre>
     * Wrong number of elements for given element type
     * </pre>
     *
     * <code>INVALID_NUMBER_OF_ELEMENTS = 52;</code>
     */
    INVALID_NUMBER_OF_ELEMENTS(52),
    /**
     * <pre>
     * The format of the telephone number is incorrect. Please re-enter the
     * number using the correct format.
     * </pre>
     *
     * <code>INVALID_PHONE_NUMBER_FORMAT = 53;</code>
     */
    INVALID_PHONE_NUMBER_FORMAT(53),
    /**
     * <pre>
     * The certified vendor format id is incorrect.
     * </pre>
     *
     * <code>INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID = 54;</code>
     */
    INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID(54),
    /**
     * <pre>
     * The template ad data contains validation errors.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_DATA = 55;</code>
     */
    INVALID_TEMPLATE_DATA(55),
    /**
     * <pre>
     * The template field doesn't have have the correct type.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_ELEMENT_FIELD_TYPE = 56;</code>
     */
    INVALID_TEMPLATE_ELEMENT_FIELD_TYPE(56),
    /**
     * <pre>
     * Invalid template id.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_ID = 57;</code>
     */
    INVALID_TEMPLATE_ID(57),
    /**
     * <pre>
     * After substituting replacement strings, the line is too wide.
     * </pre>
     *
     * <code>LINE_TOO_WIDE = 58;</code>
     */
    LINE_TOO_WIDE(58),
    /**
     * <pre>
     * The feed referenced must have ad customizer mapping to be used in a
     * customizer tag.
     * </pre>
     *
     * <code>MISSING_AD_CUSTOMIZER_MAPPING = 59;</code>
     */
    MISSING_AD_CUSTOMIZER_MAPPING(59),
    /**
     * <pre>
     * Missing address component in template element address field.
     * </pre>
     *
     * <code>MISSING_ADDRESS_COMPONENT = 60;</code>
     */
    MISSING_ADDRESS_COMPONENT(60),
    /**
     * <pre>
     * An ad name must be entered.
     * </pre>
     *
     * <code>MISSING_ADVERTISEMENT_NAME = 61;</code>
     */
    MISSING_ADVERTISEMENT_NAME(61),
    /**
     * <pre>
     * Business name must be entered.
     * </pre>
     *
     * <code>MISSING_BUSINESS_NAME = 62;</code>
     */
    MISSING_BUSINESS_NAME(62),
    /**
     * <pre>
     * Description (line 2) must be entered.
     * </pre>
     *
     * <code>MISSING_DESCRIPTION1 = 63;</code>
     */
    MISSING_DESCRIPTION1(63),
    /**
     * <pre>
     * Description (line 3) must be entered.
     * </pre>
     *
     * <code>MISSING_DESCRIPTION2 = 64;</code>
     */
    MISSING_DESCRIPTION2(64),
    /**
     * <pre>
     * The destination url must contain at least one tag (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_DESTINATION_URL_TAG = 65;</code>
     */
    MISSING_DESTINATION_URL_TAG(65),
    /**
     * <pre>
     * The tracking url template of ExpandedDynamicSearchAd must contain at
     * least one tag. (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_LANDING_PAGE_URL_TAG = 66;</code>
     */
    MISSING_LANDING_PAGE_URL_TAG(66),
    /**
     * <pre>
     * A valid dimension must be specified for this ad.
     * </pre>
     *
     * <code>MISSING_DIMENSION = 67;</code>
     */
    MISSING_DIMENSION(67),
    /**
     * <pre>
     * A display URL must be entered.
     * </pre>
     *
     * <code>MISSING_DISPLAY_URL = 68;</code>
     */
    MISSING_DISPLAY_URL(68),
    /**
     * <pre>
     * Headline must be entered.
     * </pre>
     *
     * <code>MISSING_HEADLINE = 69;</code>
     */
    MISSING_HEADLINE(69),
    /**
     * <pre>
     * A height must be entered.
     * </pre>
     *
     * <code>MISSING_HEIGHT = 70;</code>
     */
    MISSING_HEIGHT(70),
    /**
     * <pre>
     * An image must be entered.
     * </pre>
     *
     * <code>MISSING_IMAGE = 71;</code>
     */
    MISSING_IMAGE(71),
    /**
     * <pre>
     * Marketing image or product videos are required.
     * </pre>
     *
     * <code>MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS = 72;</code>
     */
    MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS(72),
    /**
     * <pre>
     * The markup language in which your site is written must be entered.
     * </pre>
     *
     * <code>MISSING_MARKUP_LANGUAGES = 73;</code>
     */
    MISSING_MARKUP_LANGUAGES(73),
    /**
     * <pre>
     * A mobile carrier must be entered.
     * </pre>
     *
     * <code>MISSING_MOBILE_CARRIER = 74;</code>
     */
    MISSING_MOBILE_CARRIER(74),
    /**
     * <pre>
     * Phone number must be entered.
     * </pre>
     *
     * <code>MISSING_PHONE = 75;</code>
     */
    MISSING_PHONE(75),
    /**
     * <pre>
     * Missing required template fields
     * </pre>
     *
     * <code>MISSING_REQUIRED_TEMPLATE_FIELDS = 76;</code>
     */
    MISSING_REQUIRED_TEMPLATE_FIELDS(76),
    /**
     * <pre>
     * Missing a required field value
     * </pre>
     *
     * <code>MISSING_TEMPLATE_FIELD_VALUE = 77;</code>
     */
    MISSING_TEMPLATE_FIELD_VALUE(77),
    /**
     * <pre>
     * The ad must have text.
     * </pre>
     *
     * <code>MISSING_TEXT = 78;</code>
     */
    MISSING_TEXT(78),
    /**
     * <pre>
     * A visible URL must be entered.
     * </pre>
     *
     * <code>MISSING_VISIBLE_URL = 79;</code>
     */
    MISSING_VISIBLE_URL(79),
    /**
     * <pre>
     * A width must be entered.
     * </pre>
     *
     * <code>MISSING_WIDTH = 80;</code>
     */
    MISSING_WIDTH(80),
    /**
     * <pre>
     * Only 1 feed can be used as the source of ad customizer substitutions in a
     * single ad.
     * </pre>
     *
     * <code>MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED = 81;</code>
     */
    MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED(81),
    /**
     * <pre>
     * TempAdUnionId must be use when adding template ads.
     * </pre>
     *
     * <code>MUST_USE_TEMP_AD_UNION_ID_ON_ADD = 82;</code>
     */
    MUST_USE_TEMP_AD_UNION_ID_ON_ADD(82),
    /**
     * <pre>
     * The string has too many characters.
     * </pre>
     *
     * <code>TOO_LONG = 83;</code>
     */
    TOO_LONG(83),
    /**
     * <pre>
     * The string has too few characters.
     * </pre>
     *
     * <code>TOO_SHORT = 84;</code>
     */
    TOO_SHORT(84),
    /**
     * <pre>
     * Ad union dimensions cannot change for saved ads.
     * </pre>
     *
     * <code>UNION_DIMENSIONS_CANNOT_CHANGE = 85;</code>
     */
    UNION_DIMENSIONS_CANNOT_CHANGE(85),
    /**
     * <pre>
     * Address component is not {country, lat, lng}.
     * </pre>
     *
     * <code>UNKNOWN_ADDRESS_COMPONENT = 86;</code>
     */
    UNKNOWN_ADDRESS_COMPONENT(86),
    /**
     * <pre>
     * Unknown unique field name
     * </pre>
     *
     * <code>UNKNOWN_FIELD_NAME = 87;</code>
     */
    UNKNOWN_FIELD_NAME(87),
    /**
     * <pre>
     * Unknown unique name (template element type specifier)
     * </pre>
     *
     * <code>UNKNOWN_UNIQUE_NAME = 88;</code>
     */
    UNKNOWN_UNIQUE_NAME(88),
    /**
     * <pre>
     * Unsupported ad dimension
     * </pre>
     *
     * <code>UNSUPPORTED_DIMENSIONS = 89;</code>
     */
    UNSUPPORTED_DIMENSIONS(89),
    /**
     * <pre>
     * URL starts with an invalid scheme.
     * </pre>
     *
     * <code>URL_INVALID_SCHEME = 90;</code>
     */
    URL_INVALID_SCHEME(90),
    /**
     * <pre>
     * URL ends with an invalid top-level domain name.
     * </pre>
     *
     * <code>URL_INVALID_TOP_LEVEL_DOMAIN = 91;</code>
     */
    URL_INVALID_TOP_LEVEL_DOMAIN(91),
    /**
     * <pre>
     * URL contains illegal characters.
     * </pre>
     *
     * <code>URL_MALFORMED = 92;</code>
     */
    URL_MALFORMED(92),
    /**
     * <pre>
     * URL must contain a host name.
     * </pre>
     *
     * <code>URL_NO_HOST = 93;</code>
     */
    URL_NO_HOST(93),
    /**
     * <pre>
     * URL not equivalent during upgrade.
     * </pre>
     *
     * <code>URL_NOT_EQUIVALENT = 94;</code>
     */
    URL_NOT_EQUIVALENT(94),
    /**
     * <pre>
     * URL host name too long to be stored as visible URL (applies to Ad
     * Exchange ads)
     * </pre>
     *
     * <code>URL_HOST_NAME_TOO_LONG = 95;</code>
     */
    URL_HOST_NAME_TOO_LONG(95),
    /**
     * <pre>
     * URL must start with a scheme.
     * </pre>
     *
     * <code>URL_NO_SCHEME = 96;</code>
     */
    URL_NO_SCHEME(96),
    /**
     * <pre>
     * URL should end in a valid domain extension, such as .com or .net.
     * </pre>
     *
     * <code>URL_NO_TOP_LEVEL_DOMAIN = 97;</code>
     */
    URL_NO_TOP_LEVEL_DOMAIN(97),
    /**
     * <pre>
     * URL must not end with a path.
     * </pre>
     *
     * <code>URL_PATH_NOT_ALLOWED = 98;</code>
     */
    URL_PATH_NOT_ALLOWED(98),
    /**
     * <pre>
     * URL must not specify a port.
     * </pre>
     *
     * <code>URL_PORT_NOT_ALLOWED = 99;</code>
     */
    URL_PORT_NOT_ALLOWED(99),
    /**
     * <pre>
     * URL must not contain a query.
     * </pre>
     *
     * <code>URL_QUERY_NOT_ALLOWED = 100;</code>
     */
    URL_QUERY_NOT_ALLOWED(100),
    /**
     * <pre>
     * A url scheme is not allowed in front of tag in tracking url template
     * (e.g. http://{lpurl})
     * </pre>
     *
     * <code>URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG = 102;</code>
     */
    URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG(102),
    /**
     * <pre>
     * The user does not have permissions to create a template ad for the given
     * template.
     * </pre>
     *
     * <code>USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE = 103;</code>
     */
    USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE(103),
    /**
     * <pre>
     * Expandable setting is inconsistent/wrong. For example, an AdX ad is
     * invalid if it has a expandable vendor format but no expanding directions
     * specified, or expanding directions is specified, but the vendor format is
     * not expandable.
     * </pre>
     *
     * <code>INCONSISTENT_EXPANDABLE_SETTINGS = 104;</code>
     */
    INCONSISTENT_EXPANDABLE_SETTINGS(104),
    /**
     * <pre>
     * Format is invalid
     * </pre>
     *
     * <code>INVALID_FORMAT = 105;</code>
     */
    INVALID_FORMAT(105),
    /**
     * <pre>
     * The text of this field did not match a pattern of allowed values.
     * </pre>
     *
     * <code>INVALID_FIELD_TEXT = 106;</code>
     */
    INVALID_FIELD_TEXT(106),
    /**
     * <pre>
     * Template element is mising
     * </pre>
     *
     * <code>ELEMENT_NOT_PRESENT = 107;</code>
     */
    ELEMENT_NOT_PRESENT(107),
    /**
     * <pre>
     * Error occurred during image processing
     * </pre>
     *
     * <code>IMAGE_ERROR = 108;</code>
     */
    IMAGE_ERROR(108),
    /**
     * <pre>
     * The value is not within the valid range
     * </pre>
     *
     * <code>VALUE_NOT_IN_RANGE = 109;</code>
     */
    VALUE_NOT_IN_RANGE(109),
    /**
     * <pre>
     * Template element field is not present
     * </pre>
     *
     * <code>FIELD_NOT_PRESENT = 110;</code>
     */
    FIELD_NOT_PRESENT(110),
    /**
     * <pre>
     * Address is incomplete
     * </pre>
     *
     * <code>ADDRESS_NOT_COMPLETE = 111;</code>
     */
    ADDRESS_NOT_COMPLETE(111),
    /**
     * <pre>
     * Invalid address
     * </pre>
     *
     * <code>ADDRESS_INVALID = 112;</code>
     */
    ADDRESS_INVALID(112),
    /**
     * <pre>
     * Error retrieving specified video
     * </pre>
     *
     * <code>VIDEO_RETRIEVAL_ERROR = 113;</code>
     */
    VIDEO_RETRIEVAL_ERROR(113),
    /**
     * <pre>
     * Error processing audio
     * </pre>
     *
     * <code>AUDIO_ERROR = 114;</code>
     */
    AUDIO_ERROR(114),
    /**
     * <pre>
     * Display URL is incorrect for YouTube PYV ads
     * </pre>
     *
     * <code>INVALID_YOUTUBE_DISPLAY_URL = 115;</code>
     */
    INVALID_YOUTUBE_DISPLAY_URL(115),
    /**
     * <pre>
     * Too many product Images in GmailAd
     * </pre>
     *
     * <code>TOO_MANY_PRODUCT_IMAGES = 116;</code>
     */
    TOO_MANY_PRODUCT_IMAGES(116),
    /**
     * <pre>
     * Too many product Videos in GmailAd
     * </pre>
     *
     * <code>TOO_MANY_PRODUCT_VIDEOS = 117;</code>
     */
    TOO_MANY_PRODUCT_VIDEOS(117),
    /**
     * <pre>
     * The device preference is not compatible with the ad type
     * </pre>
     *
     * <code>INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE = 118;</code>
     */
    INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE(118),
    /**
     * <pre>
     * Call tracking is not supported for specified country.
     * </pre>
     *
     * <code>CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY = 119;</code>
     */
    CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY(119),
    /**
     * <pre>
     * Carrier specific short number is not allowed.
     * </pre>
     *
     * <code>CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED = 120;</code>
     */
    CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED(120),
    /**
     * <pre>
     * Specified phone number type is disallowed.
     * </pre>
     *
     * <code>DISALLOWED_NUMBER_TYPE = 121;</code>
     */
    DISALLOWED_NUMBER_TYPE(121),
    /**
     * <pre>
     * Phone number not supported for country.
     * </pre>
     *
     * <code>PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY = 122;</code>
     */
    PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY(122),
    /**
     * <pre>
     * Phone number not supported with call tracking enabled for country.
     * </pre>
     *
     * <code>PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY = 123;</code>
     */
    PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY(123),
    /**
     * <pre>
     * Premium rate phone number is not allowed.
     * </pre>
     *
     * <code>PREMIUM_RATE_NUMBER_NOT_ALLOWED = 124;</code>
     */
    PREMIUM_RATE_NUMBER_NOT_ALLOWED(124),
    /**
     * <pre>
     * Vanity phone number is not allowed.
     * </pre>
     *
     * <code>VANITY_PHONE_NUMBER_NOT_ALLOWED = 125;</code>
     */
    VANITY_PHONE_NUMBER_NOT_ALLOWED(125),
    /**
     * <pre>
     * Invalid call conversion type id.
     * </pre>
     *
     * <code>INVALID_CALL_CONVERSION_TYPE_ID = 126;</code>
     */
    INVALID_CALL_CONVERSION_TYPE_ID(126),
    /**
     * <pre>
     * Cannot disable call conversion and set conversion type id.
     * </pre>
     *
     * <code>CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID = 127;</code>
     */
    CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID(127),
    /**
     * <pre>
     * Cannot set path2 without path1.
     * </pre>
     *
     * <code>CANNOT_SET_PATH2_WITHOUT_PATH1 = 128;</code>
     */
    CANNOT_SET_PATH2_WITHOUT_PATH1(128),
    /**
     * <pre>
     * Missing domain name in campaign setting when adding expanded dynamic
     * search ad.
     * </pre>
     *
     * <code>MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME = 129;</code>
     */
    MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME(129),
    /**
     * <pre>
     * The associated ad is not compatible with restriction type.
     * </pre>
     *
     * <code>INCOMPATIBLE_WITH_RESTRICTION_TYPE = 130;</code>
     */
    INCOMPATIBLE_WITH_RESTRICTION_TYPE(130),
    /**
     * <pre>
     * Consent for call recording is required for creating/updating call only
     * ads. Please see https://support.google.com/google-ads/answer/7412639.
     * </pre>
     *
     * <code>CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED = 131;</code>
     */
    CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED(131),
    /**
     * <pre>
     * Either an image or a media bundle is required in a display upload ad.
     * </pre>
     *
     * <code>MISSING_IMAGE_OR_MEDIA_BUNDLE = 132;</code>
     */
    MISSING_IMAGE_OR_MEDIA_BUNDLE(132),
    /**
     * <pre>
     * The display upload product type is not supported in this campaign.
     * </pre>
     *
     * <code>PRODUCT_TYPE_NOT_SUPPORTED_IN_THIS_CAMPAIGN = 133;</code>
     */
    PRODUCT_TYPE_NOT_SUPPORTED_IN_THIS_CAMPAIGN(133),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * Ad customizers are not supported for ad type.
     * </pre>
     *
     * <code>AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE = 2;</code>
     */
    public static final int AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE_VALUE = 2;
    /**
     * <pre>
     * Estimating character sizes the string is too long.
     * </pre>
     *
     * <code>APPROXIMATELY_TOO_LONG = 3;</code>
     */
    public static final int APPROXIMATELY_TOO_LONG_VALUE = 3;
    /**
     * <pre>
     * Estimating character sizes the string is too short.
     * </pre>
     *
     * <code>APPROXIMATELY_TOO_SHORT = 4;</code>
     */
    public static final int APPROXIMATELY_TOO_SHORT_VALUE = 4;
    /**
     * <pre>
     * There is a problem with the snippet.
     * </pre>
     *
     * <code>BAD_SNIPPET = 5;</code>
     */
    public static final int BAD_SNIPPET_VALUE = 5;
    /**
     * <pre>
     * Cannot modify an ad.
     * </pre>
     *
     * <code>CANNOT_MODIFY_AD = 6;</code>
     */
    public static final int CANNOT_MODIFY_AD_VALUE = 6;
    /**
     * <pre>
     * business name and url cannot be set at the same time
     * </pre>
     *
     * <code>CANNOT_SET_BUSINESS_NAME_IF_URL_SET = 7;</code>
     */
    public static final int CANNOT_SET_BUSINESS_NAME_IF_URL_SET_VALUE = 7;
    /**
     * <pre>
     * The specified field is incompatible with this ad's type or settings.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD = 8;</code>
     */
    public static final int CANNOT_SET_FIELD_VALUE = 8;
    /**
     * <pre>
     * Cannot set field when originAdId is set.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET = 9;</code>
     */
    public static final int CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET_VALUE = 9;
    /**
     * <pre>
     * Cannot set field when an existing ad id is set for sharing.
     * </pre>
     *
     * <code>CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING = 10;</code>
     */
    public static final int CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING_VALUE = 10;
    /**
     * <pre>
     * Cannot set allowFlexibleColor false if no color is provided by user.
     * </pre>
     *
     * <code>CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE = 11;</code>
     */
    public static final int CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE_VALUE = 11;
    /**
     * <pre>
     * When user select native, no color control is allowed because we will
     * always respect publisher color for native format serving.
     * </pre>
     *
     * <code>CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING = 12;</code>
     */
    public static final int CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING_VALUE = 12;
    /**
     * <pre>
     * Cannot specify a url for the ad type
     * </pre>
     *
     * <code>CANNOT_SET_URL = 13;</code>
     */
    public static final int CANNOT_SET_URL_VALUE = 13;
    /**
     * <pre>
     * Cannot specify a tracking or mobile url without also setting final urls
     * </pre>
     *
     * <code>CANNOT_SET_WITHOUT_FINAL_URLS = 14;</code>
     */
    public static final int CANNOT_SET_WITHOUT_FINAL_URLS_VALUE = 14;
    /**
     * <pre>
     * Cannot specify a legacy url and a final url simultaneously
     * </pre>
     *
     * <code>CANNOT_SET_WITH_FINAL_URLS = 15;</code>
     */
    public static final int CANNOT_SET_WITH_FINAL_URLS_VALUE = 15;
    /**
     * <pre>
     * Cannot specify a urls in UrlData and in template fields simultaneously.
     * </pre>
     *
     * <code>CANNOT_SET_WITH_URL_DATA = 17;</code>
     */
    public static final int CANNOT_SET_WITH_URL_DATA_VALUE = 17;
    /**
     * <pre>
     * This operator cannot be used with a subclass of Ad.
     * </pre>
     *
     * <code>CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR = 18;</code>
     */
    public static final int CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR_VALUE = 18;
    /**
     * <pre>
     * Customer is not approved for mobile ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_MOBILEADS = 19;</code>
     */
    public static final int CUSTOMER_NOT_APPROVED_MOBILEADS_VALUE = 19;
    /**
     * <pre>
     * Customer is not approved for 3PAS richmedia ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS = 20;</code>
     */
    public static final int CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS_VALUE = 20;
    /**
     * <pre>
     * Customer is not approved for 3PAS redirect richmedia (Ad Exchange) ads.
     * </pre>
     *
     * <code>CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS = 21;</code>
     */
    public static final int CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS_VALUE = 21;
    /**
     * <pre>
     * Not an eligible customer
     * </pre>
     *
     * <code>CUSTOMER_NOT_ELIGIBLE = 22;</code>
     */
    public static final int CUSTOMER_NOT_ELIGIBLE_VALUE = 22;
    /**
     * <pre>
     * Customer is not eligible for updating beacon url
     * </pre>
     *
     * <code>CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL = 23;</code>
     */
    public static final int CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL_VALUE = 23;
    /**
     * <pre>
     * There already exists an ad with the same dimensions in the union.
     * </pre>
     *
     * <code>DIMENSION_ALREADY_IN_UNION = 24;</code>
     */
    public static final int DIMENSION_ALREADY_IN_UNION_VALUE = 24;
    /**
     * <pre>
     * Ad's dimension must be set before setting union dimension.
     * </pre>
     *
     * <code>DIMENSION_MUST_BE_SET = 25;</code>
     */
    public static final int DIMENSION_MUST_BE_SET_VALUE = 25;
    /**
     * <pre>
     * Ad's dimension must be included in the union dimensions.
     * </pre>
     *
     * <code>DIMENSION_NOT_IN_UNION = 26;</code>
     */
    public static final int DIMENSION_NOT_IN_UNION_VALUE = 26;
    /**
     * <pre>
     * Display Url cannot be specified (applies to Ad Exchange Ads)
     * </pre>
     *
     * <code>DISPLAY_URL_CANNOT_BE_SPECIFIED = 27;</code>
     */
    public static final int DISPLAY_URL_CANNOT_BE_SPECIFIED_VALUE = 27;
    /**
     * <pre>
     * Telephone number contains invalid characters or invalid format. Please
     * re-enter your number using digits (0-9), dashes (-), and parentheses
     * only.
     * </pre>
     *
     * <code>DOMESTIC_PHONE_NUMBER_FORMAT = 28;</code>
     */
    public static final int DOMESTIC_PHONE_NUMBER_FORMAT_VALUE = 28;
    /**
     * <pre>
     * Emergency telephone numbers are not allowed. Please enter a valid
     * domestic phone number to connect customers to your business.
     * </pre>
     *
     * <code>EMERGENCY_PHONE_NUMBER = 29;</code>
     */
    public static final int EMERGENCY_PHONE_NUMBER_VALUE = 29;
    /**
     * <pre>
     * A required field was not specified or is an empty string.
     * </pre>
     *
     * <code>EMPTY_FIELD = 30;</code>
     */
    public static final int EMPTY_FIELD_VALUE = 30;
    /**
     * <pre>
     * A feed attribute referenced in an ad customizer tag is not in the ad
     * customizer mapping for the feed.
     * </pre>
     *
     * <code>FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID = 31;</code>
     */
    public static final int FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID_VALUE = 31;
    /**
     * <pre>
     * The ad customizer field mapping for the feed attribute does not match the
     * expected field type.
     * </pre>
     *
     * <code>FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH = 32;</code>
     */
    public static final int FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH_VALUE = 32;
    /**
     * <pre>
     * The use of ad customizer tags in the ad text is disallowed. Details in
     * trigger.
     * </pre>
     *
     * <code>ILLEGAL_AD_CUSTOMIZER_TAG_USE = 33;</code>
     */
    public static final int ILLEGAL_AD_CUSTOMIZER_TAG_USE_VALUE = 33;
    /**
     * <pre>
     * Tags of the form {PH_x}, where x is a number, are disallowed in ad text.
     * </pre>
     *
     * <code>ILLEGAL_TAG_USE = 34;</code>
     */
    public static final int ILLEGAL_TAG_USE_VALUE = 34;
    /**
     * <pre>
     * The dimensions of the ad are specified or derived in multiple ways and
     * are not consistent.
     * </pre>
     *
     * <code>INCONSISTENT_DIMENSIONS = 35;</code>
     */
    public static final int INCONSISTENT_DIMENSIONS_VALUE = 35;
    /**
     * <pre>
     * The status cannot differ among template ads of the same union.
     * </pre>
     *
     * <code>INCONSISTENT_STATUS_IN_TEMPLATE_UNION = 36;</code>
     */
    public static final int INCONSISTENT_STATUS_IN_TEMPLATE_UNION_VALUE = 36;
    /**
     * <pre>
     * The length of the string is not valid.
     * </pre>
     *
     * <code>INCORRECT_LENGTH = 37;</code>
     */
    public static final int INCORRECT_LENGTH_VALUE = 37;
    /**
     * <pre>
     * The ad is ineligible for upgrade.
     * </pre>
     *
     * <code>INELIGIBLE_FOR_UPGRADE = 38;</code>
     */
    public static final int INELIGIBLE_FOR_UPGRADE_VALUE = 38;
    /**
     * <pre>
     * User cannot create mobile ad for countries targeted in specified
     * campaign.
     * </pre>
     *
     * <code>INVALID_AD_ADDRESS_CAMPAIGN_TARGET = 39;</code>
     */
    public static final int INVALID_AD_ADDRESS_CAMPAIGN_TARGET_VALUE = 39;
    /**
     * <pre>
     * Invalid Ad type. A specific type of Ad is required.
     * </pre>
     *
     * <code>INVALID_AD_TYPE = 40;</code>
     */
    public static final int INVALID_AD_TYPE_VALUE = 40;
    /**
     * <pre>
     * Headline, description or phone cannot be present when creating mobile
     * image ad.
     * </pre>
     *
     * <code>INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE = 41;</code>
     */
    public static final int INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE_VALUE = 41;
    /**
     * <pre>
     * Image cannot be present when creating mobile text ad.
     * </pre>
     *
     * <code>INVALID_ATTRIBUTES_FOR_MOBILE_TEXT = 42;</code>
     */
    public static final int INVALID_ATTRIBUTES_FOR_MOBILE_TEXT_VALUE = 42;
    /**
     * <pre>
     * Invalid call to action text.
     * </pre>
     *
     * <code>INVALID_CALL_TO_ACTION_TEXT = 43;</code>
     */
    public static final int INVALID_CALL_TO_ACTION_TEXT_VALUE = 43;
    /**
     * <pre>
     * Invalid character in URL.
     * </pre>
     *
     * <code>INVALID_CHARACTER_FOR_URL = 44;</code>
     */
    public static final int INVALID_CHARACTER_FOR_URL_VALUE = 44;
    /**
     * <pre>
     * Creative's country code is not valid.
     * </pre>
     *
     * <code>INVALID_COUNTRY_CODE = 45;</code>
     */
    public static final int INVALID_COUNTRY_CODE_VALUE = 45;
    /**
     * <pre>
     * Invalid use of Expanded Dynamic Search Ads tags ({lpurl} etc.)
     * </pre>
     *
     * <code>INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG = 47;</code>
     */
    public static final int INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG_VALUE = 47;
    /**
     * <pre>
     * An input error whose real reason was not properly mapped (should not
     * happen).
     * </pre>
     *
     * <code>INVALID_INPUT = 48;</code>
     */
    public static final int INVALID_INPUT_VALUE = 48;
    /**
     * <pre>
     * An invalid markup language was entered.
     * </pre>
     *
     * <code>INVALID_MARKUP_LANGUAGE = 49;</code>
     */
    public static final int INVALID_MARKUP_LANGUAGE_VALUE = 49;
    /**
     * <pre>
     * An invalid mobile carrier was entered.
     * </pre>
     *
     * <code>INVALID_MOBILE_CARRIER = 50;</code>
     */
    public static final int INVALID_MOBILE_CARRIER_VALUE = 50;
    /**
     * <pre>
     * Specified mobile carriers target a country not targeted by the campaign.
     * </pre>
     *
     * <code>INVALID_MOBILE_CARRIER_TARGET = 51;</code>
     */
    public static final int INVALID_MOBILE_CARRIER_TARGET_VALUE = 51;
    /**
     * <pre>
     * Wrong number of elements for given element type
     * </pre>
     *
     * <code>INVALID_NUMBER_OF_ELEMENTS = 52;</code>
     */
    public static final int INVALID_NUMBER_OF_ELEMENTS_VALUE = 52;
    /**
     * <pre>
     * The format of the telephone number is incorrect. Please re-enter the
     * number using the correct format.
     * </pre>
     *
     * <code>INVALID_PHONE_NUMBER_FORMAT = 53;</code>
     */
    public static final int INVALID_PHONE_NUMBER_FORMAT_VALUE = 53;
    /**
     * <pre>
     * The certified vendor format id is incorrect.
     * </pre>
     *
     * <code>INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID = 54;</code>
     */
    public static final int INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID_VALUE = 54;
    /**
     * <pre>
     * The template ad data contains validation errors.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_DATA = 55;</code>
     */
    public static final int INVALID_TEMPLATE_DATA_VALUE = 55;
    /**
     * <pre>
     * The template field doesn't have have the correct type.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_ELEMENT_FIELD_TYPE = 56;</code>
     */
    public static final int INVALID_TEMPLATE_ELEMENT_FIELD_TYPE_VALUE = 56;
    /**
     * <pre>
     * Invalid template id.
     * </pre>
     *
     * <code>INVALID_TEMPLATE_ID = 57;</code>
     */
    public static final int INVALID_TEMPLATE_ID_VALUE = 57;
    /**
     * <pre>
     * After substituting replacement strings, the line is too wide.
     * </pre>
     *
     * <code>LINE_TOO_WIDE = 58;</code>
     */
    public static final int LINE_TOO_WIDE_VALUE = 58;
    /**
     * <pre>
     * The feed referenced must have ad customizer mapping to be used in a
     * customizer tag.
     * </pre>
     *
     * <code>MISSING_AD_CUSTOMIZER_MAPPING = 59;</code>
     */
    public static final int MISSING_AD_CUSTOMIZER_MAPPING_VALUE = 59;
    /**
     * <pre>
     * Missing address component in template element address field.
     * </pre>
     *
     * <code>MISSING_ADDRESS_COMPONENT = 60;</code>
     */
    public static final int MISSING_ADDRESS_COMPONENT_VALUE = 60;
    /**
     * <pre>
     * An ad name must be entered.
     * </pre>
     *
     * <code>MISSING_ADVERTISEMENT_NAME = 61;</code>
     */
    public static final int MISSING_ADVERTISEMENT_NAME_VALUE = 61;
    /**
     * <pre>
     * Business name must be entered.
     * </pre>
     *
     * <code>MISSING_BUSINESS_NAME = 62;</code>
     */
    public static final int MISSING_BUSINESS_NAME_VALUE = 62;
    /**
     * <pre>
     * Description (line 2) must be entered.
     * </pre>
     *
     * <code>MISSING_DESCRIPTION1 = 63;</code>
     */
    public static final int MISSING_DESCRIPTION1_VALUE = 63;
    /**
     * <pre>
     * Description (line 3) must be entered.
     * </pre>
     *
     * <code>MISSING_DESCRIPTION2 = 64;</code>
     */
    public static final int MISSING_DESCRIPTION2_VALUE = 64;
    /**
     * <pre>
     * The destination url must contain at least one tag (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_DESTINATION_URL_TAG = 65;</code>
     */
    public static final int MISSING_DESTINATION_URL_TAG_VALUE = 65;
    /**
     * <pre>
     * The tracking url template of ExpandedDynamicSearchAd must contain at
     * least one tag. (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_LANDING_PAGE_URL_TAG = 66;</code>
     */
    public static final int MISSING_LANDING_PAGE_URL_TAG_VALUE = 66;
    /**
     * <pre>
     * A valid dimension must be specified for this ad.
     * </pre>
     *
     * <code>MISSING_DIMENSION = 67;</code>
     */
    public static final int MISSING_DIMENSION_VALUE = 67;
    /**
     * <pre>
     * A display URL must be entered.
     * </pre>
     *
     * <code>MISSING_DISPLAY_URL = 68;</code>
     */
    public static final int MISSING_DISPLAY_URL_VALUE = 68;
    /**
     * <pre>
     * Headline must be entered.
     * </pre>
     *
     * <code>MISSING_HEADLINE = 69;</code>
     */
    public static final int MISSING_HEADLINE_VALUE = 69;
    /**
     * <pre>
     * A height must be entered.
     * </pre>
     *
     * <code>MISSING_HEIGHT = 70;</code>
     */
    public static final int MISSING_HEIGHT_VALUE = 70;
    /**
     * <pre>
     * An image must be entered.
     * </pre>
     *
     * <code>MISSING_IMAGE = 71;</code>
     */
    public static final int MISSING_IMAGE_VALUE = 71;
    /**
     * <pre>
     * Marketing image or product videos are required.
     * </pre>
     *
     * <code>MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS = 72;</code>
     */
    public static final int MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS_VALUE = 72;
    /**
     * <pre>
     * The markup language in which your site is written must be entered.
     * </pre>
     *
     * <code>MISSING_MARKUP_LANGUAGES = 73;</code>
     */
    public static final int MISSING_MARKUP_LANGUAGES_VALUE = 73;
    /**
     * <pre>
     * A mobile carrier must be entered.
     * </pre>
     *
     * <code>MISSING_MOBILE_CARRIER = 74;</code>
     */
    public static final int MISSING_MOBILE_CARRIER_VALUE = 74;
    /**
     * <pre>
     * Phone number must be entered.
     * </pre>
     *
     * <code>MISSING_PHONE = 75;</code>
     */
    public static final int MISSING_PHONE_VALUE = 75;
    /**
     * <pre>
     * Missing required template fields
     * </pre>
     *
     * <code>MISSING_REQUIRED_TEMPLATE_FIELDS = 76;</code>
     */
    public static final int MISSING_REQUIRED_TEMPLATE_FIELDS_VALUE = 76;
    /**
     * <pre>
     * Missing a required field value
     * </pre>
     *
     * <code>MISSING_TEMPLATE_FIELD_VALUE = 77;</code>
     */
    public static final int MISSING_TEMPLATE_FIELD_VALUE_VALUE = 77;
    /**
     * <pre>
     * The ad must have text.
     * </pre>
     *
     * <code>MISSING_TEXT = 78;</code>
     */
    public static final int MISSING_TEXT_VALUE = 78;
    /**
     * <pre>
     * A visible URL must be entered.
     * </pre>
     *
     * <code>MISSING_VISIBLE_URL = 79;</code>
     */
    public static final int MISSING_VISIBLE_URL_VALUE = 79;
    /**
     * <pre>
     * A width must be entered.
     * </pre>
     *
     * <code>MISSING_WIDTH = 80;</code>
     */
    public static final int MISSING_WIDTH_VALUE = 80;
    /**
     * <pre>
     * Only 1 feed can be used as the source of ad customizer substitutions in a
     * single ad.
     * </pre>
     *
     * <code>MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED = 81;</code>
     */
    public static final int MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED_VALUE = 81;
    /**
     * <pre>
     * TempAdUnionId must be use when adding template ads.
     * </pre>
     *
     * <code>MUST_USE_TEMP_AD_UNION_ID_ON_ADD = 82;</code>
     */
    public static final int MUST_USE_TEMP_AD_UNION_ID_ON_ADD_VALUE = 82;
    /**
     * <pre>
     * The string has too many characters.
     * </pre>
     *
     * <code>TOO_LONG = 83;</code>
     */
    public static final int TOO_LONG_VALUE = 83;
    /**
     * <pre>
     * The string has too few characters.
     * </pre>
     *
     * <code>TOO_SHORT = 84;</code>
     */
    public static final int TOO_SHORT_VALUE = 84;
    /**
     * <pre>
     * Ad union dimensions cannot change for saved ads.
     * </pre>
     *
     * <code>UNION_DIMENSIONS_CANNOT_CHANGE = 85;</code>
     */
    public static final int UNION_DIMENSIONS_CANNOT_CHANGE_VALUE = 85;
    /**
     * <pre>
     * Address component is not {country, lat, lng}.
     * </pre>
     *
     * <code>UNKNOWN_ADDRESS_COMPONENT = 86;</code>
     */
    public static final int UNKNOWN_ADDRESS_COMPONENT_VALUE = 86;
    /**
     * <pre>
     * Unknown unique field name
     * </pre>
     *
     * <code>UNKNOWN_FIELD_NAME = 87;</code>
     */
    public static final int UNKNOWN_FIELD_NAME_VALUE = 87;
    /**
     * <pre>
     * Unknown unique name (template element type specifier)
     * </pre>
     *
     * <code>UNKNOWN_UNIQUE_NAME = 88;</code>
     */
    public static final int UNKNOWN_UNIQUE_NAME_VALUE = 88;
    /**
     * <pre>
     * Unsupported ad dimension
     * </pre>
     *
     * <code>UNSUPPORTED_DIMENSIONS = 89;</code>
     */
    public static final int UNSUPPORTED_DIMENSIONS_VALUE = 89;
    /**
     * <pre>
     * URL starts with an invalid scheme.
     * </pre>
     *
     * <code>URL_INVALID_SCHEME = 90;</code>
     */
    public static final int URL_INVALID_SCHEME_VALUE = 90;
    /**
     * <pre>
     * URL ends with an invalid top-level domain name.
     * </pre>
     *
     * <code>URL_INVALID_TOP_LEVEL_DOMAIN = 91;</code>
     */
    public static final int URL_INVALID_TOP_LEVEL_DOMAIN_VALUE = 91;
    /**
     * <pre>
     * URL contains illegal characters.
     * </pre>
     *
     * <code>URL_MALFORMED = 92;</code>
     */
    public static final int URL_MALFORMED_VALUE = 92;
    /**
     * <pre>
     * URL must contain a host name.
     * </pre>
     *
     * <code>URL_NO_HOST = 93;</code>
     */
    public static final int URL_NO_HOST_VALUE = 93;
    /**
     * <pre>
     * URL not equivalent during upgrade.
     * </pre>
     *
     * <code>URL_NOT_EQUIVALENT = 94;</code>
     */
    public static final int URL_NOT_EQUIVALENT_VALUE = 94;
    /**
     * <pre>
     * URL host name too long to be stored as visible URL (applies to Ad
     * Exchange ads)
     * </pre>
     *
     * <code>URL_HOST_NAME_TOO_LONG = 95;</code>
     */
    public static final int URL_HOST_NAME_TOO_LONG_VALUE = 95;
    /**
     * <pre>
     * URL must start with a scheme.
     * </pre>
     *
     * <code>URL_NO_SCHEME = 96;</code>
     */
    public static final int URL_NO_SCHEME_VALUE = 96;
    /**
     * <pre>
     * URL should end in a valid domain extension, such as .com or .net.
     * </pre>
     *
     * <code>URL_NO_TOP_LEVEL_DOMAIN = 97;</code>
     */
    public static final int URL_NO_TOP_LEVEL_DOMAIN_VALUE = 97;
    /**
     * <pre>
     * URL must not end with a path.
     * </pre>
     *
     * <code>URL_PATH_NOT_ALLOWED = 98;</code>
     */
    public static final int URL_PATH_NOT_ALLOWED_VALUE = 98;
    /**
     * <pre>
     * URL must not specify a port.
     * </pre>
     *
     * <code>URL_PORT_NOT_ALLOWED = 99;</code>
     */
    public static final int URL_PORT_NOT_ALLOWED_VALUE = 99;
    /**
     * <pre>
     * URL must not contain a query.
     * </pre>
     *
     * <code>URL_QUERY_NOT_ALLOWED = 100;</code>
     */
    public static final int URL_QUERY_NOT_ALLOWED_VALUE = 100;
    /**
     * <pre>
     * A url scheme is not allowed in front of tag in tracking url template
     * (e.g. http://{lpurl})
     * </pre>
     *
     * <code>URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG = 102;</code>
     */
    public static final int URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG_VALUE = 102;
    /**
     * <pre>
     * The user does not have permissions to create a template ad for the given
     * template.
     * </pre>
     *
     * <code>USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE = 103;</code>
     */
    public static final int USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE_VALUE = 103;
    /**
     * <pre>
     * Expandable setting is inconsistent/wrong. For example, an AdX ad is
     * invalid if it has a expandable vendor format but no expanding directions
     * specified, or expanding directions is specified, but the vendor format is
     * not expandable.
     * </pre>
     *
     * <code>INCONSISTENT_EXPANDABLE_SETTINGS = 104;</code>
     */
    public static final int INCONSISTENT_EXPANDABLE_SETTINGS_VALUE = 104;
    /**
     * <pre>
     * Format is invalid
     * </pre>
     *
     * <code>INVALID_FORMAT = 105;</code>
     */
    public static final int INVALID_FORMAT_VALUE = 105;
    /**
     * <pre>
     * The text of this field did not match a pattern of allowed values.
     * </pre>
     *
     * <code>INVALID_FIELD_TEXT = 106;</code>
     */
    public static final int INVALID_FIELD_TEXT_VALUE = 106;
    /**
     * <pre>
     * Template element is mising
     * </pre>
     *
     * <code>ELEMENT_NOT_PRESENT = 107;</code>
     */
    public static final int ELEMENT_NOT_PRESENT_VALUE = 107;
    /**
     * <pre>
     * Error occurred during image processing
     * </pre>
     *
     * <code>IMAGE_ERROR = 108;</code>
     */
    public static final int IMAGE_ERROR_VALUE = 108;
    /**
     * <pre>
     * The value is not within the valid range
     * </pre>
     *
     * <code>VALUE_NOT_IN_RANGE = 109;</code>
     */
    public static final int VALUE_NOT_IN_RANGE_VALUE = 109;
    /**
     * <pre>
     * Template element field is not present
     * </pre>
     *
     * <code>FIELD_NOT_PRESENT = 110;</code>
     */
    public static final int FIELD_NOT_PRESENT_VALUE = 110;
    /**
     * <pre>
     * Address is incomplete
     * </pre>
     *
     * <code>ADDRESS_NOT_COMPLETE = 111;</code>
     */
    public static final int ADDRESS_NOT_COMPLETE_VALUE = 111;
    /**
     * <pre>
     * Invalid address
     * </pre>
     *
     * <code>ADDRESS_INVALID = 112;</code>
     */
    public static final int ADDRESS_INVALID_VALUE = 112;
    /**
     * <pre>
     * Error retrieving specified video
     * </pre>
     *
     * <code>VIDEO_RETRIEVAL_ERROR = 113;</code>
     */
    public static final int VIDEO_RETRIEVAL_ERROR_VALUE = 113;
    /**
     * <pre>
     * Error processing audio
     * </pre>
     *
     * <code>AUDIO_ERROR = 114;</code>
     */
    public static final int AUDIO_ERROR_VALUE = 114;
    /**
     * <pre>
     * Display URL is incorrect for YouTube PYV ads
     * </pre>
     *
     * <code>INVALID_YOUTUBE_DISPLAY_URL = 115;</code>
     */
    public static final int INVALID_YOUTUBE_DISPLAY_URL_VALUE = 115;
    /**
     * <pre>
     * Too many product Images in GmailAd
     * </pre>
     *
     * <code>TOO_MANY_PRODUCT_IMAGES = 116;</code>
     */
    public static final int TOO_MANY_PRODUCT_IMAGES_VALUE = 116;
    /**
     * <pre>
     * Too many product Videos in GmailAd
     * </pre>
     *
     * <code>TOO_MANY_PRODUCT_VIDEOS = 117;</code>
     */
    public static final int TOO_MANY_PRODUCT_VIDEOS_VALUE = 117;
    /**
     * <pre>
     * The device preference is not compatible with the ad type
     * </pre>
     *
     * <code>INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE = 118;</code>
     */
    public static final int INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE_VALUE = 118;
    /**
     * <pre>
     * Call tracking is not supported for specified country.
     * </pre>
     *
     * <code>CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY = 119;</code>
     */
    public static final int CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY_VALUE = 119;
    /**
     * <pre>
     * Carrier specific short number is not allowed.
     * </pre>
     *
     * <code>CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED = 120;</code>
     */
    public static final int CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED_VALUE = 120;
    /**
     * <pre>
     * Specified phone number type is disallowed.
     * </pre>
     *
     * <code>DISALLOWED_NUMBER_TYPE = 121;</code>
     */
    public static final int DISALLOWED_NUMBER_TYPE_VALUE = 121;
    /**
     * <pre>
     * Phone number not supported for country.
     * </pre>
     *
     * <code>PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY = 122;</code>
     */
    public static final int PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY_VALUE = 122;
    /**
     * <pre>
     * Phone number not supported with call tracking enabled for country.
     * </pre>
     *
     * <code>PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY = 123;</code>
     */
    public static final int PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY_VALUE = 123;
    /**
     * <pre>
     * Premium rate phone number is not allowed.
     * </pre>
     *
     * <code>PREMIUM_RATE_NUMBER_NOT_ALLOWED = 124;</code>
     */
    public static final int PREMIUM_RATE_NUMBER_NOT_ALLOWED_VALUE = 124;
    /**
     * <pre>
     * Vanity phone number is not allowed.
     * </pre>
     *
     * <code>VANITY_PHONE_NUMBER_NOT_ALLOWED = 125;</code>
     */
    public static final int VANITY_PHONE_NUMBER_NOT_ALLOWED_VALUE = 125;
    /**
     * <pre>
     * Invalid call conversion type id.
     * </pre>
     *
     * <code>INVALID_CALL_CONVERSION_TYPE_ID = 126;</code>
     */
    public static final int INVALID_CALL_CONVERSION_TYPE_ID_VALUE = 126;
    /**
     * <pre>
     * Cannot disable call conversion and set conversion type id.
     * </pre>
     *
     * <code>CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID = 127;</code>
     */
    public static final int CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID_VALUE = 127;
    /**
     * <pre>
     * Cannot set path2 without path1.
     * </pre>
     *
     * <code>CANNOT_SET_PATH2_WITHOUT_PATH1 = 128;</code>
     */
    public static final int CANNOT_SET_PATH2_WITHOUT_PATH1_VALUE = 128;
    /**
     * <pre>
     * Missing domain name in campaign setting when adding expanded dynamic
     * search ad.
     * </pre>
     *
     * <code>MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME = 129;</code>
     */
    public static final int MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME_VALUE = 129;
    /**
     * <pre>
     * The associated ad is not compatible with restriction type.
     * </pre>
     *
     * <code>INCOMPATIBLE_WITH_RESTRICTION_TYPE = 130;</code>
     */
    public static final int INCOMPATIBLE_WITH_RESTRICTION_TYPE_VALUE = 130;
    /**
     * <pre>
     * Consent for call recording is required for creating/updating call only
     * ads. Please see https://support.google.com/google-ads/answer/7412639.
     * </pre>
     *
     * <code>CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED = 131;</code>
     */
    public static final int CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED_VALUE = 131;
    /**
     * <pre>
     * Either an image or a media bundle is required in a display upload ad.
     * </pre>
     *
     * <code>MISSING_IMAGE_OR_MEDIA_BUNDLE = 132;</code>
     */
    public static final int MISSING_IMAGE_OR_MEDIA_BUNDLE_VALUE = 132;
    /**
     * <pre>
     * The display upload product type is not supported in this campaign.
     * </pre>
     *
     * <code>PRODUCT_TYPE_NOT_SUPPORTED_IN_THIS_CAMPAIGN = 133;</code>
     */
    public static final int PRODUCT_TYPE_NOT_SUPPORTED_IN_THIS_CAMPAIGN_VALUE = 133;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdError valueOf(int value) {
      return forNumber(value);
    }

    public static AdError forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 2: return AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE;
        case 3: return APPROXIMATELY_TOO_LONG;
        case 4: return APPROXIMATELY_TOO_SHORT;
        case 5: return BAD_SNIPPET;
        case 6: return CANNOT_MODIFY_AD;
        case 7: return CANNOT_SET_BUSINESS_NAME_IF_URL_SET;
        case 8: return CANNOT_SET_FIELD;
        case 9: return CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET;
        case 10: return CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING;
        case 11: return CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE;
        case 12: return CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING;
        case 13: return CANNOT_SET_URL;
        case 14: return CANNOT_SET_WITHOUT_FINAL_URLS;
        case 15: return CANNOT_SET_WITH_FINAL_URLS;
        case 17: return CANNOT_SET_WITH_URL_DATA;
        case 18: return CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR;
        case 19: return CUSTOMER_NOT_APPROVED_MOBILEADS;
        case 20: return CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS;
        case 21: return CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS;
        case 22: return CUSTOMER_NOT_ELIGIBLE;
        case 23: return CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL;
        case 24: return DIMENSION_ALREADY_IN_UNION;
        case 25: return DIMENSION_MUST_BE_SET;
        case 26: return DIMENSION_NOT_IN_UNION;
        case 27: return DISPLAY_URL_CANNOT_BE_SPECIFIED;
        case 28: return DOMESTIC_PHONE_NUMBER_FORMAT;
        case 29: return EMERGENCY_PHONE_NUMBER;
        case 30: return EMPTY_FIELD;
        case 31: return FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID;
        case 32: return FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH;
        case 33: return ILLEGAL_AD_CUSTOMIZER_TAG_USE;
        case 34: return ILLEGAL_TAG_USE;
        case 35: return INCONSISTENT_DIMENSIONS;
        case 36: return INCONSISTENT_STATUS_IN_TEMPLATE_UNION;
        case 37: return INCORRECT_LENGTH;
        case 38: return INELIGIBLE_FOR_UPGRADE;
        case 39: return INVALID_AD_ADDRESS_CAMPAIGN_TARGET;
        case 40: return INVALID_AD_TYPE;
        case 41: return INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE;
        case 42: return INVALID_ATTRIBUTES_FOR_MOBILE_TEXT;
        case 43: return INVALID_CALL_TO_ACTION_TEXT;
        case 44: return INVALID_CHARACTER_FOR_URL;
        case 45: return INVALID_COUNTRY_CODE;
        case 47: return INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG;
        case 48: return INVALID_INPUT;
        case 49: return INVALID_MARKUP_LANGUAGE;
        case 50: return INVALID_MOBILE_CARRIER;
        case 51: return INVALID_MOBILE_CARRIER_TARGET;
        case 52: return INVALID_NUMBER_OF_ELEMENTS;
        case 53: return INVALID_PHONE_NUMBER_FORMAT;
        case 54: return INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID;
        case 55: return INVALID_TEMPLATE_DATA;
        case 56: return INVALID_TEMPLATE_ELEMENT_FIELD_TYPE;
        case 57: return INVALID_TEMPLATE_ID;
        case 58: return LINE_TOO_WIDE;
        case 59: return MISSING_AD_CUSTOMIZER_MAPPING;
        case 60: return MISSING_ADDRESS_COMPONENT;
        case 61: return MISSING_ADVERTISEMENT_NAME;
        case 62: return MISSING_BUSINESS_NAME;
        case 63: return MISSING_DESCRIPTION1;
        case 64: return MISSING_DESCRIPTION2;
        case 65: return MISSING_DESTINATION_URL_TAG;
        case 66: return MISSING_LANDING_PAGE_URL_TAG;
        case 67: return MISSING_DIMENSION;
        case 68: return MISSING_DISPLAY_URL;
        case 69: return MISSING_HEADLINE;
        case 70: return MISSING_HEIGHT;
        case 71: return MISSING_IMAGE;
        case 72: return MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS;
        case 73: return MISSING_MARKUP_LANGUAGES;
        case 74: return MISSING_MOBILE_CARRIER;
        case 75: return MISSING_PHONE;
        case 76: return MISSING_REQUIRED_TEMPLATE_FIELDS;
        case 77: return MISSING_TEMPLATE_FIELD_VALUE;
        case 78: return MISSING_TEXT;
        case 79: return MISSING_VISIBLE_URL;
        case 80: return MISSING_WIDTH;
        case 81: return MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED;
        case 82: return MUST_USE_TEMP_AD_UNION_ID_ON_ADD;
        case 83: return TOO_LONG;
        case 84: return TOO_SHORT;
        case 85: return UNION_DIMENSIONS_CANNOT_CHANGE;
        case 86: return UNKNOWN_ADDRESS_COMPONENT;
        case 87: return UNKNOWN_FIELD_NAME;
        case 88: return UNKNOWN_UNIQUE_NAME;
        case 89: return UNSUPPORTED_DIMENSIONS;
        case 90: return URL_INVALID_SCHEME;
        case 91: return URL_INVALID_TOP_LEVEL_DOMAIN;
        case 92: return URL_MALFORMED;
        case 93: return URL_NO_HOST;
        case 94: return URL_NOT_EQUIVALENT;
        case 95: return URL_HOST_NAME_TOO_LONG;
        case 96: return URL_NO_SCHEME;
        case 97: return URL_NO_TOP_LEVEL_DOMAIN;
        case 98: return URL_PATH_NOT_ALLOWED;
        case 99: return URL_PORT_NOT_ALLOWED;
        case 100: return URL_QUERY_NOT_ALLOWED;
        case 102: return URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG;
        case 103: return USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE;
        case 104: return INCONSISTENT_EXPANDABLE_SETTINGS;
        case 105: return INVALID_FORMAT;
        case 106: return INVALID_FIELD_TEXT;
        case 107: return ELEMENT_NOT_PRESENT;
        case 108: return IMAGE_ERROR;
        case 109: return VALUE_NOT_IN_RANGE;
        case 110: return FIELD_NOT_PRESENT;
        case 111: return ADDRESS_NOT_COMPLETE;
        case 112: return ADDRESS_INVALID;
        case 113: return VIDEO_RETRIEVAL_ERROR;
        case 114: return AUDIO_ERROR;
        case 115: return INVALID_YOUTUBE_DISPLAY_URL;
        case 116: return TOO_MANY_PRODUCT_IMAGES;
        case 117: return TOO_MANY_PRODUCT_VIDEOS;
        case 118: return INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE;
        case 119: return CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY;
        case 120: return CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED;
        case 121: return DISALLOWED_NUMBER_TYPE;
        case 122: return PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY;
        case 123: return PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY;
        case 124: return PREMIUM_RATE_NUMBER_NOT_ALLOWED;
        case 125: return VANITY_PHONE_NUMBER_NOT_ALLOWED;
        case 126: return INVALID_CALL_CONVERSION_TYPE_ID;
        case 127: return CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID;
        case 128: return CANNOT_SET_PATH2_WITHOUT_PATH1;
        case 129: return MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME;
        case 130: return INCOMPATIBLE_WITH_RESTRICTION_TYPE;
        case 131: return CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED;
        case 132: return MISSING_IMAGE_OR_MEDIA_BUNDLE;
        case 133: return PRODUCT_TYPE_NOT_SUPPORTED_IN_THIS_CAMPAIGN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdError>() {
            public AdError findValueByNumber(int number) {
              return AdError.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.AdErrorEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final AdError[] VALUES = values();

    public static AdError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v1.errors.AdErrorEnum.AdError)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.errors.AdErrorEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.errors.AdErrorEnum other = (com.google.ads.googleads.v1.errors.AdErrorEnum) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.errors.AdErrorEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Container for enum describing possible ad errors.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.errors.AdErrorEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.errors.AdErrorEnum)
      com.google.ads.googleads.v1.errors.AdErrorEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.AdErrorProto.internal_static_google_ads_googleads_v1_errors_AdErrorEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.errors.AdErrorProto.internal_static_google_ads_googleads_v1_errors_AdErrorEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.errors.AdErrorEnum.class, com.google.ads.googleads.v1.errors.AdErrorEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.errors.AdErrorEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.errors.AdErrorProto.internal_static_google_ads_googleads_v1_errors_AdErrorEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdErrorEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.errors.AdErrorEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdErrorEnum build() {
      com.google.ads.googleads.v1.errors.AdErrorEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdErrorEnum buildPartial() {
      com.google.ads.googleads.v1.errors.AdErrorEnum result = new com.google.ads.googleads.v1.errors.AdErrorEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.errors.AdErrorEnum) {
        return mergeFrom((com.google.ads.googleads.v1.errors.AdErrorEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.errors.AdErrorEnum other) {
      if (other == com.google.ads.googleads.v1.errors.AdErrorEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.errors.AdErrorEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.errors.AdErrorEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.errors.AdErrorEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.errors.AdErrorEnum)
  private static final com.google.ads.googleads.v1.errors.AdErrorEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.errors.AdErrorEnum();
  }

  public static com.google.ads.googleads.v1.errors.AdErrorEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AdErrorEnum>
      PARSER = new com.google.protobuf.AbstractParser<AdErrorEnum>() {
    @java.lang.Override
    public AdErrorEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AdErrorEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AdErrorEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AdErrorEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.errors.AdErrorEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

