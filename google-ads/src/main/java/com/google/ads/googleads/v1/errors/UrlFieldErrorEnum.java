// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/errors/url_field_error.proto

package com.google.ads.googleads.v1.errors;

/**
 * <pre>
 * Container for enum describing possible url field errors.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.errors.UrlFieldErrorEnum}
 */
public  final class UrlFieldErrorEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.errors.UrlFieldErrorEnum)
    UrlFieldErrorEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UrlFieldErrorEnum.newBuilder() to construct.
  private UrlFieldErrorEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UrlFieldErrorEnum() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private UrlFieldErrorEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.errors.UrlFieldErrorProto.internal_static_google_ads_googleads_v1_errors_UrlFieldErrorEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.errors.UrlFieldErrorProto.internal_static_google_ads_googleads_v1_errors_UrlFieldErrorEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.class, com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.Builder.class);
  }

  /**
   * <pre>
   * Enum describing possible url field errors.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v1.errors.UrlFieldErrorEnum.UrlFieldError}
   */
  public enum UrlFieldError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * The tracking url template is invalid.
     * </pre>
     *
     * <code>INVALID_TRACKING_URL_TEMPLATE = 2;</code>
     */
    INVALID_TRACKING_URL_TEMPLATE(2),
    /**
     * <pre>
     * The tracking url template contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_TRACKING_URL_TEMPLATE = 3;</code>
     */
    INVALID_TAG_IN_TRACKING_URL_TEMPLATE(3),
    /**
     * <pre>
     * The tracking url template must contain at least one tag (e.g. {lpurl}),
     * This applies only to tracking url template associated with website ads or
     * product ads.
     * </pre>
     *
     * <code>MISSING_TRACKING_URL_TEMPLATE_TAG = 4;</code>
     */
    MISSING_TRACKING_URL_TEMPLATE_TAG(4),
    /**
     * <pre>
     * The tracking url template must start with a valid protocol (or lpurl
     * tag).
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 5;</code>
     */
    MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE(5),
    /**
     * <pre>
     * The tracking url template starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 6;</code>
     */
    INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE(6),
    /**
     * <pre>
     * The tracking url template contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_TRACKING_URL_TEMPLATE = 7;</code>
     */
    MALFORMED_TRACKING_URL_TEMPLATE(7),
    /**
     * <pre>
     * The tracking url template must contain a host name (or lpurl tag).
     * </pre>
     *
     * <code>MISSING_HOST_IN_TRACKING_URL_TEMPLATE = 8;</code>
     */
    MISSING_HOST_IN_TRACKING_URL_TEMPLATE(8),
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_TRACKING_URL_TEMPLATE = 9;</code>
     */
    INVALID_TLD_IN_TRACKING_URL_TEMPLATE(9),
    /**
     * <pre>
     * The tracking url template contains nested occurrences of the same
     * conditional tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG = 10;</code>
     */
    REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG(10),
    /**
     * <pre>
     * The final url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_URL = 11;</code>
     */
    INVALID_FINAL_URL(11),
    /**
     * <pre>
     * The final url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_URL = 12;</code>
     */
    INVALID_TAG_IN_FINAL_URL(12),
    /**
     * <pre>
     * The final url contains nested occurrences of the same conditional tag
     * (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_URL_TAG = 13;</code>
     */
    REDUNDANT_NESTED_FINAL_URL_TAG(13),
    /**
     * <pre>
     * The final url must start with a valid protocol.
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_FINAL_URL = 14;</code>
     */
    MISSING_PROTOCOL_IN_FINAL_URL(14),
    /**
     * <pre>
     * The final url starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_FINAL_URL = 15;</code>
     */
    INVALID_PROTOCOL_IN_FINAL_URL(15),
    /**
     * <pre>
     * The final url contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_FINAL_URL = 16;</code>
     */
    MALFORMED_FINAL_URL(16),
    /**
     * <pre>
     * The final url must contain a host name.
     * </pre>
     *
     * <code>MISSING_HOST_IN_FINAL_URL = 17;</code>
     */
    MISSING_HOST_IN_FINAL_URL(17),
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_FINAL_URL = 18;</code>
     */
    INVALID_TLD_IN_FINAL_URL(18),
    /**
     * <pre>
     * The final mobile url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_MOBILE_URL = 19;</code>
     */
    INVALID_FINAL_MOBILE_URL(19),
    /**
     * <pre>
     * The final mobile url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_MOBILE_URL = 20;</code>
     */
    INVALID_TAG_IN_FINAL_MOBILE_URL(20),
    /**
     * <pre>
     * The final mobile url contains nested occurrences of the same conditional
     * tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG = 21;</code>
     */
    REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG(21),
    /**
     * <pre>
     * The final mobile url must start with a valid protocol.
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_FINAL_MOBILE_URL = 22;</code>
     */
    MISSING_PROTOCOL_IN_FINAL_MOBILE_URL(22),
    /**
     * <pre>
     * The final mobile url starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_FINAL_MOBILE_URL = 23;</code>
     */
    INVALID_PROTOCOL_IN_FINAL_MOBILE_URL(23),
    /**
     * <pre>
     * The final mobile url contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_FINAL_MOBILE_URL = 24;</code>
     */
    MALFORMED_FINAL_MOBILE_URL(24),
    /**
     * <pre>
     * The final mobile url must contain a host name.
     * </pre>
     *
     * <code>MISSING_HOST_IN_FINAL_MOBILE_URL = 25;</code>
     */
    MISSING_HOST_IN_FINAL_MOBILE_URL(25),
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_FINAL_MOBILE_URL = 26;</code>
     */
    INVALID_TLD_IN_FINAL_MOBILE_URL(26),
    /**
     * <pre>
     * The final app url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_APP_URL = 27;</code>
     */
    INVALID_FINAL_APP_URL(27),
    /**
     * <pre>
     * The final app url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_APP_URL = 28;</code>
     */
    INVALID_TAG_IN_FINAL_APP_URL(28),
    /**
     * <pre>
     * The final app url contains nested occurrences of the same conditional tag
     * (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_APP_URL_TAG = 29;</code>
     */
    REDUNDANT_NESTED_FINAL_APP_URL_TAG(29),
    /**
     * <pre>
     * More than one app url found for the same OS type.
     * </pre>
     *
     * <code>MULTIPLE_APP_URLS_FOR_OSTYPE = 30;</code>
     */
    MULTIPLE_APP_URLS_FOR_OSTYPE(30),
    /**
     * <pre>
     * The OS type given for an app url is not valid.
     * </pre>
     *
     * <code>INVALID_OSTYPE = 31;</code>
     */
    INVALID_OSTYPE(31),
    /**
     * <pre>
     * The protocol given for an app url is not valid. (E.g. "android-app://")
     * </pre>
     *
     * <code>INVALID_PROTOCOL_FOR_APP_URL = 32;</code>
     */
    INVALID_PROTOCOL_FOR_APP_URL(32),
    /**
     * <pre>
     * The package id (app id) given for an app url is not valid.
     * </pre>
     *
     * <code>INVALID_PACKAGE_ID_FOR_APP_URL = 33;</code>
     */
    INVALID_PACKAGE_ID_FOR_APP_URL(33),
    /**
     * <pre>
     * The number of url custom parameters for an resource exceeds the maximum
     * limit allowed.
     * </pre>
     *
     * <code>URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT = 34;</code>
     */
    URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT(34),
    /**
     * <pre>
     * An invalid character appears in the parameter key.
     * </pre>
     *
     * <code>INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY = 39;</code>
     */
    INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY(39),
    /**
     * <pre>
     * An invalid character appears in the parameter value.
     * </pre>
     *
     * <code>INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE = 40;</code>
     */
    INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE(40),
    /**
     * <pre>
     * The url custom parameter value fails url tag validation.
     * </pre>
     *
     * <code>INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE = 41;</code>
     */
    INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE(41),
    /**
     * <pre>
     * The custom parameter contains nested occurrences of the same conditional
     * tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG = 42;</code>
     */
    REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG(42),
    /**
     * <pre>
     * The protocol (http:// or https://) is missing.
     * </pre>
     *
     * <code>MISSING_PROTOCOL = 43;</code>
     */
    MISSING_PROTOCOL(43),
    /**
     * <pre>
     * Unsupported protocol in URL. Only http and https are supported.
     * </pre>
     *
     * <code>INVALID_PROTOCOL = 52;</code>
     */
    INVALID_PROTOCOL(52),
    /**
     * <pre>
     * The url is invalid.
     * </pre>
     *
     * <code>INVALID_URL = 44;</code>
     */
    INVALID_URL(44),
    /**
     * <pre>
     * Destination Url is deprecated.
     * </pre>
     *
     * <code>DESTINATION_URL_DEPRECATED = 45;</code>
     */
    DESTINATION_URL_DEPRECATED(45),
    /**
     * <pre>
     * The url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_URL = 46;</code>
     */
    INVALID_TAG_IN_URL(46),
    /**
     * <pre>
     * The url must contain at least one tag (e.g. {lpurl}), This applies only
     * to urls associated with website ads or product ads.
     * </pre>
     *
     * <code>MISSING_URL_TAG = 47;</code>
     */
    MISSING_URL_TAG(47),
    /**
     * <pre>
     * Duplicate url id.
     * </pre>
     *
     * <code>DUPLICATE_URL_ID = 48;</code>
     */
    DUPLICATE_URL_ID(48),
    /**
     * <pre>
     * Invalid url id.
     * </pre>
     *
     * <code>INVALID_URL_ID = 49;</code>
     */
    INVALID_URL_ID(49),
    /**
     * <pre>
     * The final url suffix cannot begin with '?' or '&amp;' characters and must be
     * a valid query string.
     * </pre>
     *
     * <code>FINAL_URL_SUFFIX_MALFORMED = 50;</code>
     */
    FINAL_URL_SUFFIX_MALFORMED(50),
    /**
     * <pre>
     * The final url suffix cannot contain {lpurl} related or {ignore} tags.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_URL_SUFFIX = 51;</code>
     */
    INVALID_TAG_IN_FINAL_URL_SUFFIX(51),
    /**
     * <pre>
     * The top level domain is invalid, e.g, not a public top level domain
     * listed in publicsuffix.org.
     * </pre>
     *
     * <code>INVALID_TOP_LEVEL_DOMAIN = 53;</code>
     */
    INVALID_TOP_LEVEL_DOMAIN(53),
    /**
     * <pre>
     * Malformed top level domain in URL.
     * </pre>
     *
     * <code>MALFORMED_TOP_LEVEL_DOMAIN = 54;</code>
     */
    MALFORMED_TOP_LEVEL_DOMAIN(54),
    /**
     * <pre>
     * Malformed URL.
     * </pre>
     *
     * <code>MALFORMED_URL = 55;</code>
     */
    MALFORMED_URL(55),
    /**
     * <pre>
     * No host found in URL.
     * </pre>
     *
     * <code>MISSING_HOST = 56;</code>
     */
    MISSING_HOST(56),
    /**
     * <pre>
     * Custom parameter value cannot be null.
     * </pre>
     *
     * <code>NULL_CUSTOM_PARAMETER_VALUE = 57;</code>
     */
    NULL_CUSTOM_PARAMETER_VALUE(57),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * The tracking url template is invalid.
     * </pre>
     *
     * <code>INVALID_TRACKING_URL_TEMPLATE = 2;</code>
     */
    public static final int INVALID_TRACKING_URL_TEMPLATE_VALUE = 2;
    /**
     * <pre>
     * The tracking url template contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_TRACKING_URL_TEMPLATE = 3;</code>
     */
    public static final int INVALID_TAG_IN_TRACKING_URL_TEMPLATE_VALUE = 3;
    /**
     * <pre>
     * The tracking url template must contain at least one tag (e.g. {lpurl}),
     * This applies only to tracking url template associated with website ads or
     * product ads.
     * </pre>
     *
     * <code>MISSING_TRACKING_URL_TEMPLATE_TAG = 4;</code>
     */
    public static final int MISSING_TRACKING_URL_TEMPLATE_TAG_VALUE = 4;
    /**
     * <pre>
     * The tracking url template must start with a valid protocol (or lpurl
     * tag).
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 5;</code>
     */
    public static final int MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE_VALUE = 5;
    /**
     * <pre>
     * The tracking url template starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 6;</code>
     */
    public static final int INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE_VALUE = 6;
    /**
     * <pre>
     * The tracking url template contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_TRACKING_URL_TEMPLATE = 7;</code>
     */
    public static final int MALFORMED_TRACKING_URL_TEMPLATE_VALUE = 7;
    /**
     * <pre>
     * The tracking url template must contain a host name (or lpurl tag).
     * </pre>
     *
     * <code>MISSING_HOST_IN_TRACKING_URL_TEMPLATE = 8;</code>
     */
    public static final int MISSING_HOST_IN_TRACKING_URL_TEMPLATE_VALUE = 8;
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_TRACKING_URL_TEMPLATE = 9;</code>
     */
    public static final int INVALID_TLD_IN_TRACKING_URL_TEMPLATE_VALUE = 9;
    /**
     * <pre>
     * The tracking url template contains nested occurrences of the same
     * conditional tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG = 10;</code>
     */
    public static final int REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG_VALUE = 10;
    /**
     * <pre>
     * The final url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_URL = 11;</code>
     */
    public static final int INVALID_FINAL_URL_VALUE = 11;
    /**
     * <pre>
     * The final url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_URL = 12;</code>
     */
    public static final int INVALID_TAG_IN_FINAL_URL_VALUE = 12;
    /**
     * <pre>
     * The final url contains nested occurrences of the same conditional tag
     * (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_URL_TAG = 13;</code>
     */
    public static final int REDUNDANT_NESTED_FINAL_URL_TAG_VALUE = 13;
    /**
     * <pre>
     * The final url must start with a valid protocol.
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_FINAL_URL = 14;</code>
     */
    public static final int MISSING_PROTOCOL_IN_FINAL_URL_VALUE = 14;
    /**
     * <pre>
     * The final url starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_FINAL_URL = 15;</code>
     */
    public static final int INVALID_PROTOCOL_IN_FINAL_URL_VALUE = 15;
    /**
     * <pre>
     * The final url contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_FINAL_URL = 16;</code>
     */
    public static final int MALFORMED_FINAL_URL_VALUE = 16;
    /**
     * <pre>
     * The final url must contain a host name.
     * </pre>
     *
     * <code>MISSING_HOST_IN_FINAL_URL = 17;</code>
     */
    public static final int MISSING_HOST_IN_FINAL_URL_VALUE = 17;
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_FINAL_URL = 18;</code>
     */
    public static final int INVALID_TLD_IN_FINAL_URL_VALUE = 18;
    /**
     * <pre>
     * The final mobile url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_MOBILE_URL = 19;</code>
     */
    public static final int INVALID_FINAL_MOBILE_URL_VALUE = 19;
    /**
     * <pre>
     * The final mobile url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_MOBILE_URL = 20;</code>
     */
    public static final int INVALID_TAG_IN_FINAL_MOBILE_URL_VALUE = 20;
    /**
     * <pre>
     * The final mobile url contains nested occurrences of the same conditional
     * tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG = 21;</code>
     */
    public static final int REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG_VALUE = 21;
    /**
     * <pre>
     * The final mobile url must start with a valid protocol.
     * </pre>
     *
     * <code>MISSING_PROTOCOL_IN_FINAL_MOBILE_URL = 22;</code>
     */
    public static final int MISSING_PROTOCOL_IN_FINAL_MOBILE_URL_VALUE = 22;
    /**
     * <pre>
     * The final mobile url starts with an invalid protocol.
     * </pre>
     *
     * <code>INVALID_PROTOCOL_IN_FINAL_MOBILE_URL = 23;</code>
     */
    public static final int INVALID_PROTOCOL_IN_FINAL_MOBILE_URL_VALUE = 23;
    /**
     * <pre>
     * The final mobile url contains illegal characters.
     * </pre>
     *
     * <code>MALFORMED_FINAL_MOBILE_URL = 24;</code>
     */
    public static final int MALFORMED_FINAL_MOBILE_URL_VALUE = 24;
    /**
     * <pre>
     * The final mobile url must contain a host name.
     * </pre>
     *
     * <code>MISSING_HOST_IN_FINAL_MOBILE_URL = 25;</code>
     */
    public static final int MISSING_HOST_IN_FINAL_MOBILE_URL_VALUE = 25;
    /**
     * <pre>
     * The tracking url template has an invalid or missing top level domain
     * extension.
     * </pre>
     *
     * <code>INVALID_TLD_IN_FINAL_MOBILE_URL = 26;</code>
     */
    public static final int INVALID_TLD_IN_FINAL_MOBILE_URL_VALUE = 26;
    /**
     * <pre>
     * The final app url is invalid.
     * </pre>
     *
     * <code>INVALID_FINAL_APP_URL = 27;</code>
     */
    public static final int INVALID_FINAL_APP_URL_VALUE = 27;
    /**
     * <pre>
     * The final app url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_APP_URL = 28;</code>
     */
    public static final int INVALID_TAG_IN_FINAL_APP_URL_VALUE = 28;
    /**
     * <pre>
     * The final app url contains nested occurrences of the same conditional tag
     * (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_FINAL_APP_URL_TAG = 29;</code>
     */
    public static final int REDUNDANT_NESTED_FINAL_APP_URL_TAG_VALUE = 29;
    /**
     * <pre>
     * More than one app url found for the same OS type.
     * </pre>
     *
     * <code>MULTIPLE_APP_URLS_FOR_OSTYPE = 30;</code>
     */
    public static final int MULTIPLE_APP_URLS_FOR_OSTYPE_VALUE = 30;
    /**
     * <pre>
     * The OS type given for an app url is not valid.
     * </pre>
     *
     * <code>INVALID_OSTYPE = 31;</code>
     */
    public static final int INVALID_OSTYPE_VALUE = 31;
    /**
     * <pre>
     * The protocol given for an app url is not valid. (E.g. "android-app://")
     * </pre>
     *
     * <code>INVALID_PROTOCOL_FOR_APP_URL = 32;</code>
     */
    public static final int INVALID_PROTOCOL_FOR_APP_URL_VALUE = 32;
    /**
     * <pre>
     * The package id (app id) given for an app url is not valid.
     * </pre>
     *
     * <code>INVALID_PACKAGE_ID_FOR_APP_URL = 33;</code>
     */
    public static final int INVALID_PACKAGE_ID_FOR_APP_URL_VALUE = 33;
    /**
     * <pre>
     * The number of url custom parameters for an resource exceeds the maximum
     * limit allowed.
     * </pre>
     *
     * <code>URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT = 34;</code>
     */
    public static final int URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT_VALUE = 34;
    /**
     * <pre>
     * An invalid character appears in the parameter key.
     * </pre>
     *
     * <code>INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY = 39;</code>
     */
    public static final int INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY_VALUE = 39;
    /**
     * <pre>
     * An invalid character appears in the parameter value.
     * </pre>
     *
     * <code>INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE = 40;</code>
     */
    public static final int INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE_VALUE = 40;
    /**
     * <pre>
     * The url custom parameter value fails url tag validation.
     * </pre>
     *
     * <code>INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE = 41;</code>
     */
    public static final int INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE_VALUE = 41;
    /**
     * <pre>
     * The custom parameter contains nested occurrences of the same conditional
     * tag (i.e. {ifmobile:{ifmobile:x}}).
     * </pre>
     *
     * <code>REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG = 42;</code>
     */
    public static final int REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG_VALUE = 42;
    /**
     * <pre>
     * The protocol (http:// or https://) is missing.
     * </pre>
     *
     * <code>MISSING_PROTOCOL = 43;</code>
     */
    public static final int MISSING_PROTOCOL_VALUE = 43;
    /**
     * <pre>
     * Unsupported protocol in URL. Only http and https are supported.
     * </pre>
     *
     * <code>INVALID_PROTOCOL = 52;</code>
     */
    public static final int INVALID_PROTOCOL_VALUE = 52;
    /**
     * <pre>
     * The url is invalid.
     * </pre>
     *
     * <code>INVALID_URL = 44;</code>
     */
    public static final int INVALID_URL_VALUE = 44;
    /**
     * <pre>
     * Destination Url is deprecated.
     * </pre>
     *
     * <code>DESTINATION_URL_DEPRECATED = 45;</code>
     */
    public static final int DESTINATION_URL_DEPRECATED_VALUE = 45;
    /**
     * <pre>
     * The url contains invalid tag.
     * </pre>
     *
     * <code>INVALID_TAG_IN_URL = 46;</code>
     */
    public static final int INVALID_TAG_IN_URL_VALUE = 46;
    /**
     * <pre>
     * The url must contain at least one tag (e.g. {lpurl}), This applies only
     * to urls associated with website ads or product ads.
     * </pre>
     *
     * <code>MISSING_URL_TAG = 47;</code>
     */
    public static final int MISSING_URL_TAG_VALUE = 47;
    /**
     * <pre>
     * Duplicate url id.
     * </pre>
     *
     * <code>DUPLICATE_URL_ID = 48;</code>
     */
    public static final int DUPLICATE_URL_ID_VALUE = 48;
    /**
     * <pre>
     * Invalid url id.
     * </pre>
     *
     * <code>INVALID_URL_ID = 49;</code>
     */
    public static final int INVALID_URL_ID_VALUE = 49;
    /**
     * <pre>
     * The final url suffix cannot begin with '?' or '&amp;' characters and must be
     * a valid query string.
     * </pre>
     *
     * <code>FINAL_URL_SUFFIX_MALFORMED = 50;</code>
     */
    public static final int FINAL_URL_SUFFIX_MALFORMED_VALUE = 50;
    /**
     * <pre>
     * The final url suffix cannot contain {lpurl} related or {ignore} tags.
     * </pre>
     *
     * <code>INVALID_TAG_IN_FINAL_URL_SUFFIX = 51;</code>
     */
    public static final int INVALID_TAG_IN_FINAL_URL_SUFFIX_VALUE = 51;
    /**
     * <pre>
     * The top level domain is invalid, e.g, not a public top level domain
     * listed in publicsuffix.org.
     * </pre>
     *
     * <code>INVALID_TOP_LEVEL_DOMAIN = 53;</code>
     */
    public static final int INVALID_TOP_LEVEL_DOMAIN_VALUE = 53;
    /**
     * <pre>
     * Malformed top level domain in URL.
     * </pre>
     *
     * <code>MALFORMED_TOP_LEVEL_DOMAIN = 54;</code>
     */
    public static final int MALFORMED_TOP_LEVEL_DOMAIN_VALUE = 54;
    /**
     * <pre>
     * Malformed URL.
     * </pre>
     *
     * <code>MALFORMED_URL = 55;</code>
     */
    public static final int MALFORMED_URL_VALUE = 55;
    /**
     * <pre>
     * No host found in URL.
     * </pre>
     *
     * <code>MISSING_HOST = 56;</code>
     */
    public static final int MISSING_HOST_VALUE = 56;
    /**
     * <pre>
     * Custom parameter value cannot be null.
     * </pre>
     *
     * <code>NULL_CUSTOM_PARAMETER_VALUE = 57;</code>
     */
    public static final int NULL_CUSTOM_PARAMETER_VALUE_VALUE = 57;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UrlFieldError valueOf(int value) {
      return forNumber(value);
    }

    public static UrlFieldError forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 2: return INVALID_TRACKING_URL_TEMPLATE;
        case 3: return INVALID_TAG_IN_TRACKING_URL_TEMPLATE;
        case 4: return MISSING_TRACKING_URL_TEMPLATE_TAG;
        case 5: return MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE;
        case 6: return INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE;
        case 7: return MALFORMED_TRACKING_URL_TEMPLATE;
        case 8: return MISSING_HOST_IN_TRACKING_URL_TEMPLATE;
        case 9: return INVALID_TLD_IN_TRACKING_URL_TEMPLATE;
        case 10: return REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG;
        case 11: return INVALID_FINAL_URL;
        case 12: return INVALID_TAG_IN_FINAL_URL;
        case 13: return REDUNDANT_NESTED_FINAL_URL_TAG;
        case 14: return MISSING_PROTOCOL_IN_FINAL_URL;
        case 15: return INVALID_PROTOCOL_IN_FINAL_URL;
        case 16: return MALFORMED_FINAL_URL;
        case 17: return MISSING_HOST_IN_FINAL_URL;
        case 18: return INVALID_TLD_IN_FINAL_URL;
        case 19: return INVALID_FINAL_MOBILE_URL;
        case 20: return INVALID_TAG_IN_FINAL_MOBILE_URL;
        case 21: return REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG;
        case 22: return MISSING_PROTOCOL_IN_FINAL_MOBILE_URL;
        case 23: return INVALID_PROTOCOL_IN_FINAL_MOBILE_URL;
        case 24: return MALFORMED_FINAL_MOBILE_URL;
        case 25: return MISSING_HOST_IN_FINAL_MOBILE_URL;
        case 26: return INVALID_TLD_IN_FINAL_MOBILE_URL;
        case 27: return INVALID_FINAL_APP_URL;
        case 28: return INVALID_TAG_IN_FINAL_APP_URL;
        case 29: return REDUNDANT_NESTED_FINAL_APP_URL_TAG;
        case 30: return MULTIPLE_APP_URLS_FOR_OSTYPE;
        case 31: return INVALID_OSTYPE;
        case 32: return INVALID_PROTOCOL_FOR_APP_URL;
        case 33: return INVALID_PACKAGE_ID_FOR_APP_URL;
        case 34: return URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT;
        case 39: return INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY;
        case 40: return INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE;
        case 41: return INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE;
        case 42: return REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG;
        case 43: return MISSING_PROTOCOL;
        case 52: return INVALID_PROTOCOL;
        case 44: return INVALID_URL;
        case 45: return DESTINATION_URL_DEPRECATED;
        case 46: return INVALID_TAG_IN_URL;
        case 47: return MISSING_URL_TAG;
        case 48: return DUPLICATE_URL_ID;
        case 49: return INVALID_URL_ID;
        case 50: return FINAL_URL_SUFFIX_MALFORMED;
        case 51: return INVALID_TAG_IN_FINAL_URL_SUFFIX;
        case 53: return INVALID_TOP_LEVEL_DOMAIN;
        case 54: return MALFORMED_TOP_LEVEL_DOMAIN;
        case 55: return MALFORMED_URL;
        case 56: return MISSING_HOST;
        case 57: return NULL_CUSTOM_PARAMETER_VALUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UrlFieldError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UrlFieldError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UrlFieldError>() {
            public UrlFieldError findValueByNumber(int number) {
              return UrlFieldError.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final UrlFieldError[] VALUES = values();

    public static UrlFieldError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UrlFieldError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v1.errors.UrlFieldErrorEnum.UrlFieldError)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.errors.UrlFieldErrorEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.errors.UrlFieldErrorEnum other = (com.google.ads.googleads.v1.errors.UrlFieldErrorEnum) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.errors.UrlFieldErrorEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Container for enum describing possible url field errors.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.errors.UrlFieldErrorEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.errors.UrlFieldErrorEnum)
      com.google.ads.googleads.v1.errors.UrlFieldErrorEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.UrlFieldErrorProto.internal_static_google_ads_googleads_v1_errors_UrlFieldErrorEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.errors.UrlFieldErrorProto.internal_static_google_ads_googleads_v1_errors_UrlFieldErrorEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.class, com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.errors.UrlFieldErrorProto.internal_static_google_ads_googleads_v1_errors_UrlFieldErrorEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.UrlFieldErrorEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.UrlFieldErrorEnum build() {
      com.google.ads.googleads.v1.errors.UrlFieldErrorEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.UrlFieldErrorEnum buildPartial() {
      com.google.ads.googleads.v1.errors.UrlFieldErrorEnum result = new com.google.ads.googleads.v1.errors.UrlFieldErrorEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.errors.UrlFieldErrorEnum) {
        return mergeFrom((com.google.ads.googleads.v1.errors.UrlFieldErrorEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.errors.UrlFieldErrorEnum other) {
      if (other == com.google.ads.googleads.v1.errors.UrlFieldErrorEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.errors.UrlFieldErrorEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.errors.UrlFieldErrorEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.errors.UrlFieldErrorEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.errors.UrlFieldErrorEnum)
  private static final com.google.ads.googleads.v1.errors.UrlFieldErrorEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.errors.UrlFieldErrorEnum();
  }

  public static com.google.ads.googleads.v1.errors.UrlFieldErrorEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UrlFieldErrorEnum>
      PARSER = new com.google.protobuf.AbstractParser<UrlFieldErrorEnum>() {
    @java.lang.Override
    public UrlFieldErrorEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new UrlFieldErrorEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<UrlFieldErrorEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UrlFieldErrorEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.errors.UrlFieldErrorEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

