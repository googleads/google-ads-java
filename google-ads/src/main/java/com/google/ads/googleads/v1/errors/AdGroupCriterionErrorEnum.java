// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v1/errors/ad_group_criterion_error.proto

package com.google.ads.googleads.v1.errors;

/**
 * <pre>
 * Container for enum describing possible ad group criterion errors.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum}
 */
public  final class AdGroupCriterionErrorEnum extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)
    AdGroupCriterionErrorEnumOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AdGroupCriterionErrorEnum.newBuilder() to construct.
  private AdGroupCriterionErrorEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AdGroupCriterionErrorEnum() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AdGroupCriterionErrorEnum(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorProto.internal_static_google_ads_googleads_v1_errors_AdGroupCriterionErrorEnum_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorProto.internal_static_google_ads_googleads_v1_errors_AdGroupCriterionErrorEnum_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.class, com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.Builder.class);
  }

  /**
   * <pre>
   * Enum describing possible ad group criterion errors.
   * </pre>
   *
   * Protobuf enum {@code google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.AdGroupCriterionError}
   */
  public enum AdGroupCriterionError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * No link found between the AdGroupCriterion and the label.
     * </pre>
     *
     * <code>AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST = 2;</code>
     */
    AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST(2),
    /**
     * <pre>
     * The label has already been attached to the AdGroupCriterion.
     * </pre>
     *
     * <code>AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS = 3;</code>
     */
    AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS(3),
    /**
     * <pre>
     * Negative AdGroupCriterion cannot have labels.
     * </pre>
     *
     * <code>CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION = 4;</code>
     */
    CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION(4),
    /**
     * <pre>
     * Too many operations for a single call.
     * </pre>
     *
     * <code>TOO_MANY_OPERATIONS = 5;</code>
     */
    TOO_MANY_OPERATIONS(5),
    /**
     * <pre>
     * Negative ad group criteria are not updateable.
     * </pre>
     *
     * <code>CANT_UPDATE_NEGATIVE = 6;</code>
     */
    CANT_UPDATE_NEGATIVE(6),
    /**
     * <pre>
     * Concrete type of criterion (keyword v.s. placement) is required for ADD
     * and SET operations.
     * </pre>
     *
     * <code>CONCRETE_TYPE_REQUIRED = 7;</code>
     */
    CONCRETE_TYPE_REQUIRED(7),
    /**
     * <pre>
     * Bid is incompatible with ad group's bidding settings.
     * </pre>
     *
     * <code>BID_INCOMPATIBLE_WITH_ADGROUP = 8;</code>
     */
    BID_INCOMPATIBLE_WITH_ADGROUP(8),
    /**
     * <pre>
     * Cannot target and exclude the same criterion at once.
     * </pre>
     *
     * <code>CANNOT_TARGET_AND_EXCLUDE = 9;</code>
     */
    CANNOT_TARGET_AND_EXCLUDE(9),
    /**
     * <pre>
     * The URL of a placement is invalid.
     * </pre>
     *
     * <code>ILLEGAL_URL = 10;</code>
     */
    ILLEGAL_URL(10),
    /**
     * <pre>
     * Keyword text was invalid.
     * </pre>
     *
     * <code>INVALID_KEYWORD_TEXT = 11;</code>
     */
    INVALID_KEYWORD_TEXT(11),
    /**
     * <pre>
     * Destination URL was invalid.
     * </pre>
     *
     * <code>INVALID_DESTINATION_URL = 12;</code>
     */
    INVALID_DESTINATION_URL(12),
    /**
     * <pre>
     * The destination url must contain at least one tag (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_DESTINATION_URL_TAG = 13;</code>
     */
    MISSING_DESTINATION_URL_TAG(13),
    /**
     * <pre>
     * Keyword-level cpm bid is not supported
     * </pre>
     *
     * <code>KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM = 14;</code>
     */
    KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM(14),
    /**
     * <pre>
     * For example, cannot add a biddable ad group criterion that had been
     * removed.
     * </pre>
     *
     * <code>INVALID_USER_STATUS = 15;</code>
     */
    INVALID_USER_STATUS(15),
    /**
     * <pre>
     * Criteria type cannot be targeted for the ad group. Either the account is
     * restricted to keywords only, the criteria type is incompatible with the
     * campaign's bidding strategy, or the criteria type can only be applied to
     * campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_CRITERIA_TYPE = 16;</code>
     */
    CANNOT_ADD_CRITERIA_TYPE(16),
    /**
     * <pre>
     * Criteria type cannot be excluded for the ad group. Refer to the
     * documentation for a specific criterion to check if it is excludable.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERIA_TYPE = 17;</code>
     */
    CANNOT_EXCLUDE_CRITERIA_TYPE(17),
    /**
     * <pre>
     * Partial failure is not supported for shopping campaign mutate operations.
     * </pre>
     *
     * <code>CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE = 27;</code>
     */
    CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE(27),
    /**
     * <pre>
     * Operations in the mutate request changes too many shopping ad groups.
     * Please split requests for multiple shopping ad groups across multiple
     * requests.
     * </pre>
     *
     * <code>OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS = 28;</code>
     */
    OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS(28),
    /**
     * <pre>
     * Not allowed to modify url fields of an ad group criterion if there are
     * duplicate elements for that ad group criterion in the request.
     * </pre>
     *
     * <code>CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS = 29;</code>
     */
    CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS(29),
    /**
     * <pre>
     * Cannot set url fields without also setting final urls.
     * </pre>
     *
     * <code>CANNOT_SET_WITHOUT_FINAL_URLS = 30;</code>
     */
    CANNOT_SET_WITHOUT_FINAL_URLS(30),
    /**
     * <pre>
     * Cannot clear final urls if final mobile urls exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST = 31;</code>
     */
    CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST(31),
    /**
     * <pre>
     * Cannot clear final urls if final app urls exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST = 32;</code>
     */
    CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST(32),
    /**
     * <pre>
     * Cannot clear final urls if tracking url template exists.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS = 33;</code>
     */
    CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS(33),
    /**
     * <pre>
     * Cannot clear final urls if url custom parameters exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST = 34;</code>
     */
    CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST(34),
    /**
     * <pre>
     * Cannot set both destination url and final urls.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS = 35;</code>
     */
    CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS(35),
    /**
     * <pre>
     * Cannot set both destination url and tracking url template.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE = 36;</code>
     */
    CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE(36),
    /**
     * <pre>
     * Final urls are not supported for this criterion type.
     * </pre>
     *
     * <code>FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 37;</code>
     */
    FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE(37),
    /**
     * <pre>
     * Final mobile urls are not supported for this criterion type.
     * </pre>
     *
     * <code>FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 38;</code>
     */
    FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE(38),
    /**
     * <pre>
     * Ad group is invalid due to the listing groups it contains.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_HIERARCHY = 39;</code>
     */
    INVALID_LISTING_GROUP_HIERARCHY(39),
    /**
     * <pre>
     * Listing group unit cannot have children.
     * </pre>
     *
     * <code>LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN = 40;</code>
     */
    LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN(40),
    /**
     * <pre>
     * Subdivided listing groups must have an "others" case.
     * </pre>
     *
     * <code>LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE = 41;</code>
     */
    LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE(41),
    /**
     * <pre>
     * Dimension type of listing group must be the same as that of its siblings.
     * </pre>
     *
     * <code>LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS = 42;</code>
     */
    LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS(42),
    /**
     * <pre>
     * Listing group cannot be added to the ad group because it already exists.
     * </pre>
     *
     * <code>LISTING_GROUP_ALREADY_EXISTS = 43;</code>
     */
    LISTING_GROUP_ALREADY_EXISTS(43),
    /**
     * <pre>
     * Listing group referenced in the operation was not found in the ad group.
     * </pre>
     *
     * <code>LISTING_GROUP_DOES_NOT_EXIST = 44;</code>
     */
    LISTING_GROUP_DOES_NOT_EXIST(44),
    /**
     * <pre>
     * Recursive removal failed because listing group subdivision is being
     * created or modified in this request.
     * </pre>
     *
     * <code>LISTING_GROUP_CANNOT_BE_REMOVED = 45;</code>
     */
    LISTING_GROUP_CANNOT_BE_REMOVED(45),
    /**
     * <pre>
     * Listing group type is not allowed for specified ad group criterion type.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_TYPE = 46;</code>
     */
    INVALID_LISTING_GROUP_TYPE(46),
    /**
     * <pre>
     * Listing group in an ADD operation specifies a non temporary criterion id.
     * </pre>
     *
     * <code>LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID = 47;</code>
     */
    LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID(47),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Enum unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The received error code is not known in this version.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * No link found between the AdGroupCriterion and the label.
     * </pre>
     *
     * <code>AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST = 2;</code>
     */
    public static final int AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST_VALUE = 2;
    /**
     * <pre>
     * The label has already been attached to the AdGroupCriterion.
     * </pre>
     *
     * <code>AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS = 3;</code>
     */
    public static final int AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS_VALUE = 3;
    /**
     * <pre>
     * Negative AdGroupCriterion cannot have labels.
     * </pre>
     *
     * <code>CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION = 4;</code>
     */
    public static final int CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION_VALUE = 4;
    /**
     * <pre>
     * Too many operations for a single call.
     * </pre>
     *
     * <code>TOO_MANY_OPERATIONS = 5;</code>
     */
    public static final int TOO_MANY_OPERATIONS_VALUE = 5;
    /**
     * <pre>
     * Negative ad group criteria are not updateable.
     * </pre>
     *
     * <code>CANT_UPDATE_NEGATIVE = 6;</code>
     */
    public static final int CANT_UPDATE_NEGATIVE_VALUE = 6;
    /**
     * <pre>
     * Concrete type of criterion (keyword v.s. placement) is required for ADD
     * and SET operations.
     * </pre>
     *
     * <code>CONCRETE_TYPE_REQUIRED = 7;</code>
     */
    public static final int CONCRETE_TYPE_REQUIRED_VALUE = 7;
    /**
     * <pre>
     * Bid is incompatible with ad group's bidding settings.
     * </pre>
     *
     * <code>BID_INCOMPATIBLE_WITH_ADGROUP = 8;</code>
     */
    public static final int BID_INCOMPATIBLE_WITH_ADGROUP_VALUE = 8;
    /**
     * <pre>
     * Cannot target and exclude the same criterion at once.
     * </pre>
     *
     * <code>CANNOT_TARGET_AND_EXCLUDE = 9;</code>
     */
    public static final int CANNOT_TARGET_AND_EXCLUDE_VALUE = 9;
    /**
     * <pre>
     * The URL of a placement is invalid.
     * </pre>
     *
     * <code>ILLEGAL_URL = 10;</code>
     */
    public static final int ILLEGAL_URL_VALUE = 10;
    /**
     * <pre>
     * Keyword text was invalid.
     * </pre>
     *
     * <code>INVALID_KEYWORD_TEXT = 11;</code>
     */
    public static final int INVALID_KEYWORD_TEXT_VALUE = 11;
    /**
     * <pre>
     * Destination URL was invalid.
     * </pre>
     *
     * <code>INVALID_DESTINATION_URL = 12;</code>
     */
    public static final int INVALID_DESTINATION_URL_VALUE = 12;
    /**
     * <pre>
     * The destination url must contain at least one tag (e.g. {lpurl})
     * </pre>
     *
     * <code>MISSING_DESTINATION_URL_TAG = 13;</code>
     */
    public static final int MISSING_DESTINATION_URL_TAG_VALUE = 13;
    /**
     * <pre>
     * Keyword-level cpm bid is not supported
     * </pre>
     *
     * <code>KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM = 14;</code>
     */
    public static final int KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM_VALUE = 14;
    /**
     * <pre>
     * For example, cannot add a biddable ad group criterion that had been
     * removed.
     * </pre>
     *
     * <code>INVALID_USER_STATUS = 15;</code>
     */
    public static final int INVALID_USER_STATUS_VALUE = 15;
    /**
     * <pre>
     * Criteria type cannot be targeted for the ad group. Either the account is
     * restricted to keywords only, the criteria type is incompatible with the
     * campaign's bidding strategy, or the criteria type can only be applied to
     * campaigns.
     * </pre>
     *
     * <code>CANNOT_ADD_CRITERIA_TYPE = 16;</code>
     */
    public static final int CANNOT_ADD_CRITERIA_TYPE_VALUE = 16;
    /**
     * <pre>
     * Criteria type cannot be excluded for the ad group. Refer to the
     * documentation for a specific criterion to check if it is excludable.
     * </pre>
     *
     * <code>CANNOT_EXCLUDE_CRITERIA_TYPE = 17;</code>
     */
    public static final int CANNOT_EXCLUDE_CRITERIA_TYPE_VALUE = 17;
    /**
     * <pre>
     * Partial failure is not supported for shopping campaign mutate operations.
     * </pre>
     *
     * <code>CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE = 27;</code>
     */
    public static final int CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE_VALUE = 27;
    /**
     * <pre>
     * Operations in the mutate request changes too many shopping ad groups.
     * Please split requests for multiple shopping ad groups across multiple
     * requests.
     * </pre>
     *
     * <code>OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS = 28;</code>
     */
    public static final int OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS_VALUE = 28;
    /**
     * <pre>
     * Not allowed to modify url fields of an ad group criterion if there are
     * duplicate elements for that ad group criterion in the request.
     * </pre>
     *
     * <code>CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS = 29;</code>
     */
    public static final int CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS_VALUE = 29;
    /**
     * <pre>
     * Cannot set url fields without also setting final urls.
     * </pre>
     *
     * <code>CANNOT_SET_WITHOUT_FINAL_URLS = 30;</code>
     */
    public static final int CANNOT_SET_WITHOUT_FINAL_URLS_VALUE = 30;
    /**
     * <pre>
     * Cannot clear final urls if final mobile urls exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST = 31;</code>
     */
    public static final int CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST_VALUE = 31;
    /**
     * <pre>
     * Cannot clear final urls if final app urls exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST = 32;</code>
     */
    public static final int CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST_VALUE = 32;
    /**
     * <pre>
     * Cannot clear final urls if tracking url template exists.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS = 33;</code>
     */
    public static final int CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS_VALUE = 33;
    /**
     * <pre>
     * Cannot clear final urls if url custom parameters exist.
     * </pre>
     *
     * <code>CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST = 34;</code>
     */
    public static final int CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST_VALUE = 34;
    /**
     * <pre>
     * Cannot set both destination url and final urls.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS = 35;</code>
     */
    public static final int CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS_VALUE = 35;
    /**
     * <pre>
     * Cannot set both destination url and tracking url template.
     * </pre>
     *
     * <code>CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE = 36;</code>
     */
    public static final int CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE_VALUE = 36;
    /**
     * <pre>
     * Final urls are not supported for this criterion type.
     * </pre>
     *
     * <code>FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 37;</code>
     */
    public static final int FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE_VALUE = 37;
    /**
     * <pre>
     * Final mobile urls are not supported for this criterion type.
     * </pre>
     *
     * <code>FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 38;</code>
     */
    public static final int FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE_VALUE = 38;
    /**
     * <pre>
     * Ad group is invalid due to the listing groups it contains.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_HIERARCHY = 39;</code>
     */
    public static final int INVALID_LISTING_GROUP_HIERARCHY_VALUE = 39;
    /**
     * <pre>
     * Listing group unit cannot have children.
     * </pre>
     *
     * <code>LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN = 40;</code>
     */
    public static final int LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN_VALUE = 40;
    /**
     * <pre>
     * Subdivided listing groups must have an "others" case.
     * </pre>
     *
     * <code>LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE = 41;</code>
     */
    public static final int LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE_VALUE = 41;
    /**
     * <pre>
     * Dimension type of listing group must be the same as that of its siblings.
     * </pre>
     *
     * <code>LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS = 42;</code>
     */
    public static final int LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS_VALUE = 42;
    /**
     * <pre>
     * Listing group cannot be added to the ad group because it already exists.
     * </pre>
     *
     * <code>LISTING_GROUP_ALREADY_EXISTS = 43;</code>
     */
    public static final int LISTING_GROUP_ALREADY_EXISTS_VALUE = 43;
    /**
     * <pre>
     * Listing group referenced in the operation was not found in the ad group.
     * </pre>
     *
     * <code>LISTING_GROUP_DOES_NOT_EXIST = 44;</code>
     */
    public static final int LISTING_GROUP_DOES_NOT_EXIST_VALUE = 44;
    /**
     * <pre>
     * Recursive removal failed because listing group subdivision is being
     * created or modified in this request.
     * </pre>
     *
     * <code>LISTING_GROUP_CANNOT_BE_REMOVED = 45;</code>
     */
    public static final int LISTING_GROUP_CANNOT_BE_REMOVED_VALUE = 45;
    /**
     * <pre>
     * Listing group type is not allowed for specified ad group criterion type.
     * </pre>
     *
     * <code>INVALID_LISTING_GROUP_TYPE = 46;</code>
     */
    public static final int INVALID_LISTING_GROUP_TYPE_VALUE = 46;
    /**
     * <pre>
     * Listing group in an ADD operation specifies a non temporary criterion id.
     * </pre>
     *
     * <code>LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID = 47;</code>
     */
    public static final int LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID_VALUE = 47;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdGroupCriterionError valueOf(int value) {
      return forNumber(value);
    }

    public static AdGroupCriterionError forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return UNKNOWN;
        case 2: return AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST;
        case 3: return AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS;
        case 4: return CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION;
        case 5: return TOO_MANY_OPERATIONS;
        case 6: return CANT_UPDATE_NEGATIVE;
        case 7: return CONCRETE_TYPE_REQUIRED;
        case 8: return BID_INCOMPATIBLE_WITH_ADGROUP;
        case 9: return CANNOT_TARGET_AND_EXCLUDE;
        case 10: return ILLEGAL_URL;
        case 11: return INVALID_KEYWORD_TEXT;
        case 12: return INVALID_DESTINATION_URL;
        case 13: return MISSING_DESTINATION_URL_TAG;
        case 14: return KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM;
        case 15: return INVALID_USER_STATUS;
        case 16: return CANNOT_ADD_CRITERIA_TYPE;
        case 17: return CANNOT_EXCLUDE_CRITERIA_TYPE;
        case 27: return CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE;
        case 28: return OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS;
        case 29: return CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS;
        case 30: return CANNOT_SET_WITHOUT_FINAL_URLS;
        case 31: return CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST;
        case 32: return CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST;
        case 33: return CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS;
        case 34: return CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST;
        case 35: return CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS;
        case 36: return CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE;
        case 37: return FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE;
        case 38: return FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE;
        case 39: return INVALID_LISTING_GROUP_HIERARCHY;
        case 40: return LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN;
        case 41: return LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE;
        case 42: return LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS;
        case 43: return LISTING_GROUP_ALREADY_EXISTS;
        case 44: return LISTING_GROUP_DOES_NOT_EXIST;
        case 45: return LISTING_GROUP_CANNOT_BE_REMOVED;
        case 46: return INVALID_LISTING_GROUP_TYPE;
        case 47: return LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdGroupCriterionError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdGroupCriterionError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdGroupCriterionError>() {
            public AdGroupCriterionError findValueByNumber(int number) {
              return AdGroupCriterionError.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final AdGroupCriterionError[] VALUES = values();

    public static AdGroupCriterionError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdGroupCriterionError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.AdGroupCriterionError)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum other = (com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Container for enum describing possible ad group criterion errors.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)
      com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnumOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorProto.internal_static_google_ads_googleads_v1_errors_AdGroupCriterionErrorEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorProto.internal_static_google_ads_googleads_v1_errors_AdGroupCriterionErrorEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.class, com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.Builder.class);
    }

    // Construct using com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorProto.internal_static_google_ads_googleads_v1_errors_AdGroupCriterionErrorEnum_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum getDefaultInstanceForType() {
      return com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum build() {
      com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum buildPartial() {
      com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum result = new com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum) {
        return mergeFrom((com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum other) {
      if (other == com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum)
  private static final com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum();
  }

  public static com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AdGroupCriterionErrorEnum>
      PARSER = new com.google.protobuf.AbstractParser<AdGroupCriterionErrorEnum>() {
    @java.lang.Override
    public AdGroupCriterionErrorEnum parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AdGroupCriterionErrorEnum(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AdGroupCriterionErrorEnum> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AdGroupCriterionErrorEnum> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v1.errors.AdGroupCriterionErrorEnum getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

