// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v19/common/metrics.proto

// Protobuf Java Version: 3.25.7
package com.google.ads.googleads.v19.common;

public interface MetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.ads.googleads.v19.common.Metrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Search absolute top impression share is the percentage of your Search ad
   * impressions that are shown in the most prominent Search position.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return Whether the absoluteTopImpressionPercentage field is set.
   */
  boolean hasAbsoluteTopImpressionPercentage();
  /**
   * <pre>
   * Search absolute top impression share is the percentage of your Search ad
   * impressions that are shown in the most prominent Search position.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return The absoluteTopImpressionPercentage.
   */
  double getAbsoluteTopImpressionPercentage();

  /**
   * <pre>
   * Average cost of viewable impressions (`active_view_impressions`).
   * </pre>
   *
   * <code>optional double active_view_cpm = 184;</code>
   * @return Whether the activeViewCpm field is set.
   */
  boolean hasActiveViewCpm();
  /**
   * <pre>
   * Average cost of viewable impressions (`active_view_impressions`).
   * </pre>
   *
   * <code>optional double active_view_cpm = 184;</code>
   * @return The activeViewCpm.
   */
  double getActiveViewCpm();

  /**
   * <pre>
   * Active view measurable clicks divided by active view viewable impressions.
   *
   * This metric is reported only for the Display Network.
   * </pre>
   *
   * <code>optional double active_view_ctr = 185;</code>
   * @return Whether the activeViewCtr field is set.
   */
  boolean hasActiveViewCtr();
  /**
   * <pre>
   * Active view measurable clicks divided by active view viewable impressions.
   *
   * This metric is reported only for the Display Network.
   * </pre>
   *
   * <code>optional double active_view_ctr = 185;</code>
   * @return The activeViewCtr.
   */
  double getActiveViewCtr();

  /**
   * <pre>
   * A measurement of how often your ad has become viewable on a Display
   * Network site.
   * </pre>
   *
   * <code>optional int64 active_view_impressions = 186;</code>
   * @return Whether the activeViewImpressions field is set.
   */
  boolean hasActiveViewImpressions();
  /**
   * <pre>
   * A measurement of how often your ad has become viewable on a Display
   * Network site.
   * </pre>
   *
   * <code>optional int64 active_view_impressions = 186;</code>
   * @return The activeViewImpressions.
   */
  long getActiveViewImpressions();

  /**
   * <pre>
   * The ratio of impressions that could be measured by Active View over the
   * number of served impressions.
   * </pre>
   *
   * <code>optional double active_view_measurability = 187;</code>
   * @return Whether the activeViewMeasurability field is set.
   */
  boolean hasActiveViewMeasurability();
  /**
   * <pre>
   * The ratio of impressions that could be measured by Active View over the
   * number of served impressions.
   * </pre>
   *
   * <code>optional double active_view_measurability = 187;</code>
   * @return The activeViewMeasurability.
   */
  double getActiveViewMeasurability();

  /**
   * <pre>
   * The cost of the impressions you received that were measurable by Active
   * View.
   * </pre>
   *
   * <code>optional int64 active_view_measurable_cost_micros = 188;</code>
   * @return Whether the activeViewMeasurableCostMicros field is set.
   */
  boolean hasActiveViewMeasurableCostMicros();
  /**
   * <pre>
   * The cost of the impressions you received that were measurable by Active
   * View.
   * </pre>
   *
   * <code>optional int64 active_view_measurable_cost_micros = 188;</code>
   * @return The activeViewMeasurableCostMicros.
   */
  long getActiveViewMeasurableCostMicros();

  /**
   * <pre>
   * The number of times your ads are appearing on placements in positions
   * where they can be seen.
   * </pre>
   *
   * <code>optional int64 active_view_measurable_impressions = 189;</code>
   * @return Whether the activeViewMeasurableImpressions field is set.
   */
  boolean hasActiveViewMeasurableImpressions();
  /**
   * <pre>
   * The number of times your ads are appearing on placements in positions
   * where they can be seen.
   * </pre>
   *
   * <code>optional int64 active_view_measurable_impressions = 189;</code>
   * @return The activeViewMeasurableImpressions.
   */
  long getActiveViewMeasurableImpressions();

  /**
   * <pre>
   * The percentage of time when your ad appeared on an Active View enabled site
   * (measurable impressions) and was viewable (viewable impressions).
   * </pre>
   *
   * <code>optional double active_view_viewability = 190;</code>
   * @return Whether the activeViewViewability field is set.
   */
  boolean hasActiveViewViewability();
  /**
   * <pre>
   * The percentage of time when your ad appeared on an Active View enabled site
   * (measurable impressions) and was viewable (viewable impressions).
   * </pre>
   *
   * <code>optional double active_view_viewability = 190;</code>
   * @return The activeViewViewability.
   */
  double getActiveViewViewability();

  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return Whether the allConversionsFromInteractionsRate field is set.
   */
  boolean hasAllConversionsFromInteractionsRate();
  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return The allConversionsFromInteractionsRate.
   */
  double getAllConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return Whether the allConversionsValue field is set.
   */
  boolean hasAllConversionsValue();
  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return The allConversionsValue.
   */
  double getAllConversionsValue();

  /**
   * <pre>
   * The value of all conversions. When this column is selected with date, the
   * values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double all_conversions_value_by_conversion_date = 240;</code>
   * @return Whether the allConversionsValueByConversionDate field is set.
   */
  boolean hasAllConversionsValueByConversionDate();
  /**
   * <pre>
   * The value of all conversions. When this column is selected with date, the
   * values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double all_conversions_value_by_conversion_date = 240;</code>
   * @return The allConversionsValueByConversionDate.
   */
  double getAllConversionsValueByConversionDate();

  /**
   * <pre>
   * All of new customers' lifetime conversion value. If you have set up
   * customer acquisition goal at either account level or campaign level, this
   * will include the additional conversion value from new customers for both
   * biddable and non-biddable conversions. If your campaign has adopted the
   * customer acquisition goal and selected "bid higher for new customers",
   * these values will be included in "all_conversions_value". See
   * https://support.google.com/google-ads/answer/12080169 for more details.
   * </pre>
   *
   * <code>optional double all_new_customer_lifetime_value = 294;</code>
   * @return Whether the allNewCustomerLifetimeValue field is set.
   */
  boolean hasAllNewCustomerLifetimeValue();
  /**
   * <pre>
   * All of new customers' lifetime conversion value. If you have set up
   * customer acquisition goal at either account level or campaign level, this
   * will include the additional conversion value from new customers for both
   * biddable and non-biddable conversions. If your campaign has adopted the
   * customer acquisition goal and selected "bid higher for new customers",
   * these values will be included in "all_conversions_value". See
   * https://support.google.com/google-ads/answer/12080169 for more details.
   * </pre>
   *
   * <code>optional double all_new_customer_lifetime_value = 294;</code>
   * @return The allNewCustomerLifetimeValue.
   */
  double getAllNewCustomerLifetimeValue();

  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return Whether the allConversions field is set.
   */
  boolean hasAllConversions();
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return The allConversions.
   */
  double getAllConversions();

  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric. When this column is selected
   * with date, the values in date column means the conversion date. Details for
   * the by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double all_conversions_by_conversion_date = 241;</code>
   * @return Whether the allConversionsByConversionDate field is set.
   */
  boolean hasAllConversionsByConversionDate();
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric. When this column is selected
   * with date, the values in date column means the conversion date. Details for
   * the by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double all_conversions_by_conversion_date = 241;</code>
   * @return The allConversionsByConversionDate.
   */
  double getAllConversionsByConversionDate();

  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return Whether the allConversionsValuePerCost field is set.
   */
  boolean hasAllConversionsValuePerCost();
  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return The allConversionsValuePerCost.
   */
  double getAllConversionsValuePerCost();

  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return Whether the allConversionsFromClickToCall field is set.
   */
  boolean hasAllConversionsFromClickToCall();
  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return The allConversionsFromClickToCall.
   */
  double getAllConversionsFromClickToCall();

  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return Whether the allConversionsFromDirections field is set.
   */
  boolean hasAllConversionsFromDirections();
  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return The allConversionsFromDirections.
   */
  double getAllConversionsFromDirections();

  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return Whether the allConversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasAllConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return The allConversionsFromInteractionsValuePerInteraction.
   */
  double getAllConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return Whether the allConversionsFromMenu field is set.
   */
  boolean hasAllConversionsFromMenu();
  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return The allConversionsFromMenu.
   */
  double getAllConversionsFromMenu();

  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return Whether the allConversionsFromOrder field is set.
   */
  boolean hasAllConversionsFromOrder();
  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return The allConversionsFromOrder.
   */
  double getAllConversionsFromOrder();

  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return Whether the allConversionsFromOtherEngagement field is set.
   */
  boolean hasAllConversionsFromOtherEngagement();
  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return The allConversionsFromOtherEngagement.
   */
  double getAllConversionsFromOtherEngagement();

  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return Whether the allConversionsFromStoreVisit field is set.
   */
  boolean hasAllConversionsFromStoreVisit();
  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return The allConversionsFromStoreVisit.
   */
  double getAllConversionsFromStoreVisit();

  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return Whether the allConversionsFromStoreWebsite field is set.
   */
  boolean hasAllConversionsFromStoreWebsite();
  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return The allConversionsFromStoreWebsite.
   */
  double getAllConversionsFromStoreWebsite();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * the ads of another participant showed in the most prominent position on the
   * search results page.
   * This percentage is computed only over the auctions that you appeared in
   * the page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_absolute_top_impression_percentage = 258;</code>
   * @return Whether the auctionInsightSearchAbsoluteTopImpressionPercentage field is set.
   */
  boolean hasAuctionInsightSearchAbsoluteTopImpressionPercentage();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * the ads of another participant showed in the most prominent position on the
   * search results page.
   * This percentage is computed only over the auctions that you appeared in
   * the page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_absolute_top_impression_percentage = 258;</code>
   * @return The auctionInsightSearchAbsoluteTopImpressionPercentage.
   */
  double getAuctionInsightSearchAbsoluteTopImpressionPercentage();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells the
   * percentage of impressions that another participant obtained, over the total
   * number of impressions that your ads were eligible for.
   * Any value below 0.1 is reported as 0.0999.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_impression_share = 259;</code>
   * @return Whether the auctionInsightSearchImpressionShare field is set.
   */
  boolean hasAuctionInsightSearchImpressionShare();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells the
   * percentage of impressions that another participant obtained, over the total
   * number of impressions that your ads were eligible for.
   * Any value below 0.1 is reported as 0.0999.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_impression_share = 259;</code>
   * @return The auctionInsightSearchImpressionShare.
   */
  double getAuctionInsightSearchImpressionShare();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells the
   * percentage of impressions that your ads outranked (showed above)
   * another participant in the auction, compared to the total number of
   * impressions that your ads were eligible for.
   * Any value below 0.1 is reported as 0.0999.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_outranking_share = 260;</code>
   * @return Whether the auctionInsightSearchOutrankingShare field is set.
   */
  boolean hasAuctionInsightSearchOutrankingShare();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells the
   * percentage of impressions that your ads outranked (showed above)
   * another participant in the auction, compared to the total number of
   * impressions that your ads were eligible for.
   * Any value below 0.1 is reported as 0.0999.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_outranking_share = 260;</code>
   * @return The auctionInsightSearchOutrankingShare.
   */
  double getAuctionInsightSearchOutrankingShare();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * another participant's ad received an impression when your ad also received
   * an impression.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_overlap_rate = 261;</code>
   * @return Whether the auctionInsightSearchOverlapRate field is set.
   */
  boolean hasAuctionInsightSearchOverlapRate();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * another participant's ad received an impression when your ad also received
   * an impression.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_overlap_rate = 261;</code>
   * @return The auctionInsightSearchOverlapRate.
   */
  double getAuctionInsightSearchOverlapRate();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * another participant's ad was shown in a higher position than yours, when
   * both of your ads were shown at the same page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_position_above_rate = 262;</code>
   * @return Whether the auctionInsightSearchPositionAboveRate field is set.
   */
  boolean hasAuctionInsightSearchPositionAboveRate();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * another participant's ad was shown in a higher position than yours, when
   * both of your ads were shown at the same page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_position_above_rate = 262;</code>
   * @return The auctionInsightSearchPositionAboveRate.
   */
  double getAuctionInsightSearchPositionAboveRate();

  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * the ads of another participant showed adjacent to the top organic search
   * results. This percentage is computed only over the auctions that you
   * appeared in the page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_top_impression_percentage = 263;</code>
   * @return Whether the auctionInsightSearchTopImpressionPercentage field is set.
   */
  boolean hasAuctionInsightSearchTopImpressionPercentage();
  /**
   * <pre>
   * This metric is part of the Auction Insights report, and tells how often
   * the ads of another participant showed adjacent to the top organic search
   * results. This percentage is computed only over the auctions that you
   * appeared in the page.
   *
   * This metric is not publicly available.
   * </pre>
   *
   * <code>optional double auction_insight_search_top_impression_percentage = 263;</code>
   * @return The auctionInsightSearchTopImpressionPercentage.
   */
  double getAuctionInsightSearchTopImpressionPercentage();

  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return Whether the averageCost field is set.
   */
  boolean hasAverageCost();
  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return The averageCost.
   */
  double getAverageCost();

  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return Whether the averageCpc field is set.
   */
  boolean hasAverageCpc();
  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return The averageCpc.
   */
  double getAverageCpc();

  /**
   * <pre>
   * The average amount that you've been charged for an ad engagement. This
   * amount is the total cost of all ad engagements divided by the total number
   * of ad engagements.
   * </pre>
   *
   * <code>optional double average_cpe = 205;</code>
   * @return Whether the averageCpe field is set.
   */
  boolean hasAverageCpe();
  /**
   * <pre>
   * The average amount that you've been charged for an ad engagement. This
   * amount is the total cost of all ad engagements divided by the total number
   * of ad engagements.
   * </pre>
   *
   * <code>optional double average_cpe = 205;</code>
   * @return The averageCpe.
   */
  double getAverageCpe();

  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return Whether the averageCpm field is set.
   */
  boolean hasAverageCpm();
  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return The averageCpm.
   */
  double getAverageCpm();

  /**
   * <pre>
   * The average amount you pay each time someone views your ad.
   * The average CPV is defined by the total cost of all ad views divided by
   * the number of views.
   * </pre>
   *
   * <code>optional double average_cpv = 207;</code>
   * @return Whether the averageCpv field is set.
   */
  boolean hasAverageCpv();
  /**
   * <pre>
   * The average amount you pay each time someone views your ad.
   * The average CPV is defined by the total cost of all ad views divided by
   * the number of views.
   * </pre>
   *
   * <code>optional double average_cpv = 207;</code>
   * @return The averageCpv.
   */
  double getAverageCpv();

  /**
   * <pre>
   * Average number of pages viewed per session.
   * </pre>
   *
   * <code>optional double average_page_views = 208;</code>
   * @return Whether the averagePageViews field is set.
   */
  boolean hasAveragePageViews();
  /**
   * <pre>
   * Average number of pages viewed per session.
   * </pre>
   *
   * <code>optional double average_page_views = 208;</code>
   * @return The averagePageViews.
   */
  double getAveragePageViews();

  /**
   * <pre>
   * Total duration of all sessions (in seconds) / number of sessions. Imported
   * from Google Analytics.
   * </pre>
   *
   * <code>optional double average_time_on_site = 209;</code>
   * @return Whether the averageTimeOnSite field is set.
   */
  boolean hasAverageTimeOnSite();
  /**
   * <pre>
   * Total duration of all sessions (in seconds) / number of sessions. Imported
   * from Google Analytics.
   * </pre>
   *
   * <code>optional double average_time_on_site = 209;</code>
   * @return The averageTimeOnSite.
   */
  double getAverageTimeOnSite();

  /**
   * <pre>
   * An indication of how other advertisers are bidding on similar products.
   * </pre>
   *
   * <code>optional double benchmark_average_max_cpc = 210;</code>
   * @return Whether the benchmarkAverageMaxCpc field is set.
   */
  boolean hasBenchmarkAverageMaxCpc();
  /**
   * <pre>
   * An indication of how other advertisers are bidding on similar products.
   * </pre>
   *
   * <code>optional double benchmark_average_max_cpc = 210;</code>
   * @return The benchmarkAverageMaxCpc.
   */
  double getBenchmarkAverageMaxCpc();

  /**
   * <pre>
   * Number of app installs.
   * </pre>
   *
   * <code>optional double biddable_app_install_conversions = 254;</code>
   * @return Whether the biddableAppInstallConversions field is set.
   */
  boolean hasBiddableAppInstallConversions();
  /**
   * <pre>
   * Number of app installs.
   * </pre>
   *
   * <code>optional double biddable_app_install_conversions = 254;</code>
   * @return The biddableAppInstallConversions.
   */
  double getBiddableAppInstallConversions();

  /**
   * <pre>
   * Number of in-app actions.
   * </pre>
   *
   * <code>optional double biddable_app_post_install_conversions = 255;</code>
   * @return Whether the biddableAppPostInstallConversions field is set.
   */
  boolean hasBiddableAppPostInstallConversions();
  /**
   * <pre>
   * Number of in-app actions.
   * </pre>
   *
   * <code>optional double biddable_app_post_install_conversions = 255;</code>
   * @return The biddableAppPostInstallConversions.
   */
  double getBiddableAppPostInstallConversions();

  /**
   * <pre>
   * Participated in-app actions. The number of in app actions that come
   * directly or indirectly from the campaign.
   * </pre>
   *
   * <code>optional double biddable_cohort_app_post_install_conversions = 378;</code>
   * @return Whether the biddableCohortAppPostInstallConversions field is set.
   */
  boolean hasBiddableCohortAppPostInstallConversions();
  /**
   * <pre>
   * Participated in-app actions. The number of in app actions that come
   * directly or indirectly from the campaign.
   * </pre>
   *
   * <code>optional double biddable_cohort_app_post_install_conversions = 378;</code>
   * @return The biddableCohortAppPostInstallConversions.
   */
  double getBiddableCohortAppPostInstallConversions();

  /**
   * <pre>
   * An indication on how other advertisers' Shopping ads for similar products
   * are performing based on how often people who see their ad click on it.
   * </pre>
   *
   * <code>optional double benchmark_ctr = 211;</code>
   * @return Whether the benchmarkCtr field is set.
   */
  boolean hasBenchmarkCtr();
  /**
   * <pre>
   * An indication on how other advertisers' Shopping ads for similar products
   * are performing based on how often people who see their ad click on it.
   * </pre>
   *
   * <code>optional double benchmark_ctr = 211;</code>
   * @return The benchmarkCtr.
   */
  double getBenchmarkCtr();

  /**
   * <pre>
   * Percentage of clicks where the user only visited a single page on your
   * site. Imported from Google Analytics.
   * </pre>
   *
   * <code>optional double bounce_rate = 212;</code>
   * @return Whether the bounceRate field is set.
   */
  boolean hasBounceRate();
  /**
   * <pre>
   * Percentage of clicks where the user only visited a single page on your
   * site. Imported from Google Analytics.
   * </pre>
   *
   * <code>optional double bounce_rate = 212;</code>
   * @return The bounceRate.
   */
  double getBounceRate();

  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return Whether the clicks field is set.
   */
  boolean hasClicks();
  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return The clicks.
   */
  long getClicks();

  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 combined_clicks = 156;</code>
   * @return Whether the combinedClicks field is set.
   */
  boolean hasCombinedClicks();
  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 combined_clicks = 156;</code>
   * @return The combinedClicks.
   */
  long getCombinedClicks();

  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked (combined_clicks) divided by combined_queries. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>optional double combined_clicks_per_query = 157;</code>
   * @return Whether the combinedClicksPerQuery field is set.
   */
  boolean hasCombinedClicksPerQuery();
  /**
   * <pre>
   * The number of times your ad or your site's listing in the unpaid
   * results was clicked (combined_clicks) divided by combined_queries. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>optional double combined_clicks_per_query = 157;</code>
   * @return The combinedClicksPerQuery.
   */
  double getCombinedClicksPerQuery();

  /**
   * <pre>
   * The number of searches that returned pages from your site in the unpaid
   * results or showed one of your text ads. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 combined_queries = 158;</code>
   * @return Whether the combinedQueries field is set.
   */
  boolean hasCombinedQueries();
  /**
   * <pre>
   * The number of searches that returned pages from your site in the unpaid
   * results or showed one of your text ads. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 combined_queries = 158;</code>
   * @return The combinedQueries.
   */
  long getCombinedQueries();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return Whether the contentBudgetLostImpressionShare field is set.
   */
  boolean hasContentBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return The contentBudgetLostImpressionShare.
   */
  double getContentBudgetLostImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return Whether the contentImpressionShare field is set.
   */
  boolean hasContentImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return The contentImpressionShare.
   */
  double getContentImpressionShare();

  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (for example, because the tag was
   * fired from a browser that did not previously click an ad from an
   * appropriate advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_received_request_date_time = 161;</code>
   * @return Whether the conversionLastReceivedRequestDateTime field is set.
   */
  boolean hasConversionLastReceivedRequestDateTime();
  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (for example, because the tag was
   * fired from a browser that did not previously click an ad from an
   * appropriate advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_received_request_date_time = 161;</code>
   * @return The conversionLastReceivedRequestDateTime.
   */
  java.lang.String getConversionLastReceivedRequestDateTime();
  /**
   * <pre>
   * The last date/time a conversion tag for this conversion action successfully
   * fired and was seen by Google Ads. This firing event may not have been the
   * result of an attributable conversion (for example, because the tag was
   * fired from a browser that did not previously click an ad from an
   * appropriate advertiser). The date/time is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_received_request_date_time = 161;</code>
   * @return The bytes for conversionLastReceivedRequestDateTime.
   */
  com.google.protobuf.ByteString
      getConversionLastReceivedRequestDateTimeBytes();

  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_conversion_date = 162;</code>
   * @return Whether the conversionLastConversionDate field is set.
   */
  boolean hasConversionLastConversionDate();
  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_conversion_date = 162;</code>
   * @return The conversionLastConversionDate.
   */
  java.lang.String getConversionLastConversionDate();
  /**
   * <pre>
   * The date of the most recent conversion for this conversion action. The date
   * is in the customer's time zone.
   * </pre>
   *
   * <code>optional string conversion_last_conversion_date = 162;</code>
   * @return The bytes for conversionLastConversionDate.
   */
  com.google.protobuf.ByteString
      getConversionLastConversionDateBytes();

  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return Whether the contentRankLostImpressionShare field is set.
   */
  boolean hasContentRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return The contentRankLostImpressionShare.
   */
  double getContentRankLostImpressionShare();

  /**
   * <pre>
   * Conversions from interactions divided by the number of ad interactions
   * (such as clicks for text ads or views for video ads). This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 164;</code>
   * @return Whether the conversionsFromInteractionsRate field is set.
   */
  boolean hasConversionsFromInteractionsRate();
  /**
   * <pre>
   * Conversions from interactions divided by the number of ad interactions
   * (such as clicks for text ads or views for video ads). This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 164;</code>
   * @return The conversionsFromInteractionsRate.
   */
  double getConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_value = 165;</code>
   * @return Whether the conversionsValue field is set.
   */
  boolean hasConversionsValue();
  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_value = 165;</code>
   * @return The conversionsValue.
   */
  double getConversionsValue();

  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions. When this column is selected with date, the values in date
   * column means the conversion date. Details for the by_conversion_date
   * columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double conversions_value_by_conversion_date = 242;</code>
   * @return Whether the conversionsValueByConversionDate field is set.
   */
  boolean hasConversionsValueByConversionDate();
  /**
   * <pre>
   * The value of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions. When this column is selected with date, the values in date
   * column means the conversion date. Details for the by_conversion_date
   * columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double conversions_value_by_conversion_date = 242;</code>
   * @return The conversionsValueByConversionDate.
   */
  double getConversionsValueByConversionDate();

  /**
   * <pre>
   * New customers' lifetime conversion value. If you have set up
   * customer acquisition goal at either account level or campaign level, this
   * will include the additional conversion value from new customers for
   * biddable conversions. If your campaign has adopted the customer
   * acquisition goal and selected "bid higher for new customers", these values
   * will be included in "conversions_value" for optimization. See
   * https://support.google.com/google-ads/answer/12080169 for more details.
   * </pre>
   *
   * <code>optional double new_customer_lifetime_value = 293;</code>
   * @return Whether the newCustomerLifetimeValue field is set.
   */
  boolean hasNewCustomerLifetimeValue();
  /**
   * <pre>
   * New customers' lifetime conversion value. If you have set up
   * customer acquisition goal at either account level or campaign level, this
   * will include the additional conversion value from new customers for
   * biddable conversions. If your campaign has adopted the customer
   * acquisition goal and selected "bid higher for new customers", these values
   * will be included in "conversions_value" for optimization. See
   * https://support.google.com/google-ads/answer/12080169 for more details.
   * </pre>
   *
   * <code>optional double new_customer_lifetime_value = 293;</code>
   * @return The newCustomerLifetimeValue.
   */
  double getNewCustomerLifetimeValue();

  /**
   * <pre>
   * The value of conversions divided by the cost of ad interactions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 166;</code>
   * @return Whether the conversionsValuePerCost field is set.
   */
  boolean hasConversionsValuePerCost();
  /**
   * <pre>
   * The value of conversions divided by the cost of ad interactions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 166;</code>
   * @return The conversionsValuePerCost.
   */
  double getConversionsValuePerCost();

  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return Whether the conversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return The conversionsFromInteractionsValuePerInteraction.
   */
  double getConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 168;</code>
   * @return Whether the conversions field is set.
   */
  boolean hasConversions();
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 168;</code>
   * @return The conversions.
   */
  double getConversions();

  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions. When this column is selected with date, the values in date
   * column means the conversion date. Details for the by_conversion_date
   * columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double conversions_by_conversion_date = 243;</code>
   * @return Whether the conversionsByConversionDate field is set.
   */
  boolean hasConversionsByConversionDate();
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions. When this column is selected with date, the values in date
   * column means the conversion date. Details for the by_conversion_date
   * columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double conversions_by_conversion_date = 243;</code>
   * @return The conversionsByConversionDate.
   */
  double getConversionsByConversionDate();

  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return Whether the costMicros field is set.
   */
  boolean hasCostMicros();
  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return The costMicros.
   */
  long getCostMicros();

  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return Whether the costPerAllConversions field is set.
   */
  boolean hasCostPerAllConversions();
  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return The costPerAllConversions.
   */
  double getCostPerAllConversions();

  /**
   * <pre>
   * The cost of ad interactions divided by conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 171;</code>
   * @return Whether the costPerConversion field is set.
   */
  boolean hasCostPerConversion();
  /**
   * <pre>
   * The cost of ad interactions divided by conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 171;</code>
   * @return The costPerConversion.
   */
  double getCostPerConversion();

  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return Whether the costPerCurrentModelAttributedConversion field is set.
   */
  boolean hasCostPerCurrentModelAttributedConversion();
  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return The costPerCurrentModelAttributedConversion.
   */
  double getCostPerCurrentModelAttributedConversion();

  /**
   * <pre>
   * Conversions from when a customer clicks on a Google Ads ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return Whether the crossDeviceConversions field is set.
   */
  boolean hasCrossDeviceConversions();
  /**
   * <pre>
   * Conversions from when a customer clicks on a Google Ads ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return The crossDeviceConversions.
   */
  double getCrossDeviceConversions();

  /**
   * <pre>
   * The sum of the value of cross-device conversions, in micros.
   * </pre>
   *
   * <code>optional int64 cross_device_conversions_value_micros = 312;</code>
   * @return Whether the crossDeviceConversionsValueMicros field is set.
   */
  boolean hasCrossDeviceConversionsValueMicros();
  /**
   * <pre>
   * The sum of the value of cross-device conversions, in micros.
   * </pre>
   *
   * <code>optional int64 cross_device_conversions_value_micros = 312;</code>
   * @return The crossDeviceConversionsValueMicros.
   */
  long getCrossDeviceConversionsValueMicros();

  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return Whether the ctr field is set.
   */
  boolean hasCtr();
  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return The ctr.
   */
  double getCtr();

  /**
   * <pre>
   * Shows how your historic conversions data would look under the attribution
   * model you've currently selected. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions = 175;</code>
   * @return Whether the currentModelAttributedConversions field is set.
   */
  boolean hasCurrentModelAttributedConversions();
  /**
   * <pre>
   * Shows how your historic conversions data would look under the attribution
   * model you've currently selected. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions = 175;</code>
   * @return The currentModelAttributedConversions.
   */
  double getCurrentModelAttributedConversions();

  /**
   * <pre>
   * Current model attributed conversions from interactions divided by the
   * number of ad interactions (such as clicks for text ads or views for video
   * ads). This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_from_interactions_rate = 176;</code>
   * @return Whether the currentModelAttributedConversionsFromInteractionsRate field is set.
   */
  boolean hasCurrentModelAttributedConversionsFromInteractionsRate();
  /**
   * <pre>
   * Current model attributed conversions from interactions divided by the
   * number of ad interactions (such as clicks for text ads or views for video
   * ads). This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_from_interactions_rate = 176;</code>
   * @return The currentModelAttributedConversionsFromInteractionsRate.
   */
  double getCurrentModelAttributedConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of current model attributed conversions from interactions divided
   * by the number of ad interactions. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_from_interactions_value_per_interaction = 177;</code>
   * @return Whether the currentModelAttributedConversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasCurrentModelAttributedConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of current model attributed conversions from interactions divided
   * by the number of ad interactions. This only includes conversion actions
   * which include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_from_interactions_value_per_interaction = 177;</code>
   * @return The currentModelAttributedConversionsFromInteractionsValuePerInteraction.
   */
  double getCurrentModelAttributedConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The value of current model attributed conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_value = 178;</code>
   * @return Whether the currentModelAttributedConversionsValue field is set.
   */
  boolean hasCurrentModelAttributedConversionsValue();
  /**
   * <pre>
   * The value of current model attributed conversions. This only includes
   * conversion actions which include_in_conversions_metric attribute is set to
   * true. If you use conversion-based bidding, your bid strategies will
   * optimize for these conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_value = 178;</code>
   * @return The currentModelAttributedConversionsValue.
   */
  double getCurrentModelAttributedConversionsValue();

  /**
   * <pre>
   * The value of current model attributed conversions divided by the cost of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_value_per_cost = 179;</code>
   * @return Whether the currentModelAttributedConversionsValuePerCost field is set.
   */
  boolean hasCurrentModelAttributedConversionsValuePerCost();
  /**
   * <pre>
   * The value of current model attributed conversions divided by the cost of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double current_model_attributed_conversions_value_per_cost = 179;</code>
   * @return The currentModelAttributedConversionsValuePerCost.
   */
  double getCurrentModelAttributedConversionsValuePerCost();

  /**
   * <pre>
   * How often people engage with your ad after it's shown to them. This is the
   * number of ad expansions divided by the number of times your ad is shown.
   * </pre>
   *
   * <code>optional double engagement_rate = 180;</code>
   * @return Whether the engagementRate field is set.
   */
  boolean hasEngagementRate();
  /**
   * <pre>
   * How often people engage with your ad after it's shown to them. This is the
   * number of ad expansions divided by the number of times your ad is shown.
   * </pre>
   *
   * <code>optional double engagement_rate = 180;</code>
   * @return The engagementRate.
   */
  double getEngagementRate();

  /**
   * <pre>
   * The number of engagements.
   * An engagement occurs when a viewer expands your Lightbox ad. Also, in the
   * future, other ad types may support engagement metrics.
   * </pre>
   *
   * <code>optional int64 engagements = 181;</code>
   * @return Whether the engagements field is set.
   */
  boolean hasEngagements();
  /**
   * <pre>
   * The number of engagements.
   * An engagement occurs when a viewer expands your Lightbox ad. Also, in the
   * future, other ad types may support engagement metrics.
   * </pre>
   *
   * <code>optional int64 engagements = 181;</code>
   * @return The engagements.
   */
  long getEngagements();

  /**
   * <pre>
   * Average lead value based on clicks.
   * </pre>
   *
   * <code>optional double hotel_average_lead_value_micros = 213;</code>
   * @return Whether the hotelAverageLeadValueMicros field is set.
   */
  boolean hasHotelAverageLeadValueMicros();
  /**
   * <pre>
   * Average lead value based on clicks.
   * </pre>
   *
   * <code>optional double hotel_average_lead_value_micros = 213;</code>
   * @return The hotelAverageLeadValueMicros.
   */
  double getHotelAverageLeadValueMicros();

  /**
   * <pre>
   * Commission bid rate in micros. A 20% commission is represented as
   * 200,000.
   * </pre>
   *
   * <code>optional int64 hotel_commission_rate_micros = 256;</code>
   * @return Whether the hotelCommissionRateMicros field is set.
   */
  boolean hasHotelCommissionRateMicros();
  /**
   * <pre>
   * Commission bid rate in micros. A 20% commission is represented as
   * 200,000.
   * </pre>
   *
   * <code>optional int64 hotel_commission_rate_micros = 256;</code>
   * @return The hotelCommissionRateMicros.
   */
  long getHotelCommissionRateMicros();

  /**
   * <pre>
   * Expected commission cost. The result of multiplying the commission value
   * times the hotel_commission_rate in advertiser currency.
   * </pre>
   *
   * <code>optional double hotel_expected_commission_cost = 257;</code>
   * @return Whether the hotelExpectedCommissionCost field is set.
   */
  boolean hasHotelExpectedCommissionCost();
  /**
   * <pre>
   * Expected commission cost. The result of multiplying the commission value
   * times the hotel_commission_rate in advertiser currency.
   * </pre>
   *
   * <code>optional double hotel_expected_commission_cost = 257;</code>
   * @return The hotelExpectedCommissionCost.
   */
  double getHotelExpectedCommissionCost();

  /**
   * <pre>
   * The average price difference between the price offered by reporting hotel
   * advertiser and the cheapest price offered by the competing advertiser.
   * </pre>
   *
   * <code>optional double hotel_price_difference_percentage = 214;</code>
   * @return Whether the hotelPriceDifferencePercentage field is set.
   */
  boolean hasHotelPriceDifferencePercentage();
  /**
   * <pre>
   * The average price difference between the price offered by reporting hotel
   * advertiser and the cheapest price offered by the competing advertiser.
   * </pre>
   *
   * <code>optional double hotel_price_difference_percentage = 214;</code>
   * @return The hotelPriceDifferencePercentage.
   */
  double getHotelPriceDifferencePercentage();

  /**
   * <pre>
   * The number of impressions that hotel partners could have had given their
   * feed performance.
   * </pre>
   *
   * <code>optional int64 hotel_eligible_impressions = 215;</code>
   * @return Whether the hotelEligibleImpressions field is set.
   */
  boolean hasHotelEligibleImpressions();
  /**
   * <pre>
   * The number of impressions that hotel partners could have had given their
   * feed performance.
   * </pre>
   *
   * <code>optional int64 hotel_eligible_impressions = 215;</code>
   * @return The hotelEligibleImpressions.
   */
  long getHotelEligibleImpressions();

  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The enum numeric value on the wire for historicalCreativeQualityScore.
   */
  int getHistoricalCreativeQualityScoreValue();
  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The historicalCreativeQualityScore.
   */
  com.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalCreativeQualityScore();

  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The enum numeric value on the wire for historicalLandingPageQualityScore.
   */
  int getHistoricalLandingPageQualityScoreValue();
  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The historicalLandingPageQualityScore.
   */
  com.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalLandingPageQualityScore();

  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return Whether the historicalQualityScore field is set.
   */
  boolean hasHistoricalQualityScore();
  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return The historicalQualityScore.
   */
  long getHistoricalQualityScore();

  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The enum numeric value on the wire for historicalSearchPredictedCtr.
   */
  int getHistoricalSearchPredictedCtrValue();
  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The historicalSearchPredictedCtr.
   */
  com.google.ads.googleads.v19.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalSearchPredictedCtr();

  /**
   * <pre>
   * The number of times the ad was forwarded to someone else as a message.
   * </pre>
   *
   * <code>optional int64 gmail_forwards = 217;</code>
   * @return Whether the gmailForwards field is set.
   */
  boolean hasGmailForwards();
  /**
   * <pre>
   * The number of times the ad was forwarded to someone else as a message.
   * </pre>
   *
   * <code>optional int64 gmail_forwards = 217;</code>
   * @return The gmailForwards.
   */
  long getGmailForwards();

  /**
   * <pre>
   * The number of times someone has saved your Gmail ad to their inbox as a
   * message.
   * </pre>
   *
   * <code>optional int64 gmail_saves = 218;</code>
   * @return Whether the gmailSaves field is set.
   */
  boolean hasGmailSaves();
  /**
   * <pre>
   * The number of times someone has saved your Gmail ad to their inbox as a
   * message.
   * </pre>
   *
   * <code>optional int64 gmail_saves = 218;</code>
   * @return The gmailSaves.
   */
  long getGmailSaves();

  /**
   * <pre>
   * The number of clicks to the landing page on the expanded state of Gmail
   * ads.
   * </pre>
   *
   * <code>optional int64 gmail_secondary_clicks = 219;</code>
   * @return Whether the gmailSecondaryClicks field is set.
   */
  boolean hasGmailSecondaryClicks();
  /**
   * <pre>
   * The number of clicks to the landing page on the expanded state of Gmail
   * ads.
   * </pre>
   *
   * <code>optional int64 gmail_secondary_clicks = 219;</code>
   * @return The gmailSecondaryClicks.
   */
  long getGmailSecondaryClicks();

  /**
   * <pre>
   * The number of times a store's location-based ad was shown.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional int64 impressions_from_store_reach = 220;</code>
   * @return Whether the impressionsFromStoreReach field is set.
   */
  boolean hasImpressionsFromStoreReach();
  /**
   * <pre>
   * The number of times a store's location-based ad was shown.
   *
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional int64 impressions_from_store_reach = 220;</code>
   * @return The impressionsFromStoreReach.
   */
  long getImpressionsFromStoreReach();

  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return Whether the impressions field is set.
   */
  boolean hasImpressions();
  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return The impressions.
   */
  long getImpressions();

  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return Whether the interactionRate field is set.
   */
  boolean hasInteractionRate();
  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return The interactionRate.
   */
  double getInteractionRate();

  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return Whether the interactions field is set.
   */
  boolean hasInteractions();
  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return The interactions.
   */
  long getInteractions();

  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the interactionEventTypes.
   */
  java.util.List<com.google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType> getInteractionEventTypesList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return The count of interactionEventTypes.
   */
  int getInteractionEventTypesCount();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the element to return.
   * @return The interactionEventTypes at the given index.
   */
  com.google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType getInteractionEventTypes(int index);
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the enum numeric values on the wire for interactionEventTypes.
   */
  java.util.List<java.lang.Integer>
  getInteractionEventTypesValueList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v19.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interactionEventTypes at the given index.
   */
  int getInteractionEventTypesValue(int index);

  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return Whether the invalidClickRate field is set.
   */
  boolean hasInvalidClickRate();
  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return The invalidClickRate.
   */
  double getInvalidClickRate();

  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return Whether the invalidClicks field is set.
   */
  boolean hasInvalidClicks();
  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return The invalidClicks.
   */
  long getInvalidClicks();

  /**
   * <pre>
   * The percentage of clicks that have been filtered out of your total number
   * of clicks (filtered + non-filtered clicks) due to being general invalid
   * clicks. These are clicks Google considers illegitimate that are detected
   * through routine means of filtration (that is, known invalid data-center
   * traffic, bots and spiders or other crawlers, irregular patterns, etc).
   * You're not charged for them, and they don't affect your account statistics.
   * See the help page at
   * https://support.google.com/campaignmanager/answer/6076504 for
   * details.
   * </pre>
   *
   * <code>optional double general_invalid_click_rate = 370;</code>
   * @return Whether the generalInvalidClickRate field is set.
   */
  boolean hasGeneralInvalidClickRate();
  /**
   * <pre>
   * The percentage of clicks that have been filtered out of your total number
   * of clicks (filtered + non-filtered clicks) due to being general invalid
   * clicks. These are clicks Google considers illegitimate that are detected
   * through routine means of filtration (that is, known invalid data-center
   * traffic, bots and spiders or other crawlers, irregular patterns, etc).
   * You're not charged for them, and they don't affect your account statistics.
   * See the help page at
   * https://support.google.com/campaignmanager/answer/6076504 for
   * details.
   * </pre>
   *
   * <code>optional double general_invalid_click_rate = 370;</code>
   * @return The generalInvalidClickRate.
   */
  double getGeneralInvalidClickRate();

  /**
   * <pre>
   * Number of general invalid clicks. These are a subset of your invalid clicks
   * that are detected through routine means of filtration (such as known
   * invalid data-center traffic, bots and spiders or other crawlers, irregular
   * patterns, etc.). You're not charged for them, and they don't affect your
   * account statistics. See the help page at
   * https://support.google.com/campaignmanager/answer/6076504 for
   * details.
   * </pre>
   *
   * <code>optional int64 general_invalid_clicks = 371;</code>
   * @return Whether the generalInvalidClicks field is set.
   */
  boolean hasGeneralInvalidClicks();
  /**
   * <pre>
   * Number of general invalid clicks. These are a subset of your invalid clicks
   * that are detected through routine means of filtration (such as known
   * invalid data-center traffic, bots and spiders or other crawlers, irregular
   * patterns, etc.). You're not charged for them, and they don't affect your
   * account statistics. See the help page at
   * https://support.google.com/campaignmanager/answer/6076504 for
   * details.
   * </pre>
   *
   * <code>optional int64 general_invalid_clicks = 371;</code>
   * @return The generalInvalidClicks.
   */
  long getGeneralInvalidClicks();

  /**
   * <pre>
   * Number of message chats initiated for Click To Message impressions that
   * were message tracking eligible.
   * </pre>
   *
   * <code>optional int64 message_chats = 226;</code>
   * @return Whether the messageChats field is set.
   */
  boolean hasMessageChats();
  /**
   * <pre>
   * Number of message chats initiated for Click To Message impressions that
   * were message tracking eligible.
   * </pre>
   *
   * <code>optional int64 message_chats = 226;</code>
   * @return The messageChats.
   */
  long getMessageChats();

  /**
   * <pre>
   * Number of Click To Message impressions that were message tracking eligible.
   * </pre>
   *
   * <code>optional int64 message_impressions = 227;</code>
   * @return Whether the messageImpressions field is set.
   */
  boolean hasMessageImpressions();
  /**
   * <pre>
   * Number of Click To Message impressions that were message tracking eligible.
   * </pre>
   *
   * <code>optional int64 message_impressions = 227;</code>
   * @return The messageImpressions.
   */
  long getMessageImpressions();

  /**
   * <pre>
   * Number of message chats initiated (message_chats) divided by the number
   * of message impressions (message_impressions).
   * Rate at which a user initiates a message chat from an ad impression with
   * a messaging option and message tracking enabled.
   * Note that this rate can be more than 1.0 for a given message impression.
   * </pre>
   *
   * <code>optional double message_chat_rate = 228;</code>
   * @return Whether the messageChatRate field is set.
   */
  boolean hasMessageChatRate();
  /**
   * <pre>
   * Number of message chats initiated (message_chats) divided by the number
   * of message impressions (message_impressions).
   * Rate at which a user initiates a message chat from an ad impression with
   * a messaging option and message tracking enabled.
   * Note that this rate can be more than 1.0 for a given message impression.
   * </pre>
   *
   * <code>optional double message_chat_rate = 228;</code>
   * @return The messageChatRate.
   */
  double getMessageChatRate();

  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return Whether the mobileFriendlyClicksPercentage field is set.
   */
  boolean hasMobileFriendlyClicksPercentage();
  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return The mobileFriendlyClicksPercentage.
   */
  double getMobileFriendlyClicksPercentage();

  /**
   * <pre>
   * Total optimization score uplift of all recommendations.
   * </pre>
   *
   * <code>optional double optimization_score_uplift = 247;</code>
   * @return Whether the optimizationScoreUplift field is set.
   */
  boolean hasOptimizationScoreUplift();
  /**
   * <pre>
   * Total optimization score uplift of all recommendations.
   * </pre>
   *
   * <code>optional double optimization_score_uplift = 247;</code>
   * @return The optimizationScoreUplift.
   */
  double getOptimizationScoreUplift();

  /**
   * <pre>
   * URL for the optimization score page in the Google Ads web interface.
   * This metric can be selected from `customer` or `campaign`, and can be
   * segmented by `segments.recommendation_type`. For example, `SELECT
   * metrics.optimization_score_url, segments.recommendation_type FROM
   * customer` will return a URL for each unique (customer, recommendation_type)
   * combination.
   * </pre>
   *
   * <code>optional string optimization_score_url = 248;</code>
   * @return Whether the optimizationScoreUrl field is set.
   */
  boolean hasOptimizationScoreUrl();
  /**
   * <pre>
   * URL for the optimization score page in the Google Ads web interface.
   * This metric can be selected from `customer` or `campaign`, and can be
   * segmented by `segments.recommendation_type`. For example, `SELECT
   * metrics.optimization_score_url, segments.recommendation_type FROM
   * customer` will return a URL for each unique (customer, recommendation_type)
   * combination.
   * </pre>
   *
   * <code>optional string optimization_score_url = 248;</code>
   * @return The optimizationScoreUrl.
   */
  java.lang.String getOptimizationScoreUrl();
  /**
   * <pre>
   * URL for the optimization score page in the Google Ads web interface.
   * This metric can be selected from `customer` or `campaign`, and can be
   * segmented by `segments.recommendation_type`. For example, `SELECT
   * metrics.optimization_score_url, segments.recommendation_type FROM
   * customer` will return a URL for each unique (customer, recommendation_type)
   * combination.
   * </pre>
   *
   * <code>optional string optimization_score_url = 248;</code>
   * @return The bytes for optimizationScoreUrl.
   */
  com.google.protobuf.ByteString
      getOptimizationScoreUrlBytes();

  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results for a particular query. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 organic_clicks = 230;</code>
   * @return Whether the organicClicks field is set.
   */
  boolean hasOrganicClicks();
  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results for a particular query. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 organic_clicks = 230;</code>
   * @return The organicClicks.
   */
  long getOrganicClicks();

  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results (organic_clicks) divided by the total number of searches that
   * returned pages from your site (organic_queries). See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional double organic_clicks_per_query = 231;</code>
   * @return Whether the organicClicksPerQuery field is set.
   */
  boolean hasOrganicClicksPerQuery();
  /**
   * <pre>
   * The number of times someone clicked your site's listing in the unpaid
   * results (organic_clicks) divided by the total number of searches that
   * returned pages from your site (organic_queries). See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional double organic_clicks_per_query = 231;</code>
   * @return The organicClicksPerQuery.
   */
  double getOrganicClicksPerQuery();

  /**
   * <pre>
   * The number of listings for your site in the unpaid search results. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>optional int64 organic_impressions = 232;</code>
   * @return Whether the organicImpressions field is set.
   */
  boolean hasOrganicImpressions();
  /**
   * <pre>
   * The number of listings for your site in the unpaid search results. See the
   * help page at https://support.google.com/google-ads/answer/3097241 for
   * details.
   * </pre>
   *
   * <code>optional int64 organic_impressions = 232;</code>
   * @return The organicImpressions.
   */
  long getOrganicImpressions();

  /**
   * <pre>
   * The number of times a page from your site was listed in the unpaid search
   * results (organic_impressions) divided by the number of searches returning
   * your site's listing in the unpaid results (organic_queries). See the help
   * page at https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional double organic_impressions_per_query = 233;</code>
   * @return Whether the organicImpressionsPerQuery field is set.
   */
  boolean hasOrganicImpressionsPerQuery();
  /**
   * <pre>
   * The number of times a page from your site was listed in the unpaid search
   * results (organic_impressions) divided by the number of searches returning
   * your site's listing in the unpaid results (organic_queries). See the help
   * page at https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional double organic_impressions_per_query = 233;</code>
   * @return The organicImpressionsPerQuery.
   */
  double getOrganicImpressionsPerQuery();

  /**
   * <pre>
   * The total number of searches that returned your site's listing in the
   * unpaid results. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 organic_queries = 234;</code>
   * @return Whether the organicQueries field is set.
   */
  boolean hasOrganicQueries();
  /**
   * <pre>
   * The total number of searches that returned your site's listing in the
   * unpaid results. See the help page at
   * https://support.google.com/google-ads/answer/3097241 for details.
   * </pre>
   *
   * <code>optional int64 organic_queries = 234;</code>
   * @return The organicQueries.
   */
  long getOrganicQueries();

  /**
   * <pre>
   * Percentage of first-time sessions (from people who had never visited your
   * site before). Imported from Google Analytics.
   * </pre>
   *
   * <code>optional double percent_new_visitors = 235;</code>
   * @return Whether the percentNewVisitors field is set.
   */
  boolean hasPercentNewVisitors();
  /**
   * <pre>
   * Percentage of first-time sessions (from people who had never visited your
   * site before). Imported from Google Analytics.
   * </pre>
   *
   * <code>optional double percent_new_visitors = 235;</code>
   * @return The percentNewVisitors.
   */
  double getPercentNewVisitors();

  /**
   * <pre>
   * Number of offline phone calls.
   * </pre>
   *
   * <code>optional int64 phone_calls = 236;</code>
   * @return Whether the phoneCalls field is set.
   */
  boolean hasPhoneCalls();
  /**
   * <pre>
   * Number of offline phone calls.
   * </pre>
   *
   * <code>optional int64 phone_calls = 236;</code>
   * @return The phoneCalls.
   */
  long getPhoneCalls();

  /**
   * <pre>
   * Number of offline phone impressions.
   * </pre>
   *
   * <code>optional int64 phone_impressions = 237;</code>
   * @return Whether the phoneImpressions field is set.
   */
  boolean hasPhoneImpressions();
  /**
   * <pre>
   * Number of offline phone impressions.
   * </pre>
   *
   * <code>optional int64 phone_impressions = 237;</code>
   * @return The phoneImpressions.
   */
  long getPhoneImpressions();

  /**
   * <pre>
   * Number of phone calls received (phone_calls) divided by the number of
   * times your phone number is shown (phone_impressions).
   * </pre>
   *
   * <code>optional double phone_through_rate = 238;</code>
   * @return Whether the phoneThroughRate field is set.
   */
  boolean hasPhoneThroughRate();
  /**
   * <pre>
   * Number of phone calls received (phone_calls) divided by the number of
   * times your phone number is shown (phone_impressions).
   * </pre>
   *
   * <code>optional double phone_through_rate = 238;</code>
   * @return The phoneThroughRate.
   */
  double getPhoneThroughRate();

  /**
   * <pre>
   * Your clickthrough rate (Ctr) divided by the average clickthrough rate of
   * all advertisers on the websites that show your ads. Measures how your ads
   * perform on Display Network sites compared to other ads on the same sites.
   * </pre>
   *
   * <code>optional double relative_ctr = 239;</code>
   * @return Whether the relativeCtr field is set.
   */
  boolean hasRelativeCtr();
  /**
   * <pre>
   * Your clickthrough rate (Ctr) divided by the average clickthrough rate of
   * all advertisers on the websites that show your ads. Measures how your ads
   * perform on Display Network sites compared to other ads on the same sites.
   * </pre>
   *
   * <code>optional double relative_ctr = 239;</code>
   * @return The relativeCtr.
   */
  double getRelativeCtr();

  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/google-ads/answer/7501826
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return Whether the searchAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/google-ads/answer/7501826
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return The searchAbsoluteTopImpressionShare.
   */
  double getSearchAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return Whether the searchBudgetLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return The searchBudgetLostAbsoluteTopImpressionShare.
   */
  double getSearchBudgetLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return Whether the searchBudgetLostImpressionShare field is set.
   */
  boolean hasSearchBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return The searchBudgetLostImpressionShare.
   */
  double getSearchBudgetLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return Whether the searchBudgetLostTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return The searchBudgetLostTopImpressionShare.
   */
  double getSearchBudgetLostTopImpressionShare();

  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return Whether the searchClickShare field is set.
   */
  boolean hasSearchClickShare();
  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return The searchClickShare.
   */
  double getSearchClickShare();

  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return Whether the searchExactMatchImpressionShare field is set.
   */
  boolean hasSearchExactMatchImpressionShare();
  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return The searchExactMatchImpressionShare.
   */
  double getSearchExactMatchImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return Whether the searchImpressionShare field is set.
   */
  boolean hasSearchImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return The searchImpressionShare.
   */
  double getSearchImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return Whether the searchRankLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchRankLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return The searchRankLostAbsoluteTopImpressionShare.
   */
  double getSearchRankLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return Whether the searchRankLostImpressionShare field is set.
   */
  boolean hasSearchRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return The searchRankLostImpressionShare.
   */
  double getSearchRankLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return Whether the searchRankLostTopImpressionShare field is set.
   */
  boolean hasSearchRankLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return The searchRankLostTopImpressionShare.
   */
  double getSearchRankLostTopImpressionShare();

  /**
   * <pre>
   * The impressions you've received among the top ads compared to the estimated
   * number of impressions you were eligible to receive among the top ads.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   *
   * Top ads are generally above the top organic results, although they may show
   * below the top organic results on certain queries.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return Whether the searchTopImpressionShare field is set.
   */
  boolean hasSearchTopImpressionShare();
  /**
   * <pre>
   * The impressions you've received among the top ads compared to the estimated
   * number of impressions you were eligible to receive among the top ads.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   *
   * Top ads are generally above the top organic results, although they may show
   * below the top organic results on certain queries.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return The searchTopImpressionShare.
   */
  double getSearchTopImpressionShare();

  /**
   * <pre>
   * Search volume range for a search term insight category.
   * </pre>
   *
   * <code>optional .google.ads.googleads.v19.common.SearchVolumeRange search_volume = 295;</code>
   * @return Whether the searchVolume field is set.
   */
  boolean hasSearchVolume();
  /**
   * <pre>
   * Search volume range for a search term insight category.
   * </pre>
   *
   * <code>optional .google.ads.googleads.v19.common.SearchVolumeRange search_volume = 295;</code>
   * @return The searchVolume.
   */
  com.google.ads.googleads.v19.common.SearchVolumeRange getSearchVolume();
  /**
   * <pre>
   * Search volume range for a search term insight category.
   * </pre>
   *
   * <code>optional .google.ads.googleads.v19.common.SearchVolumeRange search_volume = 295;</code>
   */
  com.google.ads.googleads.v19.common.SearchVolumeRangeOrBuilder getSearchVolumeOrBuilder();

  /**
   * <pre>
   * A measure of how quickly your page loads after clicks on your mobile ads.
   * The score is a range from 1 to 10, 10 being the fastest.
   * </pre>
   *
   * <code>optional int64 speed_score = 147;</code>
   * @return Whether the speedScore field is set.
   */
  boolean hasSpeedScore();
  /**
   * <pre>
   * A measure of how quickly your page loads after clicks on your mobile ads.
   * The score is a range from 1 to 10, 10 being the fastest.
   * </pre>
   *
   * <code>optional int64 speed_score = 147;</code>
   * @return The speedScore.
   */
  long getSpeedScore();

  /**
   * <pre>
   * The average Target CPA, or unset if not available (for example, for
   * campaigns that had traffic from portfolio bidding strategies or non-tCPA).
   * </pre>
   *
   * <code>optional int64 average_target_cpa_micros = 290;</code>
   * @return Whether the averageTargetCpaMicros field is set.
   */
  boolean hasAverageTargetCpaMicros();
  /**
   * <pre>
   * The average Target CPA, or unset if not available (for example, for
   * campaigns that had traffic from portfolio bidding strategies or non-tCPA).
   * </pre>
   *
   * <code>optional int64 average_target_cpa_micros = 290;</code>
   * @return The averageTargetCpaMicros.
   */
  long getAverageTargetCpaMicros();

  /**
   * <pre>
   * The average Target ROAS, or unset if not available (for example, for
   * campaigns that had traffic from portfolio bidding strategies or non-tROAS).
   * </pre>
   *
   * <code>optional double average_target_roas = 250;</code>
   * @return Whether the averageTargetRoas field is set.
   */
  boolean hasAverageTargetRoas();
  /**
   * <pre>
   * The average Target ROAS, or unset if not available (for example, for
   * campaigns that had traffic from portfolio bidding strategies or non-tROAS).
   * </pre>
   *
   * <code>optional double average_target_roas = 250;</code>
   * @return The averageTargetRoas.
   */
  double getAverageTargetRoas();

  /**
   * <pre>
   * The percent of your ad impressions that are shown adjacent to the top
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return Whether the topImpressionPercentage field is set.
   */
  boolean hasTopImpressionPercentage();
  /**
   * <pre>
   * The percent of your ad impressions that are shown adjacent to the top
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return The topImpressionPercentage.
   */
  double getTopImpressionPercentage();

  /**
   * <pre>
   * The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
   * that reach a valid AMP page.
   * </pre>
   *
   * <code>optional double valid_accelerated_mobile_pages_clicks_percentage = 149;</code>
   * @return Whether the validAcceleratedMobilePagesClicksPercentage field is set.
   */
  boolean hasValidAcceleratedMobilePagesClicksPercentage();
  /**
   * <pre>
   * The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
   * that reach a valid AMP page.
   * </pre>
   *
   * <code>optional double valid_accelerated_mobile_pages_clicks_percentage = 149;</code>
   * @return The validAcceleratedMobilePagesClicksPercentage.
   */
  double getValidAcceleratedMobilePagesClicksPercentage();

  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return Whether the valuePerAllConversions field is set.
   */
  boolean hasValuePerAllConversions();
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return The valuePerAllConversions.
   */
  double getValuePerAllConversions();

  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return Whether the valuePerAllConversionsByConversionDate field is set.
   */
  boolean hasValuePerAllConversionsByConversionDate();
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return The valuePerAllConversionsByConversionDate.
   */
  double getValuePerAllConversionsByConversionDate();

  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>optional double value_per_conversion = 151;</code>
   * @return Whether the valuePerConversion field is set.
   */
  boolean hasValuePerConversion();
  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions.
   * </pre>
   *
   * <code>optional double value_per_conversion = 151;</code>
   * @return The valuePerConversion.
   */
  double getValuePerConversion();

  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions. When this column is selected with
   * date, the values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 245;</code>
   * @return Whether the valuePerConversionsByConversionDate field is set.
   */
  boolean hasValuePerConversionsByConversionDate();
  /**
   * <pre>
   * The value of conversions divided by the number of conversions. This only
   * includes conversion actions which include_in_conversions_metric attribute
   * is set to true. If you use conversion-based bidding, your bid strategies
   * will optimize for these conversions. When this column is selected with
   * date, the values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/google-ads/answer/9549009.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 245;</code>
   * @return The valuePerConversionsByConversionDate.
   */
  double getValuePerConversionsByConversionDate();

  /**
   * <pre>
   * The value of current model attributed conversions divided by the number of
   * the conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double value_per_current_model_attributed_conversion = 152;</code>
   * @return Whether the valuePerCurrentModelAttributedConversion field is set.
   */
  boolean hasValuePerCurrentModelAttributedConversion();
  /**
   * <pre>
   * The value of current model attributed conversions divided by the number of
   * the conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double value_per_current_model_attributed_conversion = 152;</code>
   * @return The valuePerCurrentModelAttributedConversion.
   */
  double getValuePerCurrentModelAttributedConversion();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched all of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p100_rate = 132;</code>
   * @return Whether the videoQuartileP100Rate field is set.
   */
  boolean hasVideoQuartileP100Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched all of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p100_rate = 132;</code>
   * @return The videoQuartileP100Rate.
   */
  double getVideoQuartileP100Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 25% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p25_rate = 133;</code>
   * @return Whether the videoQuartileP25Rate field is set.
   */
  boolean hasVideoQuartileP25Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 25% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p25_rate = 133;</code>
   * @return The videoQuartileP25Rate.
   */
  double getVideoQuartileP25Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 50% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p50_rate = 134;</code>
   * @return Whether the videoQuartileP50Rate field is set.
   */
  boolean hasVideoQuartileP50Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 50% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p50_rate = 134;</code>
   * @return The videoQuartileP50Rate.
   */
  double getVideoQuartileP50Rate();

  /**
   * <pre>
   * Percentage of impressions where the viewer watched 75% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p75_rate = 135;</code>
   * @return Whether the videoQuartileP75Rate field is set.
   */
  boolean hasVideoQuartileP75Rate();
  /**
   * <pre>
   * Percentage of impressions where the viewer watched 75% of your video.
   * </pre>
   *
   * <code>optional double video_quartile_p75_rate = 135;</code>
   * @return The videoQuartileP75Rate.
   */
  double getVideoQuartileP75Rate();

  /**
   * <pre>
   * The number of views your TrueView video ad receives divided by its number
   * of impressions, including thumbnail impressions for TrueView in-display
   * ads.
   * </pre>
   *
   * <code>optional double video_view_rate = 153;</code>
   * @return Whether the videoViewRate field is set.
   */
  boolean hasVideoViewRate();
  /**
   * <pre>
   * The number of views your TrueView video ad receives divided by its number
   * of impressions, including thumbnail impressions for TrueView in-display
   * ads.
   * </pre>
   *
   * <code>optional double video_view_rate = 153;</code>
   * @return The videoViewRate.
   */
  double getVideoViewRate();

  /**
   * <pre>
   * The number of times your video ads were viewed.
   * </pre>
   *
   * <code>optional int64 video_views = 154;</code>
   * @return Whether the videoViews field is set.
   */
  boolean hasVideoViews();
  /**
   * <pre>
   * The number of times your video ads were viewed.
   * </pre>
   *
   * <code>optional int64 video_views = 154;</code>
   * @return The videoViews.
   */
  long getVideoViews();

  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 view_through_conversions = 155;</code>
   * @return Whether the viewThroughConversions field is set.
   */
  boolean hasViewThroughConversions();
  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 view_through_conversions = 155;</code>
   * @return The viewThroughConversions.
   */
  long getViewThroughConversions();

  /**
   * <pre>
   * The number of iOS Store Kit Ad Network conversions.
   * </pre>
   *
   * <code>int64 sk_ad_network_installs = 246;</code>
   * @return The skAdNetworkInstalls.
   */
  long getSkAdNetworkInstalls();

  /**
   * <pre>
   * The total number of iOS Store Kit Ad Network conversions.
   * </pre>
   *
   * <code>int64 sk_ad_network_total_conversions = 292;</code>
   * @return The skAdNetworkTotalConversions.
   */
  long getSkAdNetworkTotalConversions();

  /**
   * <pre>
   * Clicks from properties not owned by the publisher for which the traffic
   * the publisher has paid for or acquired through incentivized activity
   * </pre>
   *
   * <code>int64 publisher_purchased_clicks = 264;</code>
   * @return The publisherPurchasedClicks.
   */
  long getPublisherPurchasedClicks();

  /**
   * <pre>
   * Clicks from properties for which the traffic the publisher has not paid
   * for or acquired through incentivized activity
   * </pre>
   *
   * <code>int64 publisher_organic_clicks = 265;</code>
   * @return The publisherOrganicClicks.
   */
  long getPublisherOrganicClicks();

  /**
   * <pre>
   * Clicks from traffic which is not identified as "Publisher Purchased" or
   * "Publisher Organic"
   * </pre>
   *
   * <code>int64 publisher_unknown_clicks = 266;</code>
   * @return The publisherUnknownClicks.
   */
  long getPublisherUnknownClicks();

  /**
   * <pre>
   * Number of call button clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_click_to_call = 267;</code>
   * @return Whether the allConversionsFromLocationAssetClickToCall field is set.
   */
  boolean hasAllConversionsFromLocationAssetClickToCall();
  /**
   * <pre>
   * Number of call button clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_click_to_call = 267;</code>
   * @return The allConversionsFromLocationAssetClickToCall.
   */
  double getAllConversionsFromLocationAssetClickToCall();

  /**
   * <pre>
   * Number of driving directions clicks on any location surface after a
   * chargeable ad event (click or impression). This measure is coming
   * from Asset based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_directions = 268;</code>
   * @return Whether the allConversionsFromLocationAssetDirections field is set.
   */
  boolean hasAllConversionsFromLocationAssetDirections();
  /**
   * <pre>
   * Number of driving directions clicks on any location surface after a
   * chargeable ad event (click or impression). This measure is coming
   * from Asset based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_directions = 268;</code>
   * @return The allConversionsFromLocationAssetDirections.
   */
  double getAllConversionsFromLocationAssetDirections();

  /**
   * <pre>
   * Number of menu link clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_menu = 269;</code>
   * @return Whether the allConversionsFromLocationAssetMenu field is set.
   */
  boolean hasAllConversionsFromLocationAssetMenu();
  /**
   * <pre>
   * Number of menu link clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_menu = 269;</code>
   * @return The allConversionsFromLocationAssetMenu.
   */
  double getAllConversionsFromLocationAssetMenu();

  /**
   * <pre>
   * Number of order clicks on any location surface after a chargeable ad event
   * (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_order = 270;</code>
   * @return Whether the allConversionsFromLocationAssetOrder field is set.
   */
  boolean hasAllConversionsFromLocationAssetOrder();
  /**
   * <pre>
   * Number of order clicks on any location surface after a chargeable ad event
   * (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_order = 270;</code>
   * @return The allConversionsFromLocationAssetOrder.
   */
  double getAllConversionsFromLocationAssetOrder();

  /**
   * <pre>
   * Number of other types of local action clicks on any location surface after
   * a chargeable ad event (click or impression). This measure is coming
   * from Asset based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_other_engagement = 271;</code>
   * @return Whether the allConversionsFromLocationAssetOtherEngagement field is set.
   */
  boolean hasAllConversionsFromLocationAssetOtherEngagement();
  /**
   * <pre>
   * Number of other types of local action clicks on any location surface after
   * a chargeable ad event (click or impression). This measure is coming
   * from Asset based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_other_engagement = 271;</code>
   * @return The allConversionsFromLocationAssetOtherEngagement.
   */
  double getAllConversionsFromLocationAssetOtherEngagement();

  /**
   * <pre>
   * Estimated number of visits to the store after a chargeable
   * ad event (click or impression). This measure is coming from Asset
   * based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_store_visits = 272;</code>
   * @return Whether the allConversionsFromLocationAssetStoreVisits field is set.
   */
  boolean hasAllConversionsFromLocationAssetStoreVisits();
  /**
   * <pre>
   * Estimated number of visits to the store after a chargeable
   * ad event (click or impression). This measure is coming from Asset
   * based location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_store_visits = 272;</code>
   * @return The allConversionsFromLocationAssetStoreVisits.
   */
  double getAllConversionsFromLocationAssetStoreVisits();

  /**
   * <pre>
   * Number of website URL clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_website = 273;</code>
   * @return Whether the allConversionsFromLocationAssetWebsite field is set.
   */
  boolean hasAllConversionsFromLocationAssetWebsite();
  /**
   * <pre>
   * Number of website URL clicks on any location surface after a chargeable ad
   * event (click or impression). This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional double all_conversions_from_location_asset_website = 273;</code>
   * @return The allConversionsFromLocationAssetWebsite.
   */
  double getAllConversionsFromLocationAssetWebsite();

  /**
   * <pre>
   * Number of impressions in which the store location was shown or the location
   * was used for targeting. This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional int64 eligible_impressions_from_location_asset_store_reach = 274;</code>
   * @return Whether the eligibleImpressionsFromLocationAssetStoreReach field is set.
   */
  boolean hasEligibleImpressionsFromLocationAssetStoreReach();
  /**
   * <pre>
   * Number of impressions in which the store location was shown or the location
   * was used for targeting. This measure is coming from Asset based
   * location.
   * </pre>
   *
   * <code>optional int64 eligible_impressions_from_location_asset_store_reach = 274;</code>
   * @return The eligibleImpressionsFromLocationAssetStoreReach.
   */
  long getEligibleImpressionsFromLocationAssetStoreReach();

  /**
   * <pre>
   * Number of call button clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_click_to_call = 275;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetClickToCall field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetClickToCall();
  /**
   * <pre>
   * Number of call button clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_click_to_call = 275;</code>
   * @return The viewThroughConversionsFromLocationAssetClickToCall.
   */
  double getViewThroughConversionsFromLocationAssetClickToCall();

  /**
   * <pre>
   * Number of driving directions clicks on any location surface after an
   * impression. This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_directions = 276;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetDirections field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetDirections();
  /**
   * <pre>
   * Number of driving directions clicks on any location surface after an
   * impression. This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_directions = 276;</code>
   * @return The viewThroughConversionsFromLocationAssetDirections.
   */
  double getViewThroughConversionsFromLocationAssetDirections();

  /**
   * <pre>
   * Number of menu link clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_menu = 277;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetMenu field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetMenu();
  /**
   * <pre>
   * Number of menu link clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_menu = 277;</code>
   * @return The viewThroughConversionsFromLocationAssetMenu.
   */
  double getViewThroughConversionsFromLocationAssetMenu();

  /**
   * <pre>
   * Number of order clicks on any location surface after an impression. This
   * measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_order = 278;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetOrder field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetOrder();
  /**
   * <pre>
   * Number of order clicks on any location surface after an impression. This
   * measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_order = 278;</code>
   * @return The viewThroughConversionsFromLocationAssetOrder.
   */
  double getViewThroughConversionsFromLocationAssetOrder();

  /**
   * <pre>
   * Number of other types of local action clicks on any location surface after
   * an impression. This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_other_engagement = 279;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetOtherEngagement field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetOtherEngagement();
  /**
   * <pre>
   * Number of other types of local action clicks on any location surface after
   * an impression. This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_other_engagement = 279;</code>
   * @return The viewThroughConversionsFromLocationAssetOtherEngagement.
   */
  double getViewThroughConversionsFromLocationAssetOtherEngagement();

  /**
   * <pre>
   * Estimated number of visits to the store after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_store_visits = 280;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetStoreVisits field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetStoreVisits();
  /**
   * <pre>
   * Estimated number of visits to the store after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_store_visits = 280;</code>
   * @return The viewThroughConversionsFromLocationAssetStoreVisits.
   */
  double getViewThroughConversionsFromLocationAssetStoreVisits();

  /**
   * <pre>
   * Number of website URL clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_website = 281;</code>
   * @return Whether the viewThroughConversionsFromLocationAssetWebsite field is set.
   */
  boolean hasViewThroughConversionsFromLocationAssetWebsite();
  /**
   * <pre>
   * Number of website URL clicks on any location surface after an impression.
   * This measure is coming from Asset based location.
   * </pre>
   *
   * <code>optional double view_through_conversions_from_location_asset_website = 281;</code>
   * @return The viewThroughConversionsFromLocationAssetWebsite.
   */
  double getViewThroughConversionsFromLocationAssetWebsite();

  /**
   * <pre>
   * Orders is the total number of purchase conversions you received attributed
   * to your ads.
   * How it works: You report conversions with cart data for
   * completed purchases on your website. If a conversion is attributed to
   * previous interactions with your ads (clicks for text or Shopping ads, views
   * for video ads etc.) it's counted as an order.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt in an order on your website. Even though they bought 2
   * products, this would count as 1 order.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double orders = 296;</code>
   * @return Whether the orders field is set.
   */
  boolean hasOrders();
  /**
   * <pre>
   * Orders is the total number of purchase conversions you received attributed
   * to your ads.
   * How it works: You report conversions with cart data for
   * completed purchases on your website. If a conversion is attributed to
   * previous interactions with your ads (clicks for text or Shopping ads, views
   * for video ads etc.) it's counted as an order.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt in an order on your website. Even though they bought 2
   * products, this would count as 1 order.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double orders = 296;</code>
   * @return The orders.
   */
  double getOrders();

  /**
   * <pre>
   * Average order value is the average revenue you made per order attributed to
   * your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Average order value is the total revenue from your orders
   * divided by the total number of orders.
   * Example: You received 3 orders which made $10, $15 and $20 worth of
   * revenue. The average order value is $15 = ($10 + $15 + $20)/3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 average_order_value_micros = 297;</code>
   * @return Whether the averageOrderValueMicros field is set.
   */
  boolean hasAverageOrderValueMicros();
  /**
   * <pre>
   * Average order value is the average revenue you made per order attributed to
   * your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Average order value is the total revenue from your orders
   * divided by the total number of orders.
   * Example: You received 3 orders which made $10, $15 and $20 worth of
   * revenue. The average order value is $15 = ($10 + $15 + $20)/3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 average_order_value_micros = 297;</code>
   * @return The averageOrderValueMicros.
   */
  long getAverageOrderValueMicros();

  /**
   * <pre>
   * Average cart size is the average number of products in each order
   * attributed to your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Average cart size is the total number of products sold
   * divided by the total number of orders you received.
   * Example: You received 2 orders, the first included 3 products and the
   * second included 2. The average cart size is 2.5 products = (3+2)/2.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double average_cart_size = 298;</code>
   * @return Whether the averageCartSize field is set.
   */
  boolean hasAverageCartSize();
  /**
   * <pre>
   * Average cart size is the average number of products in each order
   * attributed to your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Average cart size is the total number of products sold
   * divided by the total number of orders you received.
   * Example: You received 2 orders, the first included 3 products and the
   * second included 2. The average cart size is 2.5 products = (3+2)/2.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double average_cart_size = 298;</code>
   * @return The averageCartSize.
   */
  double getAverageCartSize();

  /**
   * <pre>
   * Cost of goods sold (COGS) is the total cost of the products you sold in
   * orders attributed to your ads.
   * How it works: You can add a cost of goods sold value to every product in
   * Merchant Center. If you report conversions with cart data, the products you
   * sold are matched with their cost of goods sold value and this can be used
   * to calculate the gross profit you made on each order.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The cost of goods sold for this order
   * is $8 = $3 + $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cost_of_goods_sold_micros = 299;</code>
   * @return Whether the costOfGoodsSoldMicros field is set.
   */
  boolean hasCostOfGoodsSoldMicros();
  /**
   * <pre>
   * Cost of goods sold (COGS) is the total cost of the products you sold in
   * orders attributed to your ads.
   * How it works: You can add a cost of goods sold value to every product in
   * Merchant Center. If you report conversions with cart data, the products you
   * sold are matched with their cost of goods sold value and this can be used
   * to calculate the gross profit you made on each order.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The cost of goods sold for this order
   * is $8 = $3 + $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cost_of_goods_sold_micros = 299;</code>
   * @return The costOfGoodsSoldMicros.
   */
  long getCostOfGoodsSoldMicros();

  /**
   * <pre>
   * Gross profit is the profit you made from orders attributed to your ads
   * minus the cost of goods sold (COGS).
   * How it works: Gross profit is the revenue you made from sales attributed to
   * your ads minus cost of goods sold. Gross profit calculations only include
   * products that have a cost of goods sold value in Merchant Center.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt in an order from your website. The hat is priced $10 and
   * the shirt is priced $20. The hat has a cost of goods sold value of $3, but
   * the shirt has no cost of goods sold value. Gross profit for this order will
   * only take into account the hat, so it's $7 = $10 - $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 gross_profit_micros = 300;</code>
   * @return Whether the grossProfitMicros field is set.
   */
  boolean hasGrossProfitMicros();
  /**
   * <pre>
   * Gross profit is the profit you made from orders attributed to your ads
   * minus the cost of goods sold (COGS).
   * How it works: Gross profit is the revenue you made from sales attributed to
   * your ads minus cost of goods sold. Gross profit calculations only include
   * products that have a cost of goods sold value in Merchant Center.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt in an order from your website. The hat is priced $10 and
   * the shirt is priced $20. The hat has a cost of goods sold value of $3, but
   * the shirt has no cost of goods sold value. Gross profit for this order will
   * only take into account the hat, so it's $7 = $10 - $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 gross_profit_micros = 300;</code>
   * @return The grossProfitMicros.
   */
  long getGrossProfitMicros();

  /**
   * <pre>
   * Gross profit margin is the percentage gross profit you made from orders
   * attributed to your ads, after taking out the cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Gross profit margin is the gross profit you made divided
   * by your total revenue and multiplied by 100%. Gross profit margin
   * calculations only include products that have a cost of goods sold value in
   * Merchant Center.
   * Example: Someone bought a hat and a shirt in an order on your website. The
   * hat is priced $10 and has a cost of goods sold value of $3. The shirt is
   * priced $20 but has no cost of goods sold value. Gross profit margin for
   * this order will only take into account the hat because it has a cost of
   * goods sold value, so it's 70% = ($10 - $3)/$10 x 100%.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double gross_profit_margin = 301;</code>
   * @return Whether the grossProfitMargin field is set.
   */
  boolean hasGrossProfitMargin();
  /**
   * <pre>
   * Gross profit margin is the percentage gross profit you made from orders
   * attributed to your ads, after taking out the cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Gross profit margin is the gross profit you made divided
   * by your total revenue and multiplied by 100%. Gross profit margin
   * calculations only include products that have a cost of goods sold value in
   * Merchant Center.
   * Example: Someone bought a hat and a shirt in an order on your website. The
   * hat is priced $10 and has a cost of goods sold value of $3. The shirt is
   * priced $20 but has no cost of goods sold value. Gross profit margin for
   * this order will only take into account the hat because it has a cost of
   * goods sold value, so it's 70% = ($10 - $3)/$10 x 100%.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double gross_profit_margin = 301;</code>
   * @return The grossProfitMargin.
   */
  double getGrossProfitMargin();

  /**
   * <pre>
   * Revenue is the total amount you made from orders attributed to your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Revenue is the total value of all the orders you received
   * attributed to your ads, minus any discount.
   * Example: Someone clicked on a Shopping ad  for a hat then bought the same
   * hat and a shirt in an order from your website. The hat is priced $10 and
   * the shirt is priced $20. The entire order has a $5 discount. The revenue
   * from this order is $25 = ($10 + $20) - $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 revenue_micros = 302;</code>
   * @return Whether the revenueMicros field is set.
   */
  boolean hasRevenueMicros();
  /**
   * <pre>
   * Revenue is the total amount you made from orders attributed to your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Revenue is the total value of all the orders you received
   * attributed to your ads, minus any discount.
   * Example: Someone clicked on a Shopping ad  for a hat then bought the same
   * hat and a shirt in an order from your website. The hat is priced $10 and
   * the shirt is priced $20. The entire order has a $5 discount. The revenue
   * from this order is $25 = ($10 + $20) - $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 revenue_micros = 302;</code>
   * @return The revenueMicros.
   */
  long getRevenueMicros();

  /**
   * <pre>
   * Units sold is the total number of products sold from orders attributed to
   * your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Units sold is the total number of products sold from all
   * orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The units sold in this order is 3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double units_sold = 303;</code>
   * @return Whether the unitsSold field is set.
   */
  boolean hasUnitsSold();
  /**
   * <pre>
   * Units sold is the total number of products sold from orders attributed to
   * your ads.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. Units sold is the total number of products sold from all
   * orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The units sold in this order is 3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double units_sold = 303;</code>
   * @return The unitsSold.
   */
  double getUnitsSold();

  /**
   * <pre>
   * Cross-sell cost of goods sold (COGS) is the total cost of products sold as
   * a result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell cost of goods sold is the total cost of
   * the products sold that weren't advertised.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The cross-sell cost of goods sold for
   * this order is $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_cost_of_goods_sold_micros = 304;</code>
   * @return Whether the crossSellCostOfGoodsSoldMicros field is set.
   */
  boolean hasCrossSellCostOfGoodsSoldMicros();
  /**
   * <pre>
   * Cross-sell cost of goods sold (COGS) is the total cost of products sold as
   * a result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell cost of goods sold is the total cost of
   * the products sold that weren't advertised.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The cross-sell cost of goods sold for
   * this order is $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_cost_of_goods_sold_micros = 304;</code>
   * @return The crossSellCostOfGoodsSoldMicros.
   */
  long getCrossSellCostOfGoodsSoldMicros();

  /**
   * <pre>
   * Cross-sell gross profit is the profit you made from products sold as a
   * result of advertising a different product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the purchase is a sold
   * product. If these products don't match then this is considered cross-sell.
   * Cross-sell gross profit is the revenue you made from cross-sell attributed
   * to your ads minus the cost of the goods sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The shirt is priced $20 and has a cost of goods sold value
   * of $5. The cross-sell gross profit of this order is $15 = $20 - $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_gross_profit_micros = 305;</code>
   * @return Whether the crossSellGrossProfitMicros field is set.
   */
  boolean hasCrossSellGrossProfitMicros();
  /**
   * <pre>
   * Cross-sell gross profit is the profit you made from products sold as a
   * result of advertising a different product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the purchase is a sold
   * product. If these products don't match then this is considered cross-sell.
   * Cross-sell gross profit is the revenue you made from cross-sell attributed
   * to your ads minus the cost of the goods sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The shirt is priced $20 and has a cost of goods sold value
   * of $5. The cross-sell gross profit of this order is $15 = $20 - $5.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_gross_profit_micros = 305;</code>
   * @return The crossSellGrossProfitMicros.
   */
  long getCrossSellGrossProfitMicros();

  /**
   * <pre>
   * Cross-sell revenue is the total amount you made from products sold as a
   * result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell revenue is the total value you made from
   * cross-sell attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and the shirt is priced $20. The
   * cross-sell revenue of this order is $20.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_revenue_micros = 306;</code>
   * @return Whether the crossSellRevenueMicros field is set.
   */
  boolean hasCrossSellRevenueMicros();
  /**
   * <pre>
   * Cross-sell revenue is the total amount you made from products sold as a
   * result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell revenue is the total value you made from
   * cross-sell attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and the shirt is priced $20. The
   * cross-sell revenue of this order is $20.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 cross_sell_revenue_micros = 306;</code>
   * @return The crossSellRevenueMicros.
   */
  long getCrossSellRevenueMicros();

  /**
   * <pre>
   * Cross-sell units sold is the total number of products sold as a result of
   * advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell units sold is the total number of
   * cross-sold products from all orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The cross-sell units sold in this order is 2.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double cross_sell_units_sold = 307;</code>
   * @return Whether the crossSellUnitsSold field is set.
   */
  boolean hasCrossSellUnitsSold();
  /**
   * <pre>
   * Cross-sell units sold is the total number of products sold as a result of
   * advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell units sold is the total number of
   * cross-sold products from all orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The cross-sell units sold in this order is 2.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double cross_sell_units_sold = 307;</code>
   * @return The crossSellUnitsSold.
   */
  double getCrossSellUnitsSold();

  /**
   * <pre>
   * Lead cost of goods sold (COGS) is the total cost of products sold as a
   * result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with has an associated
   * product (see Shopping Ads) then this product is considered the advertised
   * product. Any product included in the order the customer places is a sold
   * product. If the advertised and sold products match, then the cost of these
   * goods is counted under lead cost of goods sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The lead cost of goods sold for this
   * order is $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_cost_of_goods_sold_micros = 308;</code>
   * @return Whether the leadCostOfGoodsSoldMicros field is set.
   */
  boolean hasLeadCostOfGoodsSoldMicros();
  /**
   * <pre>
   * Lead cost of goods sold (COGS) is the total cost of products sold as a
   * result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with has an associated
   * product (see Shopping Ads) then this product is considered the advertised
   * product. Any product included in the order the customer places is a sold
   * product. If the advertised and sold products match, then the cost of these
   * goods is counted under lead cost of goods sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat has a cost of goods sold value of $3, the shirt
   * has a cost of goods sold value of $5. The lead cost of goods sold for this
   * order is $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_cost_of_goods_sold_micros = 308;</code>
   * @return The leadCostOfGoodsSoldMicros.
   */
  long getLeadCostOfGoodsSoldMicros();

  /**
   * <pre>
   * Lead gross profit is the profit you made from products sold as a result of
   * advertising the same product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the revenue you made from these sales minus the cost of goods sold is your
   * lead gross profit.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and has a cost of goods sold value
   * of $3. The lead gross profit of this order is $7 = $10 - $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_gross_profit_micros = 309;</code>
   * @return Whether the leadGrossProfitMicros field is set.
   */
  boolean hasLeadGrossProfitMicros();
  /**
   * <pre>
   * Lead gross profit is the profit you made from products sold as a result of
   * advertising the same product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the revenue you made from these sales minus the cost of goods sold is your
   * lead gross profit.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and has a cost of goods sold value
   * of $3. The lead gross profit of this order is $7 = $10 - $3.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_gross_profit_micros = 309;</code>
   * @return The leadGrossProfitMicros.
   */
  long getLeadGrossProfitMicros();

  /**
   * <pre>
   * Lead revenue is the total amount you made from products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total value you made from the sales of these products is shown under
   * lead revenue.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and the shirt is priced $20. The
   * lead revenue of this order is $10.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_revenue_micros = 310;</code>
   * @return Whether the leadRevenueMicros field is set.
   */
  boolean hasLeadRevenueMicros();
  /**
   * <pre>
   * Lead revenue is the total amount you made from products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total value you made from the sales of these products is shown under
   * lead revenue.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and the shirt is priced $20. The
   * lead revenue of this order is $10.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional int64 lead_revenue_micros = 310;</code>
   * @return The leadRevenueMicros.
   */
  long getLeadRevenueMicros();

  /**
   * <pre>
   * Lead units sold is the total number of products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total number of these products sold is shown under lead units sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The lead units sold in this order is 1.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double lead_units_sold = 311;</code>
   * @return Whether the leadUnitsSold field is set.
   */
  boolean hasLeadUnitsSold();
  /**
   * <pre>
   * Lead units sold is the total number of products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total number of these products sold is shown under lead units sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The lead units sold in this order is 1.
   * This metric is only available if you report conversions with cart data.
   * </pre>
   *
   * <code>optional double lead_units_sold = 311;</code>
   * @return The leadUnitsSold.
   */
  double getLeadUnitsSold();

  /**
   * <pre>
   * The number of unique users who saw your ad during the requested time
   * period. This metric cannot be aggregated, and can only be requested for
   * date ranges of 92 days or less. This metric is available for following
   * campaign types - Display, Video, Discovery and App.
   * </pre>
   *
   * <code>optional int64 unique_users = 319;</code>
   * @return Whether the uniqueUsers field is set.
   */
  boolean hasUniqueUsers();
  /**
   * <pre>
   * The number of unique users who saw your ad during the requested time
   * period. This metric cannot be aggregated, and can only be requested for
   * date ranges of 92 days or less. This metric is available for following
   * campaign types - Display, Video, Discovery and App.
   * </pre>
   *
   * <code>optional int64 unique_users = 319;</code>
   * @return The uniqueUsers.
   */
  long getUniqueUsers();

  /**
   * <pre>
   * The average number of times a unique user saw your ad during the requested
   * time period. This metric cannot be aggregated, and can only be requested
   * for date ranges of 92 days or less. This metric is available for following
   * campaign types - Display, Video, Discovery and App.
   * </pre>
   *
   * <code>optional double average_impression_frequency_per_user = 320;</code>
   * @return Whether the averageImpressionFrequencyPerUser field is set.
   */
  boolean hasAverageImpressionFrequencyPerUser();
  /**
   * <pre>
   * The average number of times a unique user saw your ad during the requested
   * time period. This metric cannot be aggregated, and can only be requested
   * for date ranges of 92 days or less. This metric is available for following
   * campaign types - Display, Video, Discovery and App.
   * </pre>
   *
   * <code>optional double average_impression_frequency_per_user = 320;</code>
   * @return The averageImpressionFrequencyPerUser.
   */
  double getAverageImpressionFrequencyPerUser();

  /**
   * <pre>
   * Number of linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>optional int64 linked_entities_count = 341;</code>
   * @return Whether the linkedEntitiesCount field is set.
   */
  boolean hasLinkedEntitiesCount();
  /**
   * <pre>
   * Number of linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>optional int64 linked_entities_count = 341;</code>
   * @return The linkedEntitiesCount.
   */
  long getLinkedEntitiesCount();

  /**
   * <pre>
   * A list of up to 20 sample linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string linked_sample_entities = 342;</code>
   * @return A list containing the linkedSampleEntities.
   */
  java.util.List<java.lang.String>
      getLinkedSampleEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string linked_sample_entities = 342;</code>
   * @return The count of linkedSampleEntities.
   */
  int getLinkedSampleEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string linked_sample_entities = 342;</code>
   * @param index The index of the element to return.
   * @return The linkedSampleEntities at the given index.
   */
  java.lang.String getLinkedSampleEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources in which the asset is used.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string linked_sample_entities = 342;</code>
   * @param index The index of the value to return.
   * @return The bytes of the linkedSampleEntities at the given index.
   */
  com.google.protobuf.ByteString
      getLinkedSampleEntitiesBytes(int index);

  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.BEST performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_best_performance_entities = 343;</code>
   * @return A list containing the sampleBestPerformanceEntities.
   */
  java.util.List<java.lang.String>
      getSampleBestPerformanceEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.BEST performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_best_performance_entities = 343;</code>
   * @return The count of sampleBestPerformanceEntities.
   */
  int getSampleBestPerformanceEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.BEST performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_best_performance_entities = 343;</code>
   * @param index The index of the element to return.
   * @return The sampleBestPerformanceEntities at the given index.
   */
  java.lang.String getSampleBestPerformanceEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.BEST performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_best_performance_entities = 343;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sampleBestPerformanceEntities at the given index.
   */
  com.google.protobuf.ByteString
      getSampleBestPerformanceEntitiesBytes(int index);

  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.GOOD performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_good_performance_entities = 344;</code>
   * @return A list containing the sampleGoodPerformanceEntities.
   */
  java.util.List<java.lang.String>
      getSampleGoodPerformanceEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.GOOD performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_good_performance_entities = 344;</code>
   * @return The count of sampleGoodPerformanceEntities.
   */
  int getSampleGoodPerformanceEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.GOOD performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_good_performance_entities = 344;</code>
   * @param index The index of the element to return.
   * @return The sampleGoodPerformanceEntities at the given index.
   */
  java.lang.String getSampleGoodPerformanceEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.GOOD performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_good_performance_entities = 344;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sampleGoodPerformanceEntities at the given index.
   */
  com.google.protobuf.ByteString
      getSampleGoodPerformanceEntitiesBytes(int index);

  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LOW performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_low_performance_entities = 345;</code>
   * @return A list containing the sampleLowPerformanceEntities.
   */
  java.util.List<java.lang.String>
      getSampleLowPerformanceEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LOW performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_low_performance_entities = 345;</code>
   * @return The count of sampleLowPerformanceEntities.
   */
  int getSampleLowPerformanceEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LOW performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_low_performance_entities = 345;</code>
   * @param index The index of the element to return.
   * @return The sampleLowPerformanceEntities at the given index.
   */
  java.lang.String getSampleLowPerformanceEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LOW performance label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_low_performance_entities = 345;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sampleLowPerformanceEntities at the given index.
   */
  com.google.protobuf.ByteString
      getSampleLowPerformanceEntitiesBytes(int index);

  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LEARNING performance
   * label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_learning_performance_entities = 346;</code>
   * @return A list containing the sampleLearningPerformanceEntities.
   */
  java.util.List<java.lang.String>
      getSampleLearningPerformanceEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LEARNING performance
   * label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_learning_performance_entities = 346;</code>
   * @return The count of sampleLearningPerformanceEntities.
   */
  int getSampleLearningPerformanceEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LEARNING performance
   * label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_learning_performance_entities = 346;</code>
   * @param index The index of the element to return.
   * @return The sampleLearningPerformanceEntities at the given index.
   */
  java.lang.String getSampleLearningPerformanceEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the asset had the AssetPerformanceLabel.LEARNING performance
   * label.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_learning_performance_entities = 346;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sampleLearningPerformanceEntities at the given index.
   */
  com.google.protobuf.ByteString
      getSampleLearningPerformanceEntitiesBytes(int index);

  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the assets had AssetPerformanceLabel performance label other
   * than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_unrated_performance_entities = 347;</code>
   * @return A list containing the sampleUnratedPerformanceEntities.
   */
  java.util.List<java.lang.String>
      getSampleUnratedPerformanceEntitiesList();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the assets had AssetPerformanceLabel performance label other
   * than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_unrated_performance_entities = 347;</code>
   * @return The count of sampleUnratedPerformanceEntities.
   */
  int getSampleUnratedPerformanceEntitiesCount();
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the assets had AssetPerformanceLabel performance label other
   * than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_unrated_performance_entities = 347;</code>
   * @param index The index of the element to return.
   * @return The sampleUnratedPerformanceEntities at the given index.
   */
  java.lang.String getSampleUnratedPerformanceEntities(int index);
  /**
   * <pre>
   * A list of up to 20 sample linked resources with impressions in the last 30
   * days where the assets had AssetPerformanceLabel performance label other
   * than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * </pre>
   *
   * <code>repeated string sample_unrated_performance_entities = 347;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sampleUnratedPerformanceEntities at the given index.
   */
  com.google.protobuf.ByteString
      getSampleUnratedPerformanceEntitiesBytes(int index);

  /**
   * <pre>
   * Number of total usages in which the asset is pinned.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_total_count = 348;</code>
   * @return Whether the assetPinnedTotalCount field is set.
   */
  boolean hasAssetPinnedTotalCount();
  /**
   * <pre>
   * Number of total usages in which the asset is pinned.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_total_count = 348;</code>
   * @return The assetPinnedTotalCount.
   */
  long getAssetPinnedTotalCount();

  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 1.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_one_count = 349;</code>
   * @return Whether the assetPinnedAsHeadlinePositionOneCount field is set.
   */
  boolean hasAssetPinnedAsHeadlinePositionOneCount();
  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 1.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_one_count = 349;</code>
   * @return The assetPinnedAsHeadlinePositionOneCount.
   */
  long getAssetPinnedAsHeadlinePositionOneCount();

  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 2.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_two_count = 350;</code>
   * @return Whether the assetPinnedAsHeadlinePositionTwoCount field is set.
   */
  boolean hasAssetPinnedAsHeadlinePositionTwoCount();
  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 2.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_two_count = 350;</code>
   * @return The assetPinnedAsHeadlinePositionTwoCount.
   */
  long getAssetPinnedAsHeadlinePositionTwoCount();

  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 3.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_three_count = 351;</code>
   * @return Whether the assetPinnedAsHeadlinePositionThreeCount field is set.
   */
  boolean hasAssetPinnedAsHeadlinePositionThreeCount();
  /**
   * <pre>
   * Number of entities in which the asset is pinned to headline 3.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_headline_position_three_count = 351;</code>
   * @return The assetPinnedAsHeadlinePositionThreeCount.
   */
  long getAssetPinnedAsHeadlinePositionThreeCount();

  /**
   * <pre>
   * Number of entities in which the asset is pinned to description 1.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_description_position_one_count = 352;</code>
   * @return Whether the assetPinnedAsDescriptionPositionOneCount field is set.
   */
  boolean hasAssetPinnedAsDescriptionPositionOneCount();
  /**
   * <pre>
   * Number of entities in which the asset is pinned to description 1.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_description_position_one_count = 352;</code>
   * @return The assetPinnedAsDescriptionPositionOneCount.
   */
  long getAssetPinnedAsDescriptionPositionOneCount();

  /**
   * <pre>
   * Number of entities in which the asset is pinned to description 2.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_description_position_two_count = 353;</code>
   * @return Whether the assetPinnedAsDescriptionPositionTwoCount field is set.
   */
  boolean hasAssetPinnedAsDescriptionPositionTwoCount();
  /**
   * <pre>
   * Number of entities in which the asset is pinned to description 2.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional int64 asset_pinned_as_description_position_two_count = 353;</code>
   * @return The assetPinnedAsDescriptionPositionTwoCount.
   */
  long getAssetPinnedAsDescriptionPositionTwoCount();

  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.BEST.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_best_performance_impression_percentage = 354;</code>
   * @return Whether the assetBestPerformanceImpressionPercentage field is set.
   */
  boolean hasAssetBestPerformanceImpressionPercentage();
  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.BEST.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_best_performance_impression_percentage = 354;</code>
   * @return The assetBestPerformanceImpressionPercentage.
   */
  double getAssetBestPerformanceImpressionPercentage();

  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.GOOD.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_good_performance_impression_percentage = 355;</code>
   * @return Whether the assetGoodPerformanceImpressionPercentage field is set.
   */
  boolean hasAssetGoodPerformanceImpressionPercentage();
  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.GOOD.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_good_performance_impression_percentage = 355;</code>
   * @return The assetGoodPerformanceImpressionPercentage.
   */
  double getAssetGoodPerformanceImpressionPercentage();

  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.LOW.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_low_performance_impression_percentage = 356;</code>
   * @return Whether the assetLowPerformanceImpressionPercentage field is set.
   */
  boolean hasAssetLowPerformanceImpressionPercentage();
  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.LOW.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_low_performance_impression_percentage = 356;</code>
   * @return The assetLowPerformanceImpressionPercentage.
   */
  double getAssetLowPerformanceImpressionPercentage();

  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_learning_performance_impression_percentage = 357;</code>
   * @return Whether the assetLearningPerformanceImpressionPercentage field is set.
   */
  boolean hasAssetLearningPerformanceImpressionPercentage();
  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel.LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_learning_performance_impression_percentage = 357;</code>
   * @return The assetLearningPerformanceImpressionPercentage.
   */
  double getAssetLearningPerformanceImpressionPercentage();

  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel other than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_unrated_performance_impression_percentage = 358;</code>
   * @return Whether the assetUnratedPerformanceImpressionPercentage field is set.
   */
  boolean hasAssetUnratedPerformanceImpressionPercentage();
  /**
   * <pre>
   * Percentage of impressions the asset received in ads with
   * AssetPerformanceLabel other than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Search channel.
   * </pre>
   *
   * <code>optional double asset_unrated_performance_impression_percentage = 358;</code>
   * @return The assetUnratedPerformanceImpressionPercentage.
   */
  double getAssetUnratedPerformanceImpressionPercentage();

  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.BEST.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_best_performance_cost_percentage = 359;</code>
   * @return Whether the assetBestPerformanceCostPercentage field is set.
   */
  boolean hasAssetBestPerformanceCostPercentage();
  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.BEST.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_best_performance_cost_percentage = 359;</code>
   * @return The assetBestPerformanceCostPercentage.
   */
  double getAssetBestPerformanceCostPercentage();

  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.GOOD.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_good_performance_cost_percentage = 360;</code>
   * @return Whether the assetGoodPerformanceCostPercentage field is set.
   */
  boolean hasAssetGoodPerformanceCostPercentage();
  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.GOOD.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_good_performance_cost_percentage = 360;</code>
   * @return The assetGoodPerformanceCostPercentage.
   */
  double getAssetGoodPerformanceCostPercentage();

  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.LOW.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_low_performance_cost_percentage = 361;</code>
   * @return Whether the assetLowPerformanceCostPercentage field is set.
   */
  boolean hasAssetLowPerformanceCostPercentage();
  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.LOW.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_low_performance_cost_percentage = 361;</code>
   * @return The assetLowPerformanceCostPercentage.
   */
  double getAssetLowPerformanceCostPercentage();

  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_learning_performance_cost_percentage = 362;</code>
   * @return Whether the assetLearningPerformanceCostPercentage field is set.
   */
  boolean hasAssetLearningPerformanceCostPercentage();
  /**
   * <pre>
   * Percentage of cost the asset received in ads with
   * AssetPerformanceLabel.LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_learning_performance_cost_percentage = 362;</code>
   * @return The assetLearningPerformanceCostPercentage.
   */
  double getAssetLearningPerformanceCostPercentage();

  /**
   * <pre>
   * Percentage of cost the asset received in ads with AssetPerformanceLabel
   * other than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_unrated_performance_cost_percentage = 363;</code>
   * @return Whether the assetUnratedPerformanceCostPercentage field is set.
   */
  boolean hasAssetUnratedPerformanceCostPercentage();
  /**
   * <pre>
   * Percentage of cost the asset received in ads with AssetPerformanceLabel
   * other than BEST, GOOD, LOW, and LEARNING.
   * This metric can only be selected with ChannelAggregateAssetView and
   * CampaignAggregateAssetView.
   * This metric is only supported in Performance Max channel.
   * </pre>
   *
   * <code>optional double asset_unrated_performance_cost_percentage = 363;</code>
   * @return The assetUnratedPerformanceCostPercentage.
   */
  double getAssetUnratedPerformanceCostPercentage();

  /**
   * <pre>
   * The amount of store visits attributed by the last click model.
   * </pre>
   *
   * <code>optional double store_visits_last_click_model_attributed_conversions = 365;</code>
   * @return Whether the storeVisitsLastClickModelAttributedConversions field is set.
   */
  boolean hasStoreVisitsLastClickModelAttributedConversions();
  /**
   * <pre>
   * The amount of store visits attributed by the last click model.
   * </pre>
   *
   * <code>optional double store_visits_last_click_model_attributed_conversions = 365;</code>
   * @return The storeVisitsLastClickModelAttributedConversions.
   */
  double getStoreVisitsLastClickModelAttributedConversions();

  /**
   * <pre>
   * The purchase conversion stats for the unified goals results.
   * </pre>
   *
   * <code>optional double results_conversions_purchase = 366;</code>
   * @return Whether the resultsConversionsPurchase field is set.
   */
  boolean hasResultsConversionsPurchase();
  /**
   * <pre>
   * The purchase conversion stats for the unified goals results.
   * </pre>
   *
   * <code>optional double results_conversions_purchase = 366;</code>
   * @return The resultsConversionsPurchase.
   */
  double getResultsConversionsPurchase();

  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in-feed formats.
   * </pre>
   *
   * <code>optional double video_view_rate_in_feed = 367;</code>
   * @return Whether the videoViewRateInFeed field is set.
   */
  boolean hasVideoViewRateInFeed();
  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in-feed formats.
   * </pre>
   *
   * <code>optional double video_view_rate_in_feed = 367;</code>
   * @return The videoViewRateInFeed.
   */
  double getVideoViewRateInFeed();

  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in-stream formats.
   * </pre>
   *
   * <code>optional double video_view_rate_in_stream = 368;</code>
   * @return Whether the videoViewRateInStream field is set.
   */
  boolean hasVideoViewRateInStream();
  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in-stream formats.
   * </pre>
   *
   * <code>optional double video_view_rate_in_stream = 368;</code>
   * @return The videoViewRateInStream.
   */
  double getVideoViewRateInStream();

  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in shorts formats.
   * </pre>
   *
   * <code>optional double video_view_rate_shorts = 369;</code>
   * @return Whether the videoViewRateShorts field is set.
   */
  boolean hasVideoViewRateShorts();
  /**
   * <pre>
   * The number of video views divided by number of impressions that can
   * potentially lead to video views for in shorts formats.
   * </pre>
   *
   * <code>optional double video_view_rate_shorts = 369;</code>
   * @return The videoViewRateShorts.
   */
  double getVideoViewRateShorts();

  /**
   * <pre>
   * All co-viewed impressions represent the total number of people who saw your
   * ad. This includes people who are signed into their Google Account, as well
   * as other people who are watching the same ad on a connected TV. This metric
   * is only available for the Campaign resource with adjusted_age_range and
   * adjusted_gender segments. These segmentations are mandatory to get the
   * all coviewed impressions.
   * </pre>
   *
   * <code>optional int64 coviewed_impressions = 380;</code>
   * @return Whether the coviewedImpressions field is set.
   */
  boolean hasCoviewedImpressions();
  /**
   * <pre>
   * All co-viewed impressions represent the total number of people who saw your
   * ad. This includes people who are signed into their Google Account, as well
   * as other people who are watching the same ad on a connected TV. This metric
   * is only available for the Campaign resource with adjusted_age_range and
   * adjusted_gender segments. These segmentations are mandatory to get the
   * all coviewed impressions.
   * </pre>
   *
   * <code>optional int64 coviewed_impressions = 380;</code>
   * @return The coviewedImpressions.
   */
  long getCoviewedImpressions();

  /**
   * <pre>
   * Primary impression is counted each time your ad is served. This metric is
   * only available for the Campaign resource with adjusted_age_range and
   * adjusted_gender segments. These segmentations are mandatory to get the
   * primary impressions.
   * </pre>
   *
   * <code>optional int64 primary_impressions = 381;</code>
   * @return Whether the primaryImpressions field is set.
   */
  boolean hasPrimaryImpressions();
  /**
   * <pre>
   * Primary impression is counted each time your ad is served. This metric is
   * only available for the Campaign resource with adjusted_age_range and
   * adjusted_gender segments. These segmentations are mandatory to get the
   * primary impressions.
   * </pre>
   *
   * <code>optional int64 primary_impressions = 381;</code>
   * @return The primaryImpressions.
   */
  long getPrimaryImpressions();
}
