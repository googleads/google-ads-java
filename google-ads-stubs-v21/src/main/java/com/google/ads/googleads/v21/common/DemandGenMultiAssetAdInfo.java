// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v21/common/ad_type_infos.proto

// Protobuf Java Version: 3.25.7
package com.google.ads.googleads.v21.common;

/**
 * <pre>
 * A Demand Gen multi asset ad.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo}
 */
public final class DemandGenMultiAssetAdInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)
    DemandGenMultiAssetAdInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DemandGenMultiAssetAdInfo.newBuilder() to construct.
  private DemandGenMultiAssetAdInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DemandGenMultiAssetAdInfo() {
    marketingImages_ = java.util.Collections.emptyList();
    squareMarketingImages_ = java.util.Collections.emptyList();
    portraitMarketingImages_ = java.util.Collections.emptyList();
    tallPortraitMarketingImages_ = java.util.Collections.emptyList();
    logoImages_ = java.util.Collections.emptyList();
    headlines_ = java.util.Collections.emptyList();
    descriptions_ = java.util.Collections.emptyList();
    businessName_ = "";
    callToActionText_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DemandGenMultiAssetAdInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v21.common.AdTypeInfosProto.internal_static_google_ads_googleads_v21_common_DemandGenMultiAssetAdInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v21.common.AdTypeInfosProto.internal_static_google_ads_googleads_v21_common_DemandGenMultiAssetAdInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.class, com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.Builder.class);
  }

  private int bitField0_;
  public static final int MARKETING_IMAGES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> marketingImages_;
  /**
   * <pre>
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with
   * `square_marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getMarketingImagesList() {
    return marketingImages_;
  }
  /**
   * <pre>
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with
   * `square_marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
      getMarketingImagesOrBuilderList() {
    return marketingImages_;
  }
  /**
   * <pre>
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with
   * `square_marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
   */
  @java.lang.Override
  public int getMarketingImagesCount() {
    return marketingImages_.size();
  }
  /**
   * <pre>
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with
   * `square_marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAsset getMarketingImages(int index) {
    return marketingImages_.get(index);
  }
  /**
   * <pre>
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with
   * `square_marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getMarketingImagesOrBuilder(
      int index) {
    return marketingImages_.get(index);
  }

  public static final int SQUARE_MARKETING_IMAGES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> squareMarketingImages_;
  /**
   * <pre>
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
   * `marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getSquareMarketingImagesList() {
    return squareMarketingImages_;
  }
  /**
   * <pre>
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
   * `marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
      getSquareMarketingImagesOrBuilderList() {
    return squareMarketingImages_;
  }
  /**
   * <pre>
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
   * `marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
   */
  @java.lang.Override
  public int getSquareMarketingImagesCount() {
    return squareMarketingImages_.size();
  }
  /**
   * <pre>
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
   * `marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAsset getSquareMarketingImages(int index) {
    return squareMarketingImages_.get(index);
  }
  /**
   * <pre>
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
   * `marketing_images`, `portrait_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getSquareMarketingImagesOrBuilder(
      int index) {
    return squareMarketingImages_.get(index);
  }

  public static final int PORTRAIT_MARKETING_IMAGES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> portraitMarketingImages_;
  /**
   * <pre>
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%). Combined
   * with `marketing_images`, `square_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getPortraitMarketingImagesList() {
    return portraitMarketingImages_;
  }
  /**
   * <pre>
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%). Combined
   * with `marketing_images`, `square_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
      getPortraitMarketingImagesOrBuilderList() {
    return portraitMarketingImages_;
  }
  /**
   * <pre>
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%). Combined
   * with `marketing_images`, `square_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
   */
  @java.lang.Override
  public int getPortraitMarketingImagesCount() {
    return portraitMarketingImages_.size();
  }
  /**
   * <pre>
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%). Combined
   * with `marketing_images`, `square_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAsset getPortraitMarketingImages(int index) {
    return portraitMarketingImages_.get(index);
  }
  /**
   * <pre>
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%). Combined
   * with `marketing_images`, `square_marketing_images`, and
   * `tall_portrait_marketing_images` the maximum is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getPortraitMarketingImagesOrBuilder(
      int index) {
    return portraitMarketingImages_.get(index);
  }

  public static final int TALL_PORTRAIT_MARKETING_IMAGES_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> tallPortraitMarketingImages_;
  /**
   * <pre>
   * Tall portrait marketing image assets to be used in the ad. Valid image
   * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
   * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
   * `square_marketing_images`, and `portrait_marketing_images`, the maximum
   * is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getTallPortraitMarketingImagesList() {
    return tallPortraitMarketingImages_;
  }
  /**
   * <pre>
   * Tall portrait marketing image assets to be used in the ad. Valid image
   * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
   * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
   * `square_marketing_images`, and `portrait_marketing_images`, the maximum
   * is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
      getTallPortraitMarketingImagesOrBuilderList() {
    return tallPortraitMarketingImages_;
  }
  /**
   * <pre>
   * Tall portrait marketing image assets to be used in the ad. Valid image
   * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
   * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
   * `square_marketing_images`, and `portrait_marketing_images`, the maximum
   * is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
   */
  @java.lang.Override
  public int getTallPortraitMarketingImagesCount() {
    return tallPortraitMarketingImages_.size();
  }
  /**
   * <pre>
   * Tall portrait marketing image assets to be used in the ad. Valid image
   * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
   * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
   * `square_marketing_images`, and `portrait_marketing_images`, the maximum
   * is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAsset getTallPortraitMarketingImages(int index) {
    return tallPortraitMarketingImages_.get(index);
  }
  /**
   * <pre>
   * Tall portrait marketing image assets to be used in the ad. Valid image
   * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
   * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
   * `square_marketing_images`, and `portrait_marketing_images`, the maximum
   * is 20.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getTallPortraitMarketingImagesOrBuilder(
      int index) {
    return tallPortraitMarketingImages_.get(index);
  }

  public static final int LOGO_IMAGES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> logoImages_;
  /**
   * <pre>
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getLogoImagesList() {
    return logoImages_;
  }
  /**
   * <pre>
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
      getLogoImagesOrBuilderList() {
    return logoImages_;
  }
  /**
   * <pre>
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
   */
  @java.lang.Override
  public int getLogoImagesCount() {
    return logoImages_.size();
  }
  /**
   * <pre>
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAsset getLogoImages(int index) {
    return logoImages_.get(index);
  }
  /**
   * <pre>
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getLogoImagesOrBuilder(
      int index) {
    return logoImages_.get(index);
  }

  public static final int HEADLINES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> headlines_;
  /**
   * <pre>
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> getHeadlinesList() {
    return headlines_;
  }
  /**
   * <pre>
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
      getHeadlinesOrBuilderList() {
    return headlines_;
  }
  /**
   * <pre>
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
   */
  @java.lang.Override
  public int getHeadlinesCount() {
    return headlines_.size();
  }
  /**
   * <pre>
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdTextAsset getHeadlines(int index) {
    return headlines_.get(index);
  }
  /**
   * <pre>
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdTextAssetOrBuilder getHeadlinesOrBuilder(
      int index) {
    return headlines_.get(index);
  }

  public static final int DESCRIPTIONS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> descriptions_;
  /**
   * <pre>
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> getDescriptionsList() {
    return descriptions_;
  }
  /**
   * <pre>
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
      getDescriptionsOrBuilderList() {
    return descriptions_;
  }
  /**
   * <pre>
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
   */
  @java.lang.Override
  public int getDescriptionsCount() {
    return descriptions_.size();
  }
  /**
   * <pre>
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdTextAsset getDescriptions(int index) {
    return descriptions_.get(index);
  }
  /**
   * <pre>
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v21.common.AdTextAssetOrBuilder getDescriptionsOrBuilder(
      int index) {
    return descriptions_.get(index);
  }

  public static final int BUSINESS_NAME_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object businessName_ = "";
  /**
   * <pre>
   * The Advertiser/brand name. Maximum display width is 25. Required.
   * </pre>
   *
   * <code>optional string business_name = 7;</code>
   * @return Whether the businessName field is set.
   */
  @java.lang.Override
  public boolean hasBusinessName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The Advertiser/brand name. Maximum display width is 25. Required.
   * </pre>
   *
   * <code>optional string business_name = 7;</code>
   * @return The businessName.
   */
  @java.lang.Override
  public java.lang.String getBusinessName() {
    java.lang.Object ref = businessName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      businessName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Advertiser/brand name. Maximum display width is 25. Required.
   * </pre>
   *
   * <code>optional string business_name = 7;</code>
   * @return The bytes for businessName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBusinessNameBytes() {
    java.lang.Object ref = businessName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      businessName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CALL_TO_ACTION_TEXT_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object callToActionText_ = "";
  /**
   * <pre>
   * Call to action text.
   * </pre>
   *
   * <code>optional string call_to_action_text = 8;</code>
   * @return Whether the callToActionText field is set.
   */
  @java.lang.Override
  public boolean hasCallToActionText() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Call to action text.
   * </pre>
   *
   * <code>optional string call_to_action_text = 8;</code>
   * @return The callToActionText.
   */
  @java.lang.Override
  public java.lang.String getCallToActionText() {
    java.lang.Object ref = callToActionText_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      callToActionText_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Call to action text.
   * </pre>
   *
   * <code>optional string call_to_action_text = 8;</code>
   * @return The bytes for callToActionText.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCallToActionTextBytes() {
    java.lang.Object ref = callToActionText_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      callToActionText_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LEAD_FORM_ONLY_FIELD_NUMBER = 9;
  private boolean leadFormOnly_ = false;
  /**
   * <pre>
   * Boolean option that indicates if this ad must be served with lead form.
   * </pre>
   *
   * <code>optional bool lead_form_only = 9;</code>
   * @return Whether the leadFormOnly field is set.
   */
  @java.lang.Override
  public boolean hasLeadFormOnly() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Boolean option that indicates if this ad must be served with lead form.
   * </pre>
   *
   * <code>optional bool lead_form_only = 9;</code>
   * @return The leadFormOnly.
   */
  @java.lang.Override
  public boolean getLeadFormOnly() {
    return leadFormOnly_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < marketingImages_.size(); i++) {
      output.writeMessage(1, marketingImages_.get(i));
    }
    for (int i = 0; i < squareMarketingImages_.size(); i++) {
      output.writeMessage(2, squareMarketingImages_.get(i));
    }
    for (int i = 0; i < portraitMarketingImages_.size(); i++) {
      output.writeMessage(3, portraitMarketingImages_.get(i));
    }
    for (int i = 0; i < logoImages_.size(); i++) {
      output.writeMessage(4, logoImages_.get(i));
    }
    for (int i = 0; i < headlines_.size(); i++) {
      output.writeMessage(5, headlines_.get(i));
    }
    for (int i = 0; i < descriptions_.size(); i++) {
      output.writeMessage(6, descriptions_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, businessName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, callToActionText_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(9, leadFormOnly_);
    }
    for (int i = 0; i < tallPortraitMarketingImages_.size(); i++) {
      output.writeMessage(10, tallPortraitMarketingImages_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < marketingImages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, marketingImages_.get(i));
    }
    for (int i = 0; i < squareMarketingImages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, squareMarketingImages_.get(i));
    }
    for (int i = 0; i < portraitMarketingImages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, portraitMarketingImages_.get(i));
    }
    for (int i = 0; i < logoImages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, logoImages_.get(i));
    }
    for (int i = 0; i < headlines_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, headlines_.get(i));
    }
    for (int i = 0; i < descriptions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, descriptions_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, businessName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, callToActionText_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, leadFormOnly_);
    }
    for (int i = 0; i < tallPortraitMarketingImages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, tallPortraitMarketingImages_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo other = (com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo) obj;

    if (!getMarketingImagesList()
        .equals(other.getMarketingImagesList())) return false;
    if (!getSquareMarketingImagesList()
        .equals(other.getSquareMarketingImagesList())) return false;
    if (!getPortraitMarketingImagesList()
        .equals(other.getPortraitMarketingImagesList())) return false;
    if (!getTallPortraitMarketingImagesList()
        .equals(other.getTallPortraitMarketingImagesList())) return false;
    if (!getLogoImagesList()
        .equals(other.getLogoImagesList())) return false;
    if (!getHeadlinesList()
        .equals(other.getHeadlinesList())) return false;
    if (!getDescriptionsList()
        .equals(other.getDescriptionsList())) return false;
    if (hasBusinessName() != other.hasBusinessName()) return false;
    if (hasBusinessName()) {
      if (!getBusinessName()
          .equals(other.getBusinessName())) return false;
    }
    if (hasCallToActionText() != other.hasCallToActionText()) return false;
    if (hasCallToActionText()) {
      if (!getCallToActionText()
          .equals(other.getCallToActionText())) return false;
    }
    if (hasLeadFormOnly() != other.hasLeadFormOnly()) return false;
    if (hasLeadFormOnly()) {
      if (getLeadFormOnly()
          != other.getLeadFormOnly()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMarketingImagesCount() > 0) {
      hash = (37 * hash) + MARKETING_IMAGES_FIELD_NUMBER;
      hash = (53 * hash) + getMarketingImagesList().hashCode();
    }
    if (getSquareMarketingImagesCount() > 0) {
      hash = (37 * hash) + SQUARE_MARKETING_IMAGES_FIELD_NUMBER;
      hash = (53 * hash) + getSquareMarketingImagesList().hashCode();
    }
    if (getPortraitMarketingImagesCount() > 0) {
      hash = (37 * hash) + PORTRAIT_MARKETING_IMAGES_FIELD_NUMBER;
      hash = (53 * hash) + getPortraitMarketingImagesList().hashCode();
    }
    if (getTallPortraitMarketingImagesCount() > 0) {
      hash = (37 * hash) + TALL_PORTRAIT_MARKETING_IMAGES_FIELD_NUMBER;
      hash = (53 * hash) + getTallPortraitMarketingImagesList().hashCode();
    }
    if (getLogoImagesCount() > 0) {
      hash = (37 * hash) + LOGO_IMAGES_FIELD_NUMBER;
      hash = (53 * hash) + getLogoImagesList().hashCode();
    }
    if (getHeadlinesCount() > 0) {
      hash = (37 * hash) + HEADLINES_FIELD_NUMBER;
      hash = (53 * hash) + getHeadlinesList().hashCode();
    }
    if (getDescriptionsCount() > 0) {
      hash = (37 * hash) + DESCRIPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getDescriptionsList().hashCode();
    }
    if (hasBusinessName()) {
      hash = (37 * hash) + BUSINESS_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessName().hashCode();
    }
    if (hasCallToActionText()) {
      hash = (37 * hash) + CALL_TO_ACTION_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCallToActionText().hashCode();
    }
    if (hasLeadFormOnly()) {
      hash = (37 * hash) + LEAD_FORM_ONLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLeadFormOnly());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Demand Gen multi asset ad.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)
      com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v21.common.AdTypeInfosProto.internal_static_google_ads_googleads_v21_common_DemandGenMultiAssetAdInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v21.common.AdTypeInfosProto.internal_static_google_ads_googleads_v21_common_DemandGenMultiAssetAdInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.class, com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.Builder.class);
    }

    // Construct using com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (marketingImagesBuilder_ == null) {
        marketingImages_ = java.util.Collections.emptyList();
      } else {
        marketingImages_ = null;
        marketingImagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (squareMarketingImagesBuilder_ == null) {
        squareMarketingImages_ = java.util.Collections.emptyList();
      } else {
        squareMarketingImages_ = null;
        squareMarketingImagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (portraitMarketingImagesBuilder_ == null) {
        portraitMarketingImages_ = java.util.Collections.emptyList();
      } else {
        portraitMarketingImages_ = null;
        portraitMarketingImagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (tallPortraitMarketingImagesBuilder_ == null) {
        tallPortraitMarketingImages_ = java.util.Collections.emptyList();
      } else {
        tallPortraitMarketingImages_ = null;
        tallPortraitMarketingImagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (logoImagesBuilder_ == null) {
        logoImages_ = java.util.Collections.emptyList();
      } else {
        logoImages_ = null;
        logoImagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (headlinesBuilder_ == null) {
        headlines_ = java.util.Collections.emptyList();
      } else {
        headlines_ = null;
        headlinesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (descriptionsBuilder_ == null) {
        descriptions_ = java.util.Collections.emptyList();
      } else {
        descriptions_ = null;
        descriptionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      businessName_ = "";
      callToActionText_ = "";
      leadFormOnly_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v21.common.AdTypeInfosProto.internal_static_google_ads_googleads_v21_common_DemandGenMultiAssetAdInfo_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo getDefaultInstanceForType() {
      return com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo build() {
      com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo buildPartial() {
      com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo result = new com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo result) {
      if (marketingImagesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          marketingImages_ = java.util.Collections.unmodifiableList(marketingImages_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.marketingImages_ = marketingImages_;
      } else {
        result.marketingImages_ = marketingImagesBuilder_.build();
      }
      if (squareMarketingImagesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          squareMarketingImages_ = java.util.Collections.unmodifiableList(squareMarketingImages_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.squareMarketingImages_ = squareMarketingImages_;
      } else {
        result.squareMarketingImages_ = squareMarketingImagesBuilder_.build();
      }
      if (portraitMarketingImagesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          portraitMarketingImages_ = java.util.Collections.unmodifiableList(portraitMarketingImages_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.portraitMarketingImages_ = portraitMarketingImages_;
      } else {
        result.portraitMarketingImages_ = portraitMarketingImagesBuilder_.build();
      }
      if (tallPortraitMarketingImagesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          tallPortraitMarketingImages_ = java.util.Collections.unmodifiableList(tallPortraitMarketingImages_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tallPortraitMarketingImages_ = tallPortraitMarketingImages_;
      } else {
        result.tallPortraitMarketingImages_ = tallPortraitMarketingImagesBuilder_.build();
      }
      if (logoImagesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          logoImages_ = java.util.Collections.unmodifiableList(logoImages_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.logoImages_ = logoImages_;
      } else {
        result.logoImages_ = logoImagesBuilder_.build();
      }
      if (headlinesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          headlines_ = java.util.Collections.unmodifiableList(headlines_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.headlines_ = headlines_;
      } else {
        result.headlines_ = headlinesBuilder_.build();
      }
      if (descriptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          descriptions_ = java.util.Collections.unmodifiableList(descriptions_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.descriptions_ = descriptions_;
      } else {
        result.descriptions_ = descriptionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.businessName_ = businessName_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.callToActionText_ = callToActionText_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.leadFormOnly_ = leadFormOnly_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo) {
        return mergeFrom((com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo other) {
      if (other == com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo.getDefaultInstance()) return this;
      if (marketingImagesBuilder_ == null) {
        if (!other.marketingImages_.isEmpty()) {
          if (marketingImages_.isEmpty()) {
            marketingImages_ = other.marketingImages_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMarketingImagesIsMutable();
            marketingImages_.addAll(other.marketingImages_);
          }
          onChanged();
        }
      } else {
        if (!other.marketingImages_.isEmpty()) {
          if (marketingImagesBuilder_.isEmpty()) {
            marketingImagesBuilder_.dispose();
            marketingImagesBuilder_ = null;
            marketingImages_ = other.marketingImages_;
            bitField0_ = (bitField0_ & ~0x00000001);
            marketingImagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMarketingImagesFieldBuilder() : null;
          } else {
            marketingImagesBuilder_.addAllMessages(other.marketingImages_);
          }
        }
      }
      if (squareMarketingImagesBuilder_ == null) {
        if (!other.squareMarketingImages_.isEmpty()) {
          if (squareMarketingImages_.isEmpty()) {
            squareMarketingImages_ = other.squareMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSquareMarketingImagesIsMutable();
            squareMarketingImages_.addAll(other.squareMarketingImages_);
          }
          onChanged();
        }
      } else {
        if (!other.squareMarketingImages_.isEmpty()) {
          if (squareMarketingImagesBuilder_.isEmpty()) {
            squareMarketingImagesBuilder_.dispose();
            squareMarketingImagesBuilder_ = null;
            squareMarketingImages_ = other.squareMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000002);
            squareMarketingImagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSquareMarketingImagesFieldBuilder() : null;
          } else {
            squareMarketingImagesBuilder_.addAllMessages(other.squareMarketingImages_);
          }
        }
      }
      if (portraitMarketingImagesBuilder_ == null) {
        if (!other.portraitMarketingImages_.isEmpty()) {
          if (portraitMarketingImages_.isEmpty()) {
            portraitMarketingImages_ = other.portraitMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePortraitMarketingImagesIsMutable();
            portraitMarketingImages_.addAll(other.portraitMarketingImages_);
          }
          onChanged();
        }
      } else {
        if (!other.portraitMarketingImages_.isEmpty()) {
          if (portraitMarketingImagesBuilder_.isEmpty()) {
            portraitMarketingImagesBuilder_.dispose();
            portraitMarketingImagesBuilder_ = null;
            portraitMarketingImages_ = other.portraitMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000004);
            portraitMarketingImagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPortraitMarketingImagesFieldBuilder() : null;
          } else {
            portraitMarketingImagesBuilder_.addAllMessages(other.portraitMarketingImages_);
          }
        }
      }
      if (tallPortraitMarketingImagesBuilder_ == null) {
        if (!other.tallPortraitMarketingImages_.isEmpty()) {
          if (tallPortraitMarketingImages_.isEmpty()) {
            tallPortraitMarketingImages_ = other.tallPortraitMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTallPortraitMarketingImagesIsMutable();
            tallPortraitMarketingImages_.addAll(other.tallPortraitMarketingImages_);
          }
          onChanged();
        }
      } else {
        if (!other.tallPortraitMarketingImages_.isEmpty()) {
          if (tallPortraitMarketingImagesBuilder_.isEmpty()) {
            tallPortraitMarketingImagesBuilder_.dispose();
            tallPortraitMarketingImagesBuilder_ = null;
            tallPortraitMarketingImages_ = other.tallPortraitMarketingImages_;
            bitField0_ = (bitField0_ & ~0x00000008);
            tallPortraitMarketingImagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTallPortraitMarketingImagesFieldBuilder() : null;
          } else {
            tallPortraitMarketingImagesBuilder_.addAllMessages(other.tallPortraitMarketingImages_);
          }
        }
      }
      if (logoImagesBuilder_ == null) {
        if (!other.logoImages_.isEmpty()) {
          if (logoImages_.isEmpty()) {
            logoImages_ = other.logoImages_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLogoImagesIsMutable();
            logoImages_.addAll(other.logoImages_);
          }
          onChanged();
        }
      } else {
        if (!other.logoImages_.isEmpty()) {
          if (logoImagesBuilder_.isEmpty()) {
            logoImagesBuilder_.dispose();
            logoImagesBuilder_ = null;
            logoImages_ = other.logoImages_;
            bitField0_ = (bitField0_ & ~0x00000010);
            logoImagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLogoImagesFieldBuilder() : null;
          } else {
            logoImagesBuilder_.addAllMessages(other.logoImages_);
          }
        }
      }
      if (headlinesBuilder_ == null) {
        if (!other.headlines_.isEmpty()) {
          if (headlines_.isEmpty()) {
            headlines_ = other.headlines_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHeadlinesIsMutable();
            headlines_.addAll(other.headlines_);
          }
          onChanged();
        }
      } else {
        if (!other.headlines_.isEmpty()) {
          if (headlinesBuilder_.isEmpty()) {
            headlinesBuilder_.dispose();
            headlinesBuilder_ = null;
            headlines_ = other.headlines_;
            bitField0_ = (bitField0_ & ~0x00000020);
            headlinesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadlinesFieldBuilder() : null;
          } else {
            headlinesBuilder_.addAllMessages(other.headlines_);
          }
        }
      }
      if (descriptionsBuilder_ == null) {
        if (!other.descriptions_.isEmpty()) {
          if (descriptions_.isEmpty()) {
            descriptions_ = other.descriptions_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureDescriptionsIsMutable();
            descriptions_.addAll(other.descriptions_);
          }
          onChanged();
        }
      } else {
        if (!other.descriptions_.isEmpty()) {
          if (descriptionsBuilder_.isEmpty()) {
            descriptionsBuilder_.dispose();
            descriptionsBuilder_ = null;
            descriptions_ = other.descriptions_;
            bitField0_ = (bitField0_ & ~0x00000040);
            descriptionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDescriptionsFieldBuilder() : null;
          } else {
            descriptionsBuilder_.addAllMessages(other.descriptions_);
          }
        }
      }
      if (other.hasBusinessName()) {
        businessName_ = other.businessName_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.hasCallToActionText()) {
        callToActionText_ = other.callToActionText_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hasLeadFormOnly()) {
        setLeadFormOnly(other.getLeadFormOnly());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.ads.googleads.v21.common.AdImageAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdImageAsset.parser(),
                      extensionRegistry);
              if (marketingImagesBuilder_ == null) {
                ensureMarketingImagesIsMutable();
                marketingImages_.add(m);
              } else {
                marketingImagesBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.google.ads.googleads.v21.common.AdImageAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdImageAsset.parser(),
                      extensionRegistry);
              if (squareMarketingImagesBuilder_ == null) {
                ensureSquareMarketingImagesIsMutable();
                squareMarketingImages_.add(m);
              } else {
                squareMarketingImagesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.ads.googleads.v21.common.AdImageAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdImageAsset.parser(),
                      extensionRegistry);
              if (portraitMarketingImagesBuilder_ == null) {
                ensurePortraitMarketingImagesIsMutable();
                portraitMarketingImages_.add(m);
              } else {
                portraitMarketingImagesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.google.ads.googleads.v21.common.AdImageAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdImageAsset.parser(),
                      extensionRegistry);
              if (logoImagesBuilder_ == null) {
                ensureLogoImagesIsMutable();
                logoImages_.add(m);
              } else {
                logoImagesBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.google.ads.googleads.v21.common.AdTextAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdTextAsset.parser(),
                      extensionRegistry);
              if (headlinesBuilder_ == null) {
                ensureHeadlinesIsMutable();
                headlines_.add(m);
              } else {
                headlinesBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              com.google.ads.googleads.v21.common.AdTextAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdTextAsset.parser(),
                      extensionRegistry);
              if (descriptionsBuilder_ == null) {
                ensureDescriptionsIsMutable();
                descriptions_.add(m);
              } else {
                descriptionsBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              businessName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 58
            case 66: {
              callToActionText_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 66
            case 72: {
              leadFormOnly_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 72
            case 82: {
              com.google.ads.googleads.v21.common.AdImageAsset m =
                  input.readMessage(
                      com.google.ads.googleads.v21.common.AdImageAsset.parser(),
                      extensionRegistry);
              if (tallPortraitMarketingImagesBuilder_ == null) {
                ensureTallPortraitMarketingImagesIsMutable();
                tallPortraitMarketingImages_.add(m);
              } else {
                tallPortraitMarketingImagesBuilder_.addMessage(m);
              }
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> marketingImages_ =
      java.util.Collections.emptyList();
    private void ensureMarketingImagesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        marketingImages_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdImageAsset>(marketingImages_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> marketingImagesBuilder_;

    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getMarketingImagesList() {
      if (marketingImagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(marketingImages_);
      } else {
        return marketingImagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public int getMarketingImagesCount() {
      if (marketingImagesBuilder_ == null) {
        return marketingImages_.size();
      } else {
        return marketingImagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset getMarketingImages(int index) {
      if (marketingImagesBuilder_ == null) {
        return marketingImages_.get(index);
      } else {
        return marketingImagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder setMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (marketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketingImagesIsMutable();
        marketingImages_.set(index, value);
        onChanged();
      } else {
        marketingImagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder setMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (marketingImagesBuilder_ == null) {
        ensureMarketingImagesIsMutable();
        marketingImages_.set(index, builderForValue.build());
        onChanged();
      } else {
        marketingImagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder addMarketingImages(com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (marketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketingImagesIsMutable();
        marketingImages_.add(value);
        onChanged();
      } else {
        marketingImagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder addMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (marketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketingImagesIsMutable();
        marketingImages_.add(index, value);
        onChanged();
      } else {
        marketingImagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder addMarketingImages(
        com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (marketingImagesBuilder_ == null) {
        ensureMarketingImagesIsMutable();
        marketingImages_.add(builderForValue.build());
        onChanged();
      } else {
        marketingImagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder addMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (marketingImagesBuilder_ == null) {
        ensureMarketingImagesIsMutable();
        marketingImages_.add(index, builderForValue.build());
        onChanged();
      } else {
        marketingImagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder addAllMarketingImages(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdImageAsset> values) {
      if (marketingImagesBuilder_ == null) {
        ensureMarketingImagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, marketingImages_);
        onChanged();
      } else {
        marketingImagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder clearMarketingImages() {
      if (marketingImagesBuilder_ == null) {
        marketingImages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        marketingImagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public Builder removeMarketingImages(int index) {
      if (marketingImagesBuilder_ == null) {
        ensureMarketingImagesIsMutable();
        marketingImages_.remove(index);
        onChanged();
      } else {
        marketingImagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder getMarketingImagesBuilder(
        int index) {
      return getMarketingImagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getMarketingImagesOrBuilder(
        int index) {
      if (marketingImagesBuilder_ == null) {
        return marketingImages_.get(index);  } else {
        return marketingImagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
         getMarketingImagesOrBuilderList() {
      if (marketingImagesBuilder_ != null) {
        return marketingImagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(marketingImages_);
      }
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addMarketingImagesBuilder() {
      return getMarketingImagesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addMarketingImagesBuilder(
        int index) {
      return getMarketingImagesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Marketing image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
     * be 1.91:1 (+-1%). Required if square_marketing_images is
     * not present. Combined with
     * `square_marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset marketing_images = 1;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset.Builder> 
         getMarketingImagesBuilderList() {
      return getMarketingImagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
        getMarketingImagesFieldBuilder() {
      if (marketingImagesBuilder_ == null) {
        marketingImagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder>(
                marketingImages_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        marketingImages_ = null;
      }
      return marketingImagesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> squareMarketingImages_ =
      java.util.Collections.emptyList();
    private void ensureSquareMarketingImagesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        squareMarketingImages_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdImageAsset>(squareMarketingImages_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> squareMarketingImagesBuilder_;

    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getSquareMarketingImagesList() {
      if (squareMarketingImagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(squareMarketingImages_);
      } else {
        return squareMarketingImagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public int getSquareMarketingImagesCount() {
      if (squareMarketingImagesBuilder_ == null) {
        return squareMarketingImages_.size();
      } else {
        return squareMarketingImagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset getSquareMarketingImages(int index) {
      if (squareMarketingImagesBuilder_ == null) {
        return squareMarketingImages_.get(index);
      } else {
        return squareMarketingImagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder setSquareMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (squareMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.set(index, value);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder setSquareMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (squareMarketingImagesBuilder_ == null) {
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.set(index, builderForValue.build());
        onChanged();
      } else {
        squareMarketingImagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder addSquareMarketingImages(com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (squareMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.add(value);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder addSquareMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (squareMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.add(index, value);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder addSquareMarketingImages(
        com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (squareMarketingImagesBuilder_ == null) {
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.add(builderForValue.build());
        onChanged();
      } else {
        squareMarketingImagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder addSquareMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (squareMarketingImagesBuilder_ == null) {
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.add(index, builderForValue.build());
        onChanged();
      } else {
        squareMarketingImagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder addAllSquareMarketingImages(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdImageAsset> values) {
      if (squareMarketingImagesBuilder_ == null) {
        ensureSquareMarketingImagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, squareMarketingImages_);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder clearSquareMarketingImages() {
      if (squareMarketingImagesBuilder_ == null) {
        squareMarketingImages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public Builder removeSquareMarketingImages(int index) {
      if (squareMarketingImagesBuilder_ == null) {
        ensureSquareMarketingImagesIsMutable();
        squareMarketingImages_.remove(index);
        onChanged();
      } else {
        squareMarketingImagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder getSquareMarketingImagesBuilder(
        int index) {
      return getSquareMarketingImagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getSquareMarketingImagesOrBuilder(
        int index) {
      if (squareMarketingImagesBuilder_ == null) {
        return squareMarketingImages_.get(index);  } else {
        return squareMarketingImagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
         getSquareMarketingImagesOrBuilderList() {
      if (squareMarketingImagesBuilder_ != null) {
        return squareMarketingImagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(squareMarketingImages_);
      }
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addSquareMarketingImagesBuilder() {
      return getSquareMarketingImagesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addSquareMarketingImagesBuilder(
        int index) {
      return getSquareMarketingImagesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Square marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
     * be 1:1 (+-1%). Required if marketing_images is not present. Combined with
     * `marketing_images`, `portrait_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset square_marketing_images = 2;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset.Builder> 
         getSquareMarketingImagesBuilderList() {
      return getSquareMarketingImagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
        getSquareMarketingImagesFieldBuilder() {
      if (squareMarketingImagesBuilder_ == null) {
        squareMarketingImagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder>(
                squareMarketingImages_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        squareMarketingImages_ = null;
      }
      return squareMarketingImagesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> portraitMarketingImages_ =
      java.util.Collections.emptyList();
    private void ensurePortraitMarketingImagesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        portraitMarketingImages_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdImageAsset>(portraitMarketingImages_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> portraitMarketingImagesBuilder_;

    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getPortraitMarketingImagesList() {
      if (portraitMarketingImagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(portraitMarketingImages_);
      } else {
        return portraitMarketingImagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public int getPortraitMarketingImagesCount() {
      if (portraitMarketingImagesBuilder_ == null) {
        return portraitMarketingImages_.size();
      } else {
        return portraitMarketingImagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset getPortraitMarketingImages(int index) {
      if (portraitMarketingImagesBuilder_ == null) {
        return portraitMarketingImages_.get(index);
      } else {
        return portraitMarketingImagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder setPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (portraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.set(index, value);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder setPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (portraitMarketingImagesBuilder_ == null) {
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.set(index, builderForValue.build());
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder addPortraitMarketingImages(com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (portraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.add(value);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder addPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (portraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.add(index, value);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder addPortraitMarketingImages(
        com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (portraitMarketingImagesBuilder_ == null) {
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.add(builderForValue.build());
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder addPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (portraitMarketingImagesBuilder_ == null) {
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.add(index, builderForValue.build());
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder addAllPortraitMarketingImages(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdImageAsset> values) {
      if (portraitMarketingImagesBuilder_ == null) {
        ensurePortraitMarketingImagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, portraitMarketingImages_);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder clearPortraitMarketingImages() {
      if (portraitMarketingImagesBuilder_ == null) {
        portraitMarketingImages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public Builder removePortraitMarketingImages(int index) {
      if (portraitMarketingImagesBuilder_ == null) {
        ensurePortraitMarketingImagesIsMutable();
        portraitMarketingImages_.remove(index);
        onChanged();
      } else {
        portraitMarketingImagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder getPortraitMarketingImagesBuilder(
        int index) {
      return getPortraitMarketingImagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getPortraitMarketingImagesOrBuilder(
        int index) {
      if (portraitMarketingImagesBuilder_ == null) {
        return portraitMarketingImages_.get(index);  } else {
        return portraitMarketingImagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
         getPortraitMarketingImagesOrBuilderList() {
      if (portraitMarketingImagesBuilder_ != null) {
        return portraitMarketingImagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(portraitMarketingImages_);
      }
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addPortraitMarketingImagesBuilder() {
      return getPortraitMarketingImagesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addPortraitMarketingImagesBuilder(
        int index) {
      return getPortraitMarketingImagesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Portrait marketing image assets to be used in the ad. Valid image types are
     * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
     * be 4:5 (+-1%). Combined
     * with `marketing_images`, `square_marketing_images`, and
     * `tall_portrait_marketing_images` the maximum is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset portrait_marketing_images = 3;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset.Builder> 
         getPortraitMarketingImagesBuilderList() {
      return getPortraitMarketingImagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
        getPortraitMarketingImagesFieldBuilder() {
      if (portraitMarketingImagesBuilder_ == null) {
        portraitMarketingImagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder>(
                portraitMarketingImages_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        portraitMarketingImages_ = null;
      }
      return portraitMarketingImagesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> tallPortraitMarketingImages_ =
      java.util.Collections.emptyList();
    private void ensureTallPortraitMarketingImagesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        tallPortraitMarketingImages_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdImageAsset>(tallPortraitMarketingImages_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> tallPortraitMarketingImagesBuilder_;

    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getTallPortraitMarketingImagesList() {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tallPortraitMarketingImages_);
      } else {
        return tallPortraitMarketingImagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public int getTallPortraitMarketingImagesCount() {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        return tallPortraitMarketingImages_.size();
      } else {
        return tallPortraitMarketingImagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset getTallPortraitMarketingImages(int index) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        return tallPortraitMarketingImages_.get(index);
      } else {
        return tallPortraitMarketingImagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder setTallPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.set(index, value);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder setTallPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.set(index, builderForValue.build());
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder addTallPortraitMarketingImages(com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.add(value);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder addTallPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.add(index, value);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder addTallPortraitMarketingImages(
        com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.add(builderForValue.build());
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder addTallPortraitMarketingImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.add(index, builderForValue.build());
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder addAllTallPortraitMarketingImages(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdImageAsset> values) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        ensureTallPortraitMarketingImagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tallPortraitMarketingImages_);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder clearTallPortraitMarketingImages() {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        tallPortraitMarketingImages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public Builder removeTallPortraitMarketingImages(int index) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        ensureTallPortraitMarketingImagesIsMutable();
        tallPortraitMarketingImages_.remove(index);
        onChanged();
      } else {
        tallPortraitMarketingImagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder getTallPortraitMarketingImagesBuilder(
        int index) {
      return getTallPortraitMarketingImagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getTallPortraitMarketingImagesOrBuilder(
        int index) {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        return tallPortraitMarketingImages_.get(index);  } else {
        return tallPortraitMarketingImagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
         getTallPortraitMarketingImagesOrBuilderList() {
      if (tallPortraitMarketingImagesBuilder_ != null) {
        return tallPortraitMarketingImagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tallPortraitMarketingImages_);
      }
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addTallPortraitMarketingImagesBuilder() {
      return getTallPortraitMarketingImagesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addTallPortraitMarketingImagesBuilder(
        int index) {
      return getTallPortraitMarketingImagesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Tall portrait marketing image assets to be used in the ad. Valid image
     * types are GIF, JPEG, and PNG. The minimum size is 600x1067 and the aspect
     * ratio must be 9:16 (+-1%). Combined with `marketing_images`,
     * `square_marketing_images`, and `portrait_marketing_images`, the maximum
     * is 20.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset tall_portrait_marketing_images = 10;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset.Builder> 
         getTallPortraitMarketingImagesBuilderList() {
      return getTallPortraitMarketingImagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
        getTallPortraitMarketingImagesFieldBuilder() {
      if (tallPortraitMarketingImagesBuilder_ == null) {
        tallPortraitMarketingImagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder>(
                tallPortraitMarketingImages_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        tallPortraitMarketingImages_ = null;
      }
      return tallPortraitMarketingImagesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> logoImages_ =
      java.util.Collections.emptyList();
    private void ensureLogoImagesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        logoImages_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdImageAsset>(logoImages_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> logoImagesBuilder_;

    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset> getLogoImagesList() {
      if (logoImagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(logoImages_);
      } else {
        return logoImagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public int getLogoImagesCount() {
      if (logoImagesBuilder_ == null) {
        return logoImages_.size();
      } else {
        return logoImagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset getLogoImages(int index) {
      if (logoImagesBuilder_ == null) {
        return logoImages_.get(index);
      } else {
        return logoImagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder setLogoImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (logoImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogoImagesIsMutable();
        logoImages_.set(index, value);
        onChanged();
      } else {
        logoImagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder setLogoImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (logoImagesBuilder_ == null) {
        ensureLogoImagesIsMutable();
        logoImages_.set(index, builderForValue.build());
        onChanged();
      } else {
        logoImagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder addLogoImages(com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (logoImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogoImagesIsMutable();
        logoImages_.add(value);
        onChanged();
      } else {
        logoImagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder addLogoImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset value) {
      if (logoImagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogoImagesIsMutable();
        logoImages_.add(index, value);
        onChanged();
      } else {
        logoImagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder addLogoImages(
        com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (logoImagesBuilder_ == null) {
        ensureLogoImagesIsMutable();
        logoImages_.add(builderForValue.build());
        onChanged();
      } else {
        logoImagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder addLogoImages(
        int index, com.google.ads.googleads.v21.common.AdImageAsset.Builder builderForValue) {
      if (logoImagesBuilder_ == null) {
        ensureLogoImagesIsMutable();
        logoImages_.add(index, builderForValue.build());
        onChanged();
      } else {
        logoImagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder addAllLogoImages(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdImageAsset> values) {
      if (logoImagesBuilder_ == null) {
        ensureLogoImagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, logoImages_);
        onChanged();
      } else {
        logoImagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder clearLogoImages() {
      if (logoImagesBuilder_ == null) {
        logoImages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        logoImagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public Builder removeLogoImages(int index) {
      if (logoImagesBuilder_ == null) {
        ensureLogoImagesIsMutable();
        logoImages_.remove(index);
        onChanged();
      } else {
        logoImagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder getLogoImagesBuilder(
        int index) {
      return getLogoImagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAssetOrBuilder getLogoImagesOrBuilder(
        int index) {
      if (logoImagesBuilder_ == null) {
        return logoImages_.get(index);  } else {
        return logoImagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
         getLogoImagesOrBuilderList() {
      if (logoImagesBuilder_ != null) {
        return logoImagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(logoImages_);
      }
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addLogoImagesBuilder() {
      return getLogoImagesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public com.google.ads.googleads.v21.common.AdImageAsset.Builder addLogoImagesBuilder(
        int index) {
      return getLogoImagesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdImageAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Logo image assets to be used in the ad. Valid image types are GIF,
     * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
     * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdImageAsset logo_images = 4;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdImageAsset.Builder> 
         getLogoImagesBuilderList() {
      return getLogoImagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder> 
        getLogoImagesFieldBuilder() {
      if (logoImagesBuilder_ == null) {
        logoImagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdImageAsset, com.google.ads.googleads.v21.common.AdImageAsset.Builder, com.google.ads.googleads.v21.common.AdImageAssetOrBuilder>(
                logoImages_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        logoImages_ = null;
      }
      return logoImagesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> headlines_ =
      java.util.Collections.emptyList();
    private void ensureHeadlinesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        headlines_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdTextAsset>(headlines_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> headlinesBuilder_;

    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> getHeadlinesList() {
      if (headlinesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headlines_);
      } else {
        return headlinesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public int getHeadlinesCount() {
      if (headlinesBuilder_ == null) {
        return headlines_.size();
      } else {
        return headlinesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset getHeadlines(int index) {
      if (headlinesBuilder_ == null) {
        return headlines_.get(index);
      } else {
        return headlinesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder setHeadlines(
        int index, com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (headlinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadlinesIsMutable();
        headlines_.set(index, value);
        onChanged();
      } else {
        headlinesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder setHeadlines(
        int index, com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (headlinesBuilder_ == null) {
        ensureHeadlinesIsMutable();
        headlines_.set(index, builderForValue.build());
        onChanged();
      } else {
        headlinesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder addHeadlines(com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (headlinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadlinesIsMutable();
        headlines_.add(value);
        onChanged();
      } else {
        headlinesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder addHeadlines(
        int index, com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (headlinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadlinesIsMutable();
        headlines_.add(index, value);
        onChanged();
      } else {
        headlinesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder addHeadlines(
        com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (headlinesBuilder_ == null) {
        ensureHeadlinesIsMutable();
        headlines_.add(builderForValue.build());
        onChanged();
      } else {
        headlinesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder addHeadlines(
        int index, com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (headlinesBuilder_ == null) {
        ensureHeadlinesIsMutable();
        headlines_.add(index, builderForValue.build());
        onChanged();
      } else {
        headlinesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder addAllHeadlines(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdTextAsset> values) {
      if (headlinesBuilder_ == null) {
        ensureHeadlinesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headlines_);
        onChanged();
      } else {
        headlinesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder clearHeadlines() {
      if (headlinesBuilder_ == null) {
        headlines_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        headlinesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public Builder removeHeadlines(int index) {
      if (headlinesBuilder_ == null) {
        ensureHeadlinesIsMutable();
        headlines_.remove(index);
        onChanged();
      } else {
        headlinesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder getHeadlinesBuilder(
        int index) {
      return getHeadlinesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAssetOrBuilder getHeadlinesOrBuilder(
        int index) {
      if (headlinesBuilder_ == null) {
        return headlines_.get(index);  } else {
        return headlinesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
         getHeadlinesOrBuilderList() {
      if (headlinesBuilder_ != null) {
        return headlinesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headlines_);
      }
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder addHeadlinesBuilder() {
      return getHeadlinesFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdTextAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder addHeadlinesBuilder(
        int index) {
      return getHeadlinesFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdTextAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * Headline text asset of the ad. Maximum display width is 30. At least 1 and
     * max 5 headlines can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset headlines = 5;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset.Builder> 
         getHeadlinesBuilderList() {
      return getHeadlinesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
        getHeadlinesFieldBuilder() {
      if (headlinesBuilder_ == null) {
        headlinesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder>(
                headlines_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        headlines_ = null;
      }
      return headlinesBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> descriptions_ =
      java.util.Collections.emptyList();
    private void ensureDescriptionsIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        descriptions_ = new java.util.ArrayList<com.google.ads.googleads.v21.common.AdTextAsset>(descriptions_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> descriptionsBuilder_;

    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset> getDescriptionsList() {
      if (descriptionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(descriptions_);
      } else {
        return descriptionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public int getDescriptionsCount() {
      if (descriptionsBuilder_ == null) {
        return descriptions_.size();
      } else {
        return descriptionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset getDescriptions(int index) {
      if (descriptionsBuilder_ == null) {
        return descriptions_.get(index);
      } else {
        return descriptionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder setDescriptions(
        int index, com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (descriptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionsIsMutable();
        descriptions_.set(index, value);
        onChanged();
      } else {
        descriptionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder setDescriptions(
        int index, com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (descriptionsBuilder_ == null) {
        ensureDescriptionsIsMutable();
        descriptions_.set(index, builderForValue.build());
        onChanged();
      } else {
        descriptionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder addDescriptions(com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (descriptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionsIsMutable();
        descriptions_.add(value);
        onChanged();
      } else {
        descriptionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder addDescriptions(
        int index, com.google.ads.googleads.v21.common.AdTextAsset value) {
      if (descriptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionsIsMutable();
        descriptions_.add(index, value);
        onChanged();
      } else {
        descriptionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder addDescriptions(
        com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (descriptionsBuilder_ == null) {
        ensureDescriptionsIsMutable();
        descriptions_.add(builderForValue.build());
        onChanged();
      } else {
        descriptionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder addDescriptions(
        int index, com.google.ads.googleads.v21.common.AdTextAsset.Builder builderForValue) {
      if (descriptionsBuilder_ == null) {
        ensureDescriptionsIsMutable();
        descriptions_.add(index, builderForValue.build());
        onChanged();
      } else {
        descriptionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder addAllDescriptions(
        java.lang.Iterable<? extends com.google.ads.googleads.v21.common.AdTextAsset> values) {
      if (descriptionsBuilder_ == null) {
        ensureDescriptionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, descriptions_);
        onChanged();
      } else {
        descriptionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder clearDescriptions() {
      if (descriptionsBuilder_ == null) {
        descriptions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        descriptionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public Builder removeDescriptions(int index) {
      if (descriptionsBuilder_ == null) {
        ensureDescriptionsIsMutable();
        descriptions_.remove(index);
        onChanged();
      } else {
        descriptionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder getDescriptionsBuilder(
        int index) {
      return getDescriptionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAssetOrBuilder getDescriptionsOrBuilder(
        int index) {
      if (descriptionsBuilder_ == null) {
        return descriptions_.get(index);  } else {
        return descriptionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
         getDescriptionsOrBuilderList() {
      if (descriptionsBuilder_ != null) {
        return descriptionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(descriptions_);
      }
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder addDescriptionsBuilder() {
      return getDescriptionsFieldBuilder().addBuilder(
          com.google.ads.googleads.v21.common.AdTextAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public com.google.ads.googleads.v21.common.AdTextAsset.Builder addDescriptionsBuilder(
        int index) {
      return getDescriptionsFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v21.common.AdTextAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The descriptive text of the ad. Maximum display width is 90. At least 1 and
     * max 5 descriptions can be specified.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v21.common.AdTextAsset descriptions = 6;</code>
     */
    public java.util.List<com.google.ads.googleads.v21.common.AdTextAsset.Builder> 
         getDescriptionsBuilderList() {
      return getDescriptionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder> 
        getDescriptionsFieldBuilder() {
      if (descriptionsBuilder_ == null) {
        descriptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v21.common.AdTextAsset, com.google.ads.googleads.v21.common.AdTextAsset.Builder, com.google.ads.googleads.v21.common.AdTextAssetOrBuilder>(
                descriptions_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        descriptions_ = null;
      }
      return descriptionsBuilder_;
    }

    private java.lang.Object businessName_ = "";
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @return Whether the businessName field is set.
     */
    public boolean hasBusinessName() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @return The businessName.
     */
    public java.lang.String getBusinessName() {
      java.lang.Object ref = businessName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        businessName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @return The bytes for businessName.
     */
    public com.google.protobuf.ByteString
        getBusinessNameBytes() {
      java.lang.Object ref = businessName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        businessName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @param value The businessName to set.
     * @return This builder for chaining.
     */
    public Builder setBusinessName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      businessName_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBusinessName() {
      businessName_ = getDefaultInstance().getBusinessName();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Advertiser/brand name. Maximum display width is 25. Required.
     * </pre>
     *
     * <code>optional string business_name = 7;</code>
     * @param value The bytes for businessName to set.
     * @return This builder for chaining.
     */
    public Builder setBusinessNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      businessName_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object callToActionText_ = "";
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @return Whether the callToActionText field is set.
     */
    public boolean hasCallToActionText() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @return The callToActionText.
     */
    public java.lang.String getCallToActionText() {
      java.lang.Object ref = callToActionText_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callToActionText_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @return The bytes for callToActionText.
     */
    public com.google.protobuf.ByteString
        getCallToActionTextBytes() {
      java.lang.Object ref = callToActionText_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callToActionText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @param value The callToActionText to set.
     * @return This builder for chaining.
     */
    public Builder setCallToActionText(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      callToActionText_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCallToActionText() {
      callToActionText_ = getDefaultInstance().getCallToActionText();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Call to action text.
     * </pre>
     *
     * <code>optional string call_to_action_text = 8;</code>
     * @param value The bytes for callToActionText to set.
     * @return This builder for chaining.
     */
    public Builder setCallToActionTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      callToActionText_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private boolean leadFormOnly_ ;
    /**
     * <pre>
     * Boolean option that indicates if this ad must be served with lead form.
     * </pre>
     *
     * <code>optional bool lead_form_only = 9;</code>
     * @return Whether the leadFormOnly field is set.
     */
    @java.lang.Override
    public boolean hasLeadFormOnly() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Boolean option that indicates if this ad must be served with lead form.
     * </pre>
     *
     * <code>optional bool lead_form_only = 9;</code>
     * @return The leadFormOnly.
     */
    @java.lang.Override
    public boolean getLeadFormOnly() {
      return leadFormOnly_;
    }
    /**
     * <pre>
     * Boolean option that indicates if this ad must be served with lead form.
     * </pre>
     *
     * <code>optional bool lead_form_only = 9;</code>
     * @param value The leadFormOnly to set.
     * @return This builder for chaining.
     */
    public Builder setLeadFormOnly(boolean value) {

      leadFormOnly_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Boolean option that indicates if this ad must be served with lead form.
     * </pre>
     *
     * <code>optional bool lead_form_only = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearLeadFormOnly() {
      bitField0_ = (bitField0_ & ~0x00000200);
      leadFormOnly_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo)
  private static final com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo();
  }

  public static com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DemandGenMultiAssetAdInfo>
      PARSER = new com.google.protobuf.AbstractParser<DemandGenMultiAssetAdInfo>() {
    @java.lang.Override
    public DemandGenMultiAssetAdInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DemandGenMultiAssetAdInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DemandGenMultiAssetAdInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v21.common.DemandGenMultiAssetAdInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

