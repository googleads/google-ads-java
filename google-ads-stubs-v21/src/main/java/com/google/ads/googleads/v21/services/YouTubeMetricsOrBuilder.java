// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v21/services/content_creator_insights_service.proto

// Protobuf Java Version: 3.25.7
package com.google.ads.googleads.v21.services;

public interface YouTubeMetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.ads.googleads.v21.services.YouTubeMetrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The number of subscribers.
   * </pre>
   *
   * <code>int64 subscriber_count = 1;</code>
   * @return The subscriberCount.
   */
  long getSubscriberCount();

  /**
   * <pre>
   * The total number of views.
   * </pre>
   *
   * <code>int64 views_count = 2;</code>
   * @return The viewsCount.
   */
  long getViewsCount();

  /**
   * <pre>
   * The total number of videos.
   * </pre>
   *
   * <code>int64 video_count = 3;</code>
   * @return The videoCount.
   */
  long getVideoCount();

  /**
   * <pre>
   * The total number of likes across all videos of this channel.
   * </pre>
   *
   * <code>int64 likes_count = 5;</code>
   * @return The likesCount.
   */
  long getLikesCount();

  /**
   * <pre>
   * The total number of shares across all videos of this channel.
   * </pre>
   *
   * <code>int64 shares_count = 6;</code>
   * @return The sharesCount.
   */
  long getSharesCount();

  /**
   * <pre>
   * The total number of comments across all videos of this channel.
   * </pre>
   *
   * <code>int64 comments_count = 7;</code>
   * @return The commentsCount.
   */
  long getCommentsCount();

  /**
   * <pre>
   * The lifetime engagement rate of this channel. The value is computed as the
   * total number of likes, shares, and comments across all videos divided by
   * the total number of videos.
   * </pre>
   *
   * <code>double engagement_rate = 8;</code>
   * @return The engagementRate.
   */
  double getEngagementRate();

  /**
   * <pre>
   * The average number of views per video in the last 28 days.
   * </pre>
   *
   * <code>double average_views_per_video = 9;</code>
   * @return The averageViewsPerVideo.
   */
  double getAverageViewsPerVideo();

  /**
   * <pre>
   * The average number of likes per video in the last 28 days.
   * </pre>
   *
   * <code>double average_likes_per_video = 10;</code>
   * @return The averageLikesPerVideo.
   */
  double getAverageLikesPerVideo();

  /**
   * <pre>
   * The average number of shares per video in the last 28 days.
   * </pre>
   *
   * <code>double average_shares_per_video = 11;</code>
   * @return The averageSharesPerVideo.
   */
  double getAverageSharesPerVideo();

  /**
   * <pre>
   * The average number of comments per video in the last 28 days.
   * </pre>
   *
   * <code>double average_comments_per_video = 12;</code>
   * @return The averageCommentsPerVideo.
   */
  double getAverageCommentsPerVideo();

  /**
   * <pre>
   * The total number of views across all Shorts videos of this channel.
   * </pre>
   *
   * <code>int64 shorts_views_count = 13;</code>
   * @return The shortsViewsCount.
   */
  long getShortsViewsCount();

  /**
   * <pre>
   * The total number of Shorts videos.
   * </pre>
   *
   * <code>int64 shorts_video_count = 14;</code>
   * @return The shortsVideoCount.
   */
  long getShortsVideoCount();

  /**
   * <pre>
   * When true, this channel has published a Shorts video in the last 90 days.
   * </pre>
   *
   * <code>bool is_active_shorts_creator = 4;</code>
   * @return The isActiveShortsCreator.
   */
  boolean getIsActiveShortsCreator();

  /**
   * <pre>
   * When true, this creator can be partnered with to create original branded
   * content using the Google Ads creator partnership platform, BrandConnect.
   *
   * See https://support.google.com/google-ads/answer/13828964 for more
   * information about BrandConnect.
   * </pre>
   *
   * <code>bool is_brand_connect_creator = 15;</code>
   * @return The isBrandConnectCreator.
   */
  boolean getIsBrandConnectCreator();
}
