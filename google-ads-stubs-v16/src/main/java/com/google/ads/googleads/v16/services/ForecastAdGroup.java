// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v16/services/keyword_plan_idea_service.proto

// Protobuf Java Version: 3.25.3
package com.google.ads.googleads.v16.services;

/**
 * <pre>
 * An ad group that is part of a campaign to be forecasted.
 * </pre>
 *
 * Protobuf type {@code google.ads.googleads.v16.services.ForecastAdGroup}
 */
public final class ForecastAdGroup extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.googleads.v16.services.ForecastAdGroup)
    ForecastAdGroupOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ForecastAdGroup.newBuilder() to construct.
  private ForecastAdGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ForecastAdGroup() {
    biddableKeywords_ = java.util.Collections.emptyList();
    negativeKeywords_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ForecastAdGroup();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.googleads.v16.services.KeywordPlanIdeaServiceProto.internal_static_google_ads_googleads_v16_services_ForecastAdGroup_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.googleads.v16.services.KeywordPlanIdeaServiceProto.internal_static_google_ads_googleads_v16_services_ForecastAdGroup_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.googleads.v16.services.ForecastAdGroup.class, com.google.ads.googleads.v16.services.ForecastAdGroup.Builder.class);
  }

  private int bitField0_;
  public static final int MAX_CPC_BID_MICROS_FIELD_NUMBER = 1;
  private long maxCpcBidMicros_ = 0L;
  /**
   * <pre>
   * The max cpc to use for the ad group when generating forecasted traffic.
   * This value will override the max cpc value set in the bidding strategy.
   * Only specify this field for bidding strategies that max cpc values.
   * </pre>
   *
   * <code>optional int64 max_cpc_bid_micros = 1;</code>
   * @return Whether the maxCpcBidMicros field is set.
   */
  @java.lang.Override
  public boolean hasMaxCpcBidMicros() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The max cpc to use for the ad group when generating forecasted traffic.
   * This value will override the max cpc value set in the bidding strategy.
   * Only specify this field for bidding strategies that max cpc values.
   * </pre>
   *
   * <code>optional int64 max_cpc_bid_micros = 1;</code>
   * @return The maxCpcBidMicros.
   */
  @java.lang.Override
  public long getMaxCpcBidMicros() {
    return maxCpcBidMicros_;
  }

  public static final int BIDDABLE_KEYWORDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v16.services.BiddableKeyword> biddableKeywords_;
  /**
   * <pre>
   * Required. The list of biddable keywords to be used in the ad group when
   * doing the forecast. Requires at least one keyword.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v16.services.BiddableKeyword> getBiddableKeywordsList() {
    return biddableKeywords_;
  }
  /**
   * <pre>
   * Required. The list of biddable keywords to be used in the ad group when
   * doing the forecast. Requires at least one keyword.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder> 
      getBiddableKeywordsOrBuilderList() {
    return biddableKeywords_;
  }
  /**
   * <pre>
   * Required. The list of biddable keywords to be used in the ad group when
   * doing the forecast. Requires at least one keyword.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public int getBiddableKeywordsCount() {
    return biddableKeywords_.size();
  }
  /**
   * <pre>
   * Required. The list of biddable keywords to be used in the ad group when
   * doing the forecast. Requires at least one keyword.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v16.services.BiddableKeyword getBiddableKeywords(int index) {
    return biddableKeywords_.get(index);
  }
  /**
   * <pre>
   * Required. The list of biddable keywords to be used in the ad group when
   * doing the forecast. Requires at least one keyword.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder getBiddableKeywordsOrBuilder(
      int index) {
    return biddableKeywords_.get(index);
  }

  public static final int NEGATIVE_KEYWORDS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ads.googleads.v16.common.KeywordInfo> negativeKeywords_;
  /**
   * <pre>
   * The details of the keyword. You should specify both the keyword text and
   * match type.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ads.googleads.v16.common.KeywordInfo> getNegativeKeywordsList() {
    return negativeKeywords_;
  }
  /**
   * <pre>
   * The details of the keyword. You should specify both the keyword text and
   * match type.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ads.googleads.v16.common.KeywordInfoOrBuilder> 
      getNegativeKeywordsOrBuilderList() {
    return negativeKeywords_;
  }
  /**
   * <pre>
   * The details of the keyword. You should specify both the keyword text and
   * match type.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
   */
  @java.lang.Override
  public int getNegativeKeywordsCount() {
    return negativeKeywords_.size();
  }
  /**
   * <pre>
   * The details of the keyword. You should specify both the keyword text and
   * match type.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v16.common.KeywordInfo getNegativeKeywords(int index) {
    return negativeKeywords_.get(index);
  }
  /**
   * <pre>
   * The details of the keyword. You should specify both the keyword text and
   * match type.
   * </pre>
   *
   * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
   */
  @java.lang.Override
  public com.google.ads.googleads.v16.common.KeywordInfoOrBuilder getNegativeKeywordsOrBuilder(
      int index) {
    return negativeKeywords_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, maxCpcBidMicros_);
    }
    for (int i = 0; i < biddableKeywords_.size(); i++) {
      output.writeMessage(2, biddableKeywords_.get(i));
    }
    for (int i = 0; i < negativeKeywords_.size(); i++) {
      output.writeMessage(3, negativeKeywords_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, maxCpcBidMicros_);
    }
    for (int i = 0; i < biddableKeywords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, biddableKeywords_.get(i));
    }
    for (int i = 0; i < negativeKeywords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, negativeKeywords_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.googleads.v16.services.ForecastAdGroup)) {
      return super.equals(obj);
    }
    com.google.ads.googleads.v16.services.ForecastAdGroup other = (com.google.ads.googleads.v16.services.ForecastAdGroup) obj;

    if (hasMaxCpcBidMicros() != other.hasMaxCpcBidMicros()) return false;
    if (hasMaxCpcBidMicros()) {
      if (getMaxCpcBidMicros()
          != other.getMaxCpcBidMicros()) return false;
    }
    if (!getBiddableKeywordsList()
        .equals(other.getBiddableKeywordsList())) return false;
    if (!getNegativeKeywordsList()
        .equals(other.getNegativeKeywordsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMaxCpcBidMicros()) {
      hash = (37 * hash) + MAX_CPC_BID_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxCpcBidMicros());
    }
    if (getBiddableKeywordsCount() > 0) {
      hash = (37 * hash) + BIDDABLE_KEYWORDS_FIELD_NUMBER;
      hash = (53 * hash) + getBiddableKeywordsList().hashCode();
    }
    if (getNegativeKeywordsCount() > 0) {
      hash = (37 * hash) + NEGATIVE_KEYWORDS_FIELD_NUMBER;
      hash = (53 * hash) + getNegativeKeywordsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.googleads.v16.services.ForecastAdGroup parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.googleads.v16.services.ForecastAdGroup prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An ad group that is part of a campaign to be forecasted.
   * </pre>
   *
   * Protobuf type {@code google.ads.googleads.v16.services.ForecastAdGroup}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.googleads.v16.services.ForecastAdGroup)
      com.google.ads.googleads.v16.services.ForecastAdGroupOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.googleads.v16.services.KeywordPlanIdeaServiceProto.internal_static_google_ads_googleads_v16_services_ForecastAdGroup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.googleads.v16.services.KeywordPlanIdeaServiceProto.internal_static_google_ads_googleads_v16_services_ForecastAdGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.googleads.v16.services.ForecastAdGroup.class, com.google.ads.googleads.v16.services.ForecastAdGroup.Builder.class);
    }

    // Construct using com.google.ads.googleads.v16.services.ForecastAdGroup.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      maxCpcBidMicros_ = 0L;
      if (biddableKeywordsBuilder_ == null) {
        biddableKeywords_ = java.util.Collections.emptyList();
      } else {
        biddableKeywords_ = null;
        biddableKeywordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (negativeKeywordsBuilder_ == null) {
        negativeKeywords_ = java.util.Collections.emptyList();
      } else {
        negativeKeywords_ = null;
        negativeKeywordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.googleads.v16.services.KeywordPlanIdeaServiceProto.internal_static_google_ads_googleads_v16_services_ForecastAdGroup_descriptor;
    }

    @java.lang.Override
    public com.google.ads.googleads.v16.services.ForecastAdGroup getDefaultInstanceForType() {
      return com.google.ads.googleads.v16.services.ForecastAdGroup.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.googleads.v16.services.ForecastAdGroup build() {
      com.google.ads.googleads.v16.services.ForecastAdGroup result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.googleads.v16.services.ForecastAdGroup buildPartial() {
      com.google.ads.googleads.v16.services.ForecastAdGroup result = new com.google.ads.googleads.v16.services.ForecastAdGroup(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.ads.googleads.v16.services.ForecastAdGroup result) {
      if (biddableKeywordsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          biddableKeywords_ = java.util.Collections.unmodifiableList(biddableKeywords_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.biddableKeywords_ = biddableKeywords_;
      } else {
        result.biddableKeywords_ = biddableKeywordsBuilder_.build();
      }
      if (negativeKeywordsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          negativeKeywords_ = java.util.Collections.unmodifiableList(negativeKeywords_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.negativeKeywords_ = negativeKeywords_;
      } else {
        result.negativeKeywords_ = negativeKeywordsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.ads.googleads.v16.services.ForecastAdGroup result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.maxCpcBidMicros_ = maxCpcBidMicros_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.googleads.v16.services.ForecastAdGroup) {
        return mergeFrom((com.google.ads.googleads.v16.services.ForecastAdGroup)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.googleads.v16.services.ForecastAdGroup other) {
      if (other == com.google.ads.googleads.v16.services.ForecastAdGroup.getDefaultInstance()) return this;
      if (other.hasMaxCpcBidMicros()) {
        setMaxCpcBidMicros(other.getMaxCpcBidMicros());
      }
      if (biddableKeywordsBuilder_ == null) {
        if (!other.biddableKeywords_.isEmpty()) {
          if (biddableKeywords_.isEmpty()) {
            biddableKeywords_ = other.biddableKeywords_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBiddableKeywordsIsMutable();
            biddableKeywords_.addAll(other.biddableKeywords_);
          }
          onChanged();
        }
      } else {
        if (!other.biddableKeywords_.isEmpty()) {
          if (biddableKeywordsBuilder_.isEmpty()) {
            biddableKeywordsBuilder_.dispose();
            biddableKeywordsBuilder_ = null;
            biddableKeywords_ = other.biddableKeywords_;
            bitField0_ = (bitField0_ & ~0x00000002);
            biddableKeywordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBiddableKeywordsFieldBuilder() : null;
          } else {
            biddableKeywordsBuilder_.addAllMessages(other.biddableKeywords_);
          }
        }
      }
      if (negativeKeywordsBuilder_ == null) {
        if (!other.negativeKeywords_.isEmpty()) {
          if (negativeKeywords_.isEmpty()) {
            negativeKeywords_ = other.negativeKeywords_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNegativeKeywordsIsMutable();
            negativeKeywords_.addAll(other.negativeKeywords_);
          }
          onChanged();
        }
      } else {
        if (!other.negativeKeywords_.isEmpty()) {
          if (negativeKeywordsBuilder_.isEmpty()) {
            negativeKeywordsBuilder_.dispose();
            negativeKeywordsBuilder_ = null;
            negativeKeywords_ = other.negativeKeywords_;
            bitField0_ = (bitField0_ & ~0x00000004);
            negativeKeywordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNegativeKeywordsFieldBuilder() : null;
          } else {
            negativeKeywordsBuilder_.addAllMessages(other.negativeKeywords_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              maxCpcBidMicros_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              com.google.ads.googleads.v16.services.BiddableKeyword m =
                  input.readMessage(
                      com.google.ads.googleads.v16.services.BiddableKeyword.parser(),
                      extensionRegistry);
              if (biddableKeywordsBuilder_ == null) {
                ensureBiddableKeywordsIsMutable();
                biddableKeywords_.add(m);
              } else {
                biddableKeywordsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.ads.googleads.v16.common.KeywordInfo m =
                  input.readMessage(
                      com.google.ads.googleads.v16.common.KeywordInfo.parser(),
                      extensionRegistry);
              if (negativeKeywordsBuilder_ == null) {
                ensureNegativeKeywordsIsMutable();
                negativeKeywords_.add(m);
              } else {
                negativeKeywordsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long maxCpcBidMicros_ ;
    /**
     * <pre>
     * The max cpc to use for the ad group when generating forecasted traffic.
     * This value will override the max cpc value set in the bidding strategy.
     * Only specify this field for bidding strategies that max cpc values.
     * </pre>
     *
     * <code>optional int64 max_cpc_bid_micros = 1;</code>
     * @return Whether the maxCpcBidMicros field is set.
     */
    @java.lang.Override
    public boolean hasMaxCpcBidMicros() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The max cpc to use for the ad group when generating forecasted traffic.
     * This value will override the max cpc value set in the bidding strategy.
     * Only specify this field for bidding strategies that max cpc values.
     * </pre>
     *
     * <code>optional int64 max_cpc_bid_micros = 1;</code>
     * @return The maxCpcBidMicros.
     */
    @java.lang.Override
    public long getMaxCpcBidMicros() {
      return maxCpcBidMicros_;
    }
    /**
     * <pre>
     * The max cpc to use for the ad group when generating forecasted traffic.
     * This value will override the max cpc value set in the bidding strategy.
     * Only specify this field for bidding strategies that max cpc values.
     * </pre>
     *
     * <code>optional int64 max_cpc_bid_micros = 1;</code>
     * @param value The maxCpcBidMicros to set.
     * @return This builder for chaining.
     */
    public Builder setMaxCpcBidMicros(long value) {

      maxCpcBidMicros_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The max cpc to use for the ad group when generating forecasted traffic.
     * This value will override the max cpc value set in the bidding strategy.
     * Only specify this field for bidding strategies that max cpc values.
     * </pre>
     *
     * <code>optional int64 max_cpc_bid_micros = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxCpcBidMicros() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxCpcBidMicros_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.google.ads.googleads.v16.services.BiddableKeyword> biddableKeywords_ =
      java.util.Collections.emptyList();
    private void ensureBiddableKeywordsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        biddableKeywords_ = new java.util.ArrayList<com.google.ads.googleads.v16.services.BiddableKeyword>(biddableKeywords_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v16.services.BiddableKeyword, com.google.ads.googleads.v16.services.BiddableKeyword.Builder, com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder> biddableKeywordsBuilder_;

    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.ads.googleads.v16.services.BiddableKeyword> getBiddableKeywordsList() {
      if (biddableKeywordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(biddableKeywords_);
      } else {
        return biddableKeywordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public int getBiddableKeywordsCount() {
      if (biddableKeywordsBuilder_ == null) {
        return biddableKeywords_.size();
      } else {
        return biddableKeywordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ads.googleads.v16.services.BiddableKeyword getBiddableKeywords(int index) {
      if (biddableKeywordsBuilder_ == null) {
        return biddableKeywords_.get(index);
      } else {
        return biddableKeywordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setBiddableKeywords(
        int index, com.google.ads.googleads.v16.services.BiddableKeyword value) {
      if (biddableKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.set(index, value);
        onChanged();
      } else {
        biddableKeywordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setBiddableKeywords(
        int index, com.google.ads.googleads.v16.services.BiddableKeyword.Builder builderForValue) {
      if (biddableKeywordsBuilder_ == null) {
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.set(index, builderForValue.build());
        onChanged();
      } else {
        biddableKeywordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addBiddableKeywords(com.google.ads.googleads.v16.services.BiddableKeyword value) {
      if (biddableKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.add(value);
        onChanged();
      } else {
        biddableKeywordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addBiddableKeywords(
        int index, com.google.ads.googleads.v16.services.BiddableKeyword value) {
      if (biddableKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.add(index, value);
        onChanged();
      } else {
        biddableKeywordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addBiddableKeywords(
        com.google.ads.googleads.v16.services.BiddableKeyword.Builder builderForValue) {
      if (biddableKeywordsBuilder_ == null) {
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.add(builderForValue.build());
        onChanged();
      } else {
        biddableKeywordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addBiddableKeywords(
        int index, com.google.ads.googleads.v16.services.BiddableKeyword.Builder builderForValue) {
      if (biddableKeywordsBuilder_ == null) {
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.add(index, builderForValue.build());
        onChanged();
      } else {
        biddableKeywordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addAllBiddableKeywords(
        java.lang.Iterable<? extends com.google.ads.googleads.v16.services.BiddableKeyword> values) {
      if (biddableKeywordsBuilder_ == null) {
        ensureBiddableKeywordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, biddableKeywords_);
        onChanged();
      } else {
        biddableKeywordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearBiddableKeywords() {
      if (biddableKeywordsBuilder_ == null) {
        biddableKeywords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        biddableKeywordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder removeBiddableKeywords(int index) {
      if (biddableKeywordsBuilder_ == null) {
        ensureBiddableKeywordsIsMutable();
        biddableKeywords_.remove(index);
        onChanged();
      } else {
        biddableKeywordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ads.googleads.v16.services.BiddableKeyword.Builder getBiddableKeywordsBuilder(
        int index) {
      return getBiddableKeywordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder getBiddableKeywordsOrBuilder(
        int index) {
      if (biddableKeywordsBuilder_ == null) {
        return biddableKeywords_.get(index);  } else {
        return biddableKeywordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder> 
         getBiddableKeywordsOrBuilderList() {
      if (biddableKeywordsBuilder_ != null) {
        return biddableKeywordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(biddableKeywords_);
      }
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ads.googleads.v16.services.BiddableKeyword.Builder addBiddableKeywordsBuilder() {
      return getBiddableKeywordsFieldBuilder().addBuilder(
          com.google.ads.googleads.v16.services.BiddableKeyword.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ads.googleads.v16.services.BiddableKeyword.Builder addBiddableKeywordsBuilder(
        int index) {
      return getBiddableKeywordsFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v16.services.BiddableKeyword.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The list of biddable keywords to be used in the ad group when
     * doing the forecast. Requires at least one keyword.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.services.BiddableKeyword biddable_keywords = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.ads.googleads.v16.services.BiddableKeyword.Builder> 
         getBiddableKeywordsBuilderList() {
      return getBiddableKeywordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v16.services.BiddableKeyword, com.google.ads.googleads.v16.services.BiddableKeyword.Builder, com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder> 
        getBiddableKeywordsFieldBuilder() {
      if (biddableKeywordsBuilder_ == null) {
        biddableKeywordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v16.services.BiddableKeyword, com.google.ads.googleads.v16.services.BiddableKeyword.Builder, com.google.ads.googleads.v16.services.BiddableKeywordOrBuilder>(
                biddableKeywords_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        biddableKeywords_ = null;
      }
      return biddableKeywordsBuilder_;
    }

    private java.util.List<com.google.ads.googleads.v16.common.KeywordInfo> negativeKeywords_ =
      java.util.Collections.emptyList();
    private void ensureNegativeKeywordsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        negativeKeywords_ = new java.util.ArrayList<com.google.ads.googleads.v16.common.KeywordInfo>(negativeKeywords_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v16.common.KeywordInfo, com.google.ads.googleads.v16.common.KeywordInfo.Builder, com.google.ads.googleads.v16.common.KeywordInfoOrBuilder> negativeKeywordsBuilder_;

    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public java.util.List<com.google.ads.googleads.v16.common.KeywordInfo> getNegativeKeywordsList() {
      if (negativeKeywordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(negativeKeywords_);
      } else {
        return negativeKeywordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public int getNegativeKeywordsCount() {
      if (negativeKeywordsBuilder_ == null) {
        return negativeKeywords_.size();
      } else {
        return negativeKeywordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public com.google.ads.googleads.v16.common.KeywordInfo getNegativeKeywords(int index) {
      if (negativeKeywordsBuilder_ == null) {
        return negativeKeywords_.get(index);
      } else {
        return negativeKeywordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder setNegativeKeywords(
        int index, com.google.ads.googleads.v16.common.KeywordInfo value) {
      if (negativeKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.set(index, value);
        onChanged();
      } else {
        negativeKeywordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder setNegativeKeywords(
        int index, com.google.ads.googleads.v16.common.KeywordInfo.Builder builderForValue) {
      if (negativeKeywordsBuilder_ == null) {
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.set(index, builderForValue.build());
        onChanged();
      } else {
        negativeKeywordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder addNegativeKeywords(com.google.ads.googleads.v16.common.KeywordInfo value) {
      if (negativeKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.add(value);
        onChanged();
      } else {
        negativeKeywordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder addNegativeKeywords(
        int index, com.google.ads.googleads.v16.common.KeywordInfo value) {
      if (negativeKeywordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.add(index, value);
        onChanged();
      } else {
        negativeKeywordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder addNegativeKeywords(
        com.google.ads.googleads.v16.common.KeywordInfo.Builder builderForValue) {
      if (negativeKeywordsBuilder_ == null) {
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.add(builderForValue.build());
        onChanged();
      } else {
        negativeKeywordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder addNegativeKeywords(
        int index, com.google.ads.googleads.v16.common.KeywordInfo.Builder builderForValue) {
      if (negativeKeywordsBuilder_ == null) {
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.add(index, builderForValue.build());
        onChanged();
      } else {
        negativeKeywordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder addAllNegativeKeywords(
        java.lang.Iterable<? extends com.google.ads.googleads.v16.common.KeywordInfo> values) {
      if (negativeKeywordsBuilder_ == null) {
        ensureNegativeKeywordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, negativeKeywords_);
        onChanged();
      } else {
        negativeKeywordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder clearNegativeKeywords() {
      if (negativeKeywordsBuilder_ == null) {
        negativeKeywords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        negativeKeywordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public Builder removeNegativeKeywords(int index) {
      if (negativeKeywordsBuilder_ == null) {
        ensureNegativeKeywordsIsMutable();
        negativeKeywords_.remove(index);
        onChanged();
      } else {
        negativeKeywordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public com.google.ads.googleads.v16.common.KeywordInfo.Builder getNegativeKeywordsBuilder(
        int index) {
      return getNegativeKeywordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public com.google.ads.googleads.v16.common.KeywordInfoOrBuilder getNegativeKeywordsOrBuilder(
        int index) {
      if (negativeKeywordsBuilder_ == null) {
        return negativeKeywords_.get(index);  } else {
        return negativeKeywordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public java.util.List<? extends com.google.ads.googleads.v16.common.KeywordInfoOrBuilder> 
         getNegativeKeywordsOrBuilderList() {
      if (negativeKeywordsBuilder_ != null) {
        return negativeKeywordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(negativeKeywords_);
      }
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public com.google.ads.googleads.v16.common.KeywordInfo.Builder addNegativeKeywordsBuilder() {
      return getNegativeKeywordsFieldBuilder().addBuilder(
          com.google.ads.googleads.v16.common.KeywordInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public com.google.ads.googleads.v16.common.KeywordInfo.Builder addNegativeKeywordsBuilder(
        int index) {
      return getNegativeKeywordsFieldBuilder().addBuilder(
          index, com.google.ads.googleads.v16.common.KeywordInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * The details of the keyword. You should specify both the keyword text and
     * match type.
     * </pre>
     *
     * <code>repeated .google.ads.googleads.v16.common.KeywordInfo negative_keywords = 3;</code>
     */
    public java.util.List<com.google.ads.googleads.v16.common.KeywordInfo.Builder> 
         getNegativeKeywordsBuilderList() {
      return getNegativeKeywordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ads.googleads.v16.common.KeywordInfo, com.google.ads.googleads.v16.common.KeywordInfo.Builder, com.google.ads.googleads.v16.common.KeywordInfoOrBuilder> 
        getNegativeKeywordsFieldBuilder() {
      if (negativeKeywordsBuilder_ == null) {
        negativeKeywordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ads.googleads.v16.common.KeywordInfo, com.google.ads.googleads.v16.common.KeywordInfo.Builder, com.google.ads.googleads.v16.common.KeywordInfoOrBuilder>(
                negativeKeywords_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        negativeKeywords_ = null;
      }
      return negativeKeywordsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.googleads.v16.services.ForecastAdGroup)
  }

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v16.services.ForecastAdGroup)
  private static final com.google.ads.googleads.v16.services.ForecastAdGroup DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.googleads.v16.services.ForecastAdGroup();
  }

  public static com.google.ads.googleads.v16.services.ForecastAdGroup getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ForecastAdGroup>
      PARSER = new com.google.protobuf.AbstractParser<ForecastAdGroup>() {
    @java.lang.Override
    public ForecastAdGroup parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ForecastAdGroup> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ForecastAdGroup> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.googleads.v16.services.ForecastAdGroup getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

